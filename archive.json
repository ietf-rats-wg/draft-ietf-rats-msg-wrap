{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-11-21T00:53:29.772493+00:00",
  "repo": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "WGLC",
      "description": "WGLC comments",
      "color": "42B639"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOIGCt2M5Ttodl",
      "title": "IANA considerations",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/1",
      "state": "CLOSED",
      "author": "ionut-arm",
      "authorAssociation": "NONE",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "The IANA considerations section should be filled out to describe the requirements for defining, describing, and registering the media type formats that would be used within the wrapper.",
      "createdAt": "2022-10-11T11:26:45Z",
      "updatedAt": "2022-10-12T13:29:26Z",
      "closedAt": "2022-10-12T13:29:26Z",
      "comments": []
    },
    {
      "number": 2,
      "id": "I_kwDOIGCt2M5TtoyJ",
      "title": "Abstract & introduction",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/2",
      "state": "CLOSED",
      "author": "ionut-arm",
      "authorAssociation": "NONE",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "The Abstract/Introduction sections are fairly thin - we should add more details about the expected use cases.",
      "createdAt": "2022-10-11T11:27:49Z",
      "updatedAt": "2022-10-12T17:24:52Z",
      "closedAt": "2022-10-12T17:24:52Z",
      "comments": []
    },
    {
      "number": 8,
      "id": "I_kwDOIGCt2M5UYe7t",
      "title": "what about pre-existing CBOR tags?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/8",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need to define how to deal with CBOR tags that exist independently of a CoAP C-F.",
      "createdAt": "2022-10-19T23:36:07Z",
      "updatedAt": "2022-10-20T12:00:04Z",
      "closedAt": "2022-10-20T12:00:04Z",
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOIGCt2M5UdJ7L",
      "title": "clearly describe encap/decap algorithm",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/10",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In order to avoid misunderstandings, it'd be beneficial to describe the encap/decap algorithms in a more explicit manner",
      "createdAt": "2022-10-20T16:30:57Z",
      "updatedAt": "2023-03-06T09:31:25Z",
      "closedAt": "2023-03-06T09:31:25Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Maybe add this bit from the TCG spec:\r\n\r\n```\r\nA parser decodes the octet string into a byte buffer\r\nand then does a 1-byte lookahead, as illustrated in the\r\nfollowing pseudo code, to decide which format to use to\r\ndecode the remainder of the byte buffer:\r\n```\r\n```golang\r\nswitch b[0] {\r\ncase 0x82:\r\n  return CBORArray\r\ncase 0x5b:\r\n  return JSONArray\r\ndefault:\r\n  return CBORTag\r\n}\r\n```\r\n",
          "createdAt": "2023-03-02T14:22:32Z",
          "updatedAt": "2023-03-02T14:22:32Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOIGCt2M5Vm6MQ",
      "title": "fix IANA section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/11",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Should include \u201cThis document does not require any IANA actions.\u201d\r\ndiscuss if normative for authors should exist here.",
      "createdAt": "2022-11-04T15:30:27Z",
      "updatedAt": "2023-03-06T16:51:22Z",
      "closedAt": "2023-03-06T16:51:22Z",
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDOIGCt2M5V1A4T",
      "title": "Reuse terminology from RFC 9193",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/12",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RFC9193 provides an [excellent glossary](https://www.rfc-editor.org/rfc/rfc9193.html#name-terminology) for all things \"media types\".  We should stick to that.\r\n\r\n",
      "createdAt": "2022-11-08T10:59:18Z",
      "updatedAt": "2023-03-06T16:51:23Z",
      "closedAt": "2023-03-06T16:51:23Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "I_kwDOIGCt2M5V1F93",
      "title": "RFC6383 rule in the CDDL is wrong",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/13",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Email from @cabo:\r\n\r\n> The CDDL rule RFC6383 doesn\u2019t quite mirror what RFC 6383 actually says.\r\n> You put in a new rule for suffixes, but the way you are using \u201c+\u201d, these will become part of the restricted-name; maybe you need to take out\r\n>\r\n```\r\n   restricted-name-chars =/ \"+\" ; Characters after last plus always\r\n                                ; specify a structured syntax suffix\r\n```",
      "createdAt": "2022-11-08T11:11:37Z",
      "updatedAt": "2023-03-06T16:51:23Z",
      "closedAt": "2023-03-06T16:51:23Z",
      "comments": []
    },
    {
      "number": 14,
      "id": "I_kwDOIGCt2M5W5uFB",
      "title": "Carl's review points",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/14",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "* In the third sentence of intro, message should be plural\r\n* The definition of RFC6838 in the CDDL looks to be incomplete\r\n* Re: suffixes, I was assuming certificate extension support would use the DER/BER values. What about CRL extensions? Is PEM needed as well?\r\n* The structured suffix link in Section 3.1 is broken.\r\n* Maybe reference EAT media types spec as initial values of interest.",
      "createdAt": "2022-11-21T13:41:14Z",
      "updatedAt": "2023-03-08T11:44:56Z",
      "closedAt": "2023-03-06T17:30:51Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "/cc @carl-wallace",
          "createdAt": "2022-11-21T13:42:19Z",
          "updatedAt": "2022-11-21T13:42:19Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "* [x] In the third sentence of intro, message should be plural\r\n* [x] The definition of RFC6838 in the CDDL looks to be incomplete\r\n* [x] The structured suffix link in Section 3.1 is broken.\r\n* [x] Maybe reference EAT media types spec as initial values of interest.\r\n\r\n> Re: suffixes, I was assuming certificate extension support would use the DER/BER values. What about CRL extensions? Is PEM needed as well?\r\n\r\nI am not sure I understand.  I'll seek clarification from Carl on the list.\r\n",
          "createdAt": "2023-03-06T14:32:04Z",
          "updatedAt": "2023-03-06T14:32:04Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "The leftover point is tracked in #18 ",
          "createdAt": "2023-03-06T17:30:51Z",
          "updatedAt": "2023-03-06T17:30:51Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "NONE",
          "body": "I was asking how the enumerated list of suffixes (in the -01 draft) applied to certificates and CRLs. I was assuming that ber/der signified certificates and was asking if something was needed for CRLs and whether or not PEM support was necessary. Upon re-reading, the ber/der assumption was wrong (the suffix is more general than certificates). Whether or not PEM is needed may be worth considering but it's not really relevant to this draft. I'd just ignore that comment.",
          "createdAt": "2023-03-08T11:44:56Z",
          "updatedAt": "2023-03-08T11:44:56Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOIGCt2M5ZqlNO",
      "title": "Carl's in depth review",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/15",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://mailarchive.ietf.org/arch/msg/rats/Bmlxnu0GmnRMsP6WEq3CBjLVm0k/\r\n",
      "createdAt": "2022-12-20T10:31:12Z",
      "updatedAt": "2023-10-04T08:13:10Z",
      "closedAt": "2023-10-04T08:13:10Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Below are some suggestions/questions regarding the RATS Conceptual Messages Wrapper draft (draft-ftbs-rats-msg-wrap-00).\r\n\r\n## \ufeffAbstract\r\n* [x] Should the spec have a broader title/focus since there appears to be nothing to limit usage to RATS conceptual messages?\r\n\r\n> While the mechanism is generic -- at least in part, now that we added the CM indicator to the array serialisation -- we want to keep the scope limited to RATS messages.\r\n\r\n* [x] How does this draft relate to the EAT Media Types draft? That draft states that is \"defines media types to be used for Entity Attestation Token (EAT) payloads independently of the RATS Conceptual Message in which they manifest themselves.\" Does this mean a separate media-type would be used with the encapsulation mechanisms defined in this draft?\r\n\r\n> This encap is intended for tunnelling RATS messages in protocols that don't use media types as first class type identifiers themselves.  The relation of this spec with the EAT media type I-D is one of \"consumer\": if EAT MT has a type that is good for the message, we can use it.\r\n\r\n## Section 1\r\n* [x] In the first sentence of the second paragraph, what is being registered or used interoperably? This would clarify what \"their\" means in the second sentence. I think the media type notion might need to be introduced before this paragraph.\r\n\r\n> In #22, I hope I have explained a bit better the basic reason for providing a single encap, and what registrations we are amortising.\r\n\r\n## Section 3.1\r\n* [x] Is there any reason to not use `.det` with indentation of the RFC6838 definition? I think that'd be easier to read.\r\n\r\n> To improve readability this has now been separated into its own section.\r\n\r\n## Section 3.2\r\n* [x] What if a CoAP Content Format does not exist for the media type? I am assuming a media-type value is used, but it may be worth stating that.\r\n\r\n> Done in #23\r\n\r\n* [x] Are tag definitions intended to adhere to the same limitations defined for the value field in the array, i.e., `cbor-bytes / base64-string` serialized per the tag number? If not, what would govern the type?\r\n\r\n> This is stated in \u00a73.2: _\"[...] encoded as a CBOR byte string, to which the tag is prepended.\"_\r\n\r\n## Section 4\r\n* [x] I think it would be helpful to include ASCII hex of the CBOR encodings in addition to the diagnostic (i.e., `8219753144ABCDABCD` and `DA6374763244ABCDABCD`).\r\n\r\n> Agreed; we have added the CBOR \"pretty\" output to the examples.\r\n\r\n* [x] It may be worth including a CBOR example with a media-type value. This could possibly be as a second hypothetical for which no CoAP content format has been defined or as an example with parameters of the same type as current example.\r\n\r\n> Done in #23\r\n\r\n* [x] It may be worth showing the CDDL definition of the resulting tag as it may appear in some protocol definition, i.e.. `example_tag = #6.1668576818(bstr)`.\r\n\r\n> We have now used a brand new CDDL feature ([\"non-literal CBOR tag numbers\"](https://www.ietf.org/archive/id/draft-bormann-cbor-cddl-2-draft-01.html#section-2.2)) in \u00a73.2 to do that in a generic way.\r\n",
          "createdAt": "2023-03-06T17:32:55Z",
          "updatedAt": "2023-04-03T09:07:42Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "hi Carl, we think we addressed all your points.  See https://thomas-fossati.github.io/draft-ftbs-rats-msg-wrap/draft-ftbs-rats-msg-wrap.html\r\n\r\nCould you please check when you have some spare time?\r\n\r\n/cc @carl-wallace ",
          "createdAt": "2023-04-19T11:43:42Z",
          "updatedAt": "2023-04-19T11:43:42Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "NONE",
          "body": "Yep. Thanks. A few nits/comments:\r\n\r\n \r\n\r\n- In third sentence of first paragraph in section 1, \u201cRATS conceptual message\u201d should be plural.\r\n\r\n- In the cm-type definition, attestation-result should probably be plural.\r\n\r\n- In the first sentence of section 3.2, \"may be derived from CoAP Content-Format numbers\" may be more accurate given section 3.2.1's allowance for other registered tags.\r\n\r\n- I wonder if including <coap-cf-tag-number> in the definition of cmw-cbor-tag<bytes> is right given other values can be used. Maybe #6.<uint>(bytes) for the definition with coap-cf-tag-number defining the range where a registered tag is not in use? I'm not sure if it's better to have a definition like #6.<cmw-cbor-tag> that does not cover the range of what is acceptable or something overly broad like #6.<uint> (or if I am just missing something here).\r\n\r\n- Should the lookahead for CBORTag be bounded on 0xdb instead of 0xdf? The jump table in RFC 8949 has 0xdb as highest value.",
          "createdAt": "2023-04-20T19:56:36Z",
          "updatedAt": "2023-04-24T09:57:35Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Yep. Thanks.\r\n\r\nCool, thanks for checking (and for the further comments).\r\n\r\n> A few nits/comments: [...]\r\n\r\ndone in https://github.com/thomas-fossati/draft-ftbs-rats-msg-wrap/pull/30",
          "createdAt": "2023-04-24T10:31:01Z",
          "updatedAt": "2023-04-24T10:31:01Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Carl's original review was addressed in #22 and #23.\r\n\r\nThe follow-up re-review (https://github.com/thomas-fossati/draft-ftbs-rats-msg-wrap/issues/15#issuecomment-1516870623) has been addressed in #30 ",
          "createdAt": "2023-10-04T08:13:10Z",
          "updatedAt": "2023-10-04T08:13:10Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOIGCt2M5gE51M",
      "title": "One remaining point from Carl",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/18",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "help wanted"
      ],
      "body": "This is a left over from #14 \r\n\r\n> Re: suffixes, I was assuming certificate extension support would use the DER/BER values. What about CRL extensions? Is PEM needed as well?",
      "createdAt": "2023-03-06T17:29:10Z",
      "updatedAt": "2023-04-03T09:10:26Z",
      "closedAt": "2023-04-03T09:10:26Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "TODO: seek clarification from Carl on the list.",
          "createdAt": "2023-03-06T17:29:21Z",
          "updatedAt": "2023-03-06T17:29:21Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@carl-wallace, I wanted to reply to your original message but I am unable to find it...\r\n\r\nThe trivial answer to your:\r\n\r\n> What about CRL extensions? Is PEM needed as well?\r\n\r\nwould be \"yes.\"  However, it's not clear to me whether you expect / suggest an action for CMW?\r\n\r\n",
          "createdAt": "2023-03-07T21:00:53Z",
          "updatedAt": "2023-03-07T21:00:53Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@carl-wallace I am closing this (for now).  Feel free to reopen it if you think there is an action needed from us.",
          "createdAt": "2023-04-03T09:10:26Z",
          "updatedAt": "2023-04-03T09:10:26Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOIGCt2M5heylI",
      "title": "registration flow",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/19",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "To help understanding what are the (registration) preconditions for using a specific CMW format, it _may_ be useful to stick the picture below somewhere.\r\n\r\n```\r\n        .-------------.    .---------.\r\n       | Reuse EAT     |  | Register  |\r\n       | media type    |  | new media |\r\n       | + eat_profile |  | type      |\r\n        `--+----+-----'    `-+----+--'\r\n           |    |            |    |\r\n           |  .-+------------+-.  |\r\n           | |  |  Register  |  | |\r\n         .-(-+-'   new CoAP   `-+-(-.\r\n        |  | |  Content-Format  | |  |\r\n        |  |  `-------+--------'  |  |\r\n        |  |          |           |  |\r\n        |  |          v           |  |\r\n        |  |   .--------------.   |  |  .--------.\r\n        |  |  | Automatically  |  |  | | Existing |\r\n        |  |  | derive CBOR    |  |  | | CBOR     |\r\n        |  |  | tag [RFC9277]  |  |  | | tag      |\r\n        |  |   `------+-------'   |  |  `---+----'\r\n        |  |          |           |  |      |\r\n        |  |          |.----------(--(-----'\r\n        |  |          |           |  |\r\n        |  |          v           |  |\r\n        |  |   .----------------. |  |\r\n        |  |  /  CBOR tag CMW  /  |  |\r\n        v  v `----------------'   v  v\r\n    .--------------------------------------.\r\n   /             Array CMW                /\r\n  `--------------------------------------'\r\n```",
      "createdAt": "2023-03-22T10:14:05Z",
      "updatedAt": "2023-04-02T17:35:11Z",
      "closedAt": "2023-04-02T17:35:11Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Suggest bottom box be labeled \"Type and Value CMW\"",
          "createdAt": "2023-03-22T17:28:38Z",
          "updatedAt": "2023-03-22T17:28:38Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Suggest bottom box be labeled \"Type and Value CMW\"\r\n\r\nupdated to \"Array CMW\" and \"CBOR tag CMW\"",
          "createdAt": "2023-03-24T10:25:26Z",
          "updatedAt": "2023-03-24T10:25:26Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOIGCt2M5jAnpj",
      "title": "cm-type added to CMW array / record",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/24",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There has been a discussion thread related to adding cm-type to the CMW array / record as a way to indicate which RATS conceptual messages are behind the wrapper. The following CDDL is suggested:\r\n\r\n```\r\ncmw = [ type, value, cm-bits ]\r\ncm-bits = uint .bits cm-type\r\ncm-type = &(\r\n                reference-values: 0\r\n                endorsements: 1\r\n                evidence: 2\r\n                attestation-results: 3\r\n}\r\n```\r\nThe justification for cm-bits is that a conceptual message structure could contain more than one type of conceptual message. For example a corim could contain conditional endorsed values given a stateful environment-map. Additionally, it could contain trust anchor stores, or attestation results and all of the conceptual messages that were used as Verifier inputs. ",
      "createdAt": "2023-04-10T17:34:50Z",
      "updatedAt": "2023-10-04T08:19:22Z",
      "closedAt": "2023-10-04T08:19:21Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Are trust anchor stores another type of conceptual messages?\r\n\r\nAnd more generally: do we envisage the set of conceptual messages to be extensible?\r\n\r\nBecause that'd also require specifying the procedures for adding new bits to `cm-type`.",
          "createdAt": "2023-04-10T17:57:03Z",
          "updatedAt": "2023-04-10T17:57:03Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Are trust anchor stores another type of conceptual messages?\r\n> \r\n> And more generally: do we envisage the set of conceptual messages to be extensible?\r\n> \r\n> Because that'd also require specifying the procedures for adding new bits to `cm-type`.\r\n\r\nIt is a philosophical question IMO. Trust anchors could be Endorsements if a vendor wishes to delegate well-known TA too a less well-known TA. \r\nTAs could be a form of appraisal policy where appraisal policies are also conceptual messages (though out of scope under the current charter), they could be added in the future. So, yes conceptual messages are extensible IMO.\r\nYes, it makes sense to describe procedures for adding new bits to cm-type. Presumably, it adds an entry to the cm-type enumeration list. Bits not in the enumeration list but included in the uint .bits probably should be ignored unless a profile dictates otherwise.",
          "createdAt": "2023-04-10T18:07:31Z",
          "updatedAt": "2023-04-10T18:07:31Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> It is a philosophical question IMO. Trust anchors could be Endorsements if a vendor wishes to delegate well-known TA too a less well-known TA. TAs could be a form of appraisal policy where appraisal policies are also conceptual messages (though out of scope under the current charter), they could be added in the future. So, yes conceptual messages are extensible IMO. Yes, it makes sense to describe procedures for adding new bits to cm-type. Presumably, it adds an entry to the cm-type enumeration list. Bits not in the enumeration list but included in the uint .bits probably should be ignored unless a profile dictates otherwise.\r\n\r\nOK, I'll add something to that effect to #20 \r\n",
          "createdAt": "2023-04-10T18:10:31Z",
          "updatedAt": "2023-04-10T18:10:31Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue has been addressed in #20 \r\n\r\nThe remaining question about extensibility:\r\n\r\n> [...] it makes sense to describe procedures for adding new bits to cm-type. Presumably, it adds an entry to the cm-type enumeration list. Bits not in the enumeration list but included in the uint .bits probably should be ignored unless a profile dictates otherwise.\r\n\r\nis tracked by #26 ",
          "createdAt": "2023-10-04T08:19:21Z",
          "updatedAt": "2023-10-04T08:19:21Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOIGCt2M5jA7BR",
      "title": "tagged-cmw-record",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/25",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Given a use case for an attestation results or other message that conveys other CMs that are relevant to a particular attestation result. Does it make sense to continue following the convention of using tagged cbor - as in:\r\n```\r\ntagged-cmw-record = #6.4711(bytes .cbor cmw-array)\r\n```\r\nA possible triple record structure that treats other CMs as triple objects might be:\r\n```\r\nar-triple-record = [ \r\n     attester: stateful-environment-map,\r\n     ar-claims: [ + $ar-claims-type-choice ] \r\n]\r\n$ar-claims-type-choice /= tagged-cmw-record\r\n```\r\nThe argument against is that cmw-array already has tagged values and the little bit of CDDL inside of `ar-claims:` isn't enough to warrant needing a CBOR tag. \r\nThe argument for is that all `$ar-claims-type-choice` possibilities are expected to be `tagged-xxx` values that can be dispatched by a parser dispatcher following a consistent convention. ",
      "createdAt": "2023-04-10T18:43:14Z",
      "updatedAt": "2023-10-06T14:52:08Z",
      "closedAt": "2023-10-06T14:52:07Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Given a use case for an attestation results or other message that conveys other CMs that are relevant to a particular attestation result. Does it make sense to continue following the convention of using tagged cbor - as in:\r\n> \r\n> ```\r\n> tagged-cmw-record = #6.4711(bytes .cbor cmw-array)\r\n> ```\r\n> \r\n> A possible triple record structure that treats other CMs as triple objects might be:\r\n> \r\n> ```\r\n> ar-triple-record = [ \r\n>      attester: stateful-environment-map,\r\n>      ar-claims: [ + $ar-claims-type-choice ] \r\n> ]\r\n> $ar-claims-type-choice /= tagged-cmw-record\r\n> ```\r\n> \r\n> The argument against is that cmw-array already has tagged values and the little bit of CDDL inside of `ar-claims:` isn't enough to warrant needing a CBOR tag. The argument for is that all `$ar-claims-type-choice` possibilities are expected to be `tagged-xxx` values that can be dispatched by a parser dispatcher following a consistent convention.\r\n\r\nIn the context of a triple's object type choice, I think it makes total sense to add the extra tag.",
          "createdAt": "2023-04-18T09:30:17Z",
          "updatedAt": "2023-04-18T09:30:17Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Did this issue get resolved?",
          "createdAt": "2023-06-28T20:24:54Z",
          "updatedAt": "2023-06-28T20:24:54Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Did this issue get resolved?\r\n\r\nThe question is who should be responsible for registering the tag:\r\n* CMW itself, or\r\n* the spec using CMW\r\n\r\n(For the record, I am fine either way.)",
          "createdAt": "2023-10-04T08:22:06Z",
          "updatedAt": "2023-10-04T08:22:31Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I think it would be convenient for this I-D to allocate a CBOR tag for `tagged-cmw-record`.\r\nE.g.: `tagged-cmw-record = #6.TBA(cmw-record)`",
          "createdAt": "2023-10-04T15:47:16Z",
          "updatedAt": "2023-10-04T15:47:16Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "quick note: this tag is to be used only for the CBOR array- and CBOR tag-based serialisations.",
          "createdAt": "2023-10-05T11:38:44Z",
          "updatedAt": "2023-10-05T11:38:44Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #33",
          "createdAt": "2023-10-06T14:52:07Z",
          "updatedAt": "2023-10-06T14:52:07Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOIGCt2M5js0nZ",
      "title": "extensibility of CM indicators?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/26",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Policies (for evidence and attestation results) as well as trust anchors are other CMs that we may want to support.\r\n\r\nWe should think whether we want the CM-IND bitmask to be extensible - e.g., via\r\n```\r\ncm-type /= &(\r\n  yacm: bit_position\r\n)\r\n```\r\nor we just capture all the existing CM in the RATS architecture and seal it once and for all.",
      "createdAt": "2023-04-18T09:13:49Z",
      "updatedAt": "2023-10-06T09:30:33Z",
      "closedAt": "2023-10-06T09:30:33Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe it should be extensible so that a future revision of the architecture that needed to define more clearly hybrid roles such as verifier to verifier or lead attester to verifier where partially processed or intermediate results are forwarded. This may include forwarding appraisal policies which currently isn't defined in cm-type due to WG scope, but is defined in the architecture.",
          "createdAt": "2023-04-18T16:48:27Z",
          "updatedAt": "2023-04-18T16:48:27Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm fine with this, it looks like a sensible approach.\r\nIt's only a bit more hassle to handle the IANA registry :-)",
          "createdAt": "2023-04-18T17:37:43Z",
          "updatedAt": "2023-04-18T17:37:43Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDOIGCt2M5qFSba",
      "title": "CWT/JWT registries for an unsigned CMW",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/31",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "hannestschofenig",
        "nedmsmith",
        "thomas-fossati",
        "henkbirkholz"
      ],
      "labels": [],
      "body": "CMWs aren't necessarily signed which means the CMW could be included inside of a signed container. For example, a CMW certificate extension allows the CMW to be signed via an X.509 certificate.\r\n\r\nA CWT is also a signed container that could contain a CMW. However, there isn't a CWT registry entry for CMW.\r\n\r\nThis issue proposes adding an IANA Considerations section:\r\n\r\nIANA is requested to allocate the following tags in the \"CWT Claims\" registry, preferably with the specific CWT Claim value requested:\r\n\r\n| Claim Name | Claim Description              | JWT Claim Name  | Claim Key | Claim Value Type                                             | Change Controller       | Reference                |       \r\n| ------------ | ------------------------- | ------------------ | ---------- | ------------------------------------------- | ------------------------ | ------------------- |\r\n|     cmw         | A CMW , see {{&SELF}}    |           cmw              |        11        | JSON Array, or CBOR Array, or CBOR Tag    | [IESG]                      | [this specification ] |\r\n",
      "createdAt": "2023-06-28T21:01:20Z",
      "updatedAt": "2023-10-06T14:52:38Z",
      "closedAt": "2023-10-06T14:52:38Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The CWT registry identifies the contents as either a CBOR array or CBOR tag as described in sections 4.2 and 4.3 respectively.\r\n\r\nThe JWT registry identifies the contents as a JSON array. ",
          "createdAt": "2023-08-09T00:02:20Z",
          "updatedAt": "2023-08-09T00:02:20Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #33 ",
          "createdAt": "2023-10-06T14:52:38Z",
          "updatedAt": "2023-10-06T14:52:38Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "I_kwDOIGCt2M55jUyE",
      "title": "missing `JC<>` definition",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/37",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We use the `JC` CDDL macro, but we don't define it.\r\n\r\nWe need to add:\r\n\r\n```\r\nJSON-ONLY<J> = J .feature \"json\"\r\nCBOR-ONLY<C> = C .feature \"cbor\"\r\n\r\nJC<J,C> = JSON-ONLY<J> / CBOR-ONLY<C>\r\n```\r\n\r\nmaybe in a \"conglomerate\" CDDL -- (That, or use a CDDL 2 `import` directive.)",
      "createdAt": "2023-12-13T09:30:21Z",
      "updatedAt": "2024-01-25T16:28:08Z",
      "closedAt": "2024-01-25T16:28:08Z",
      "comments": []
    },
    {
      "number": 38,
      "id": "I_kwDOIGCt2M55oSB6",
      "title": "`s/cmw-array/cmw-record/g`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/38",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should change the `cmw-array` to `cmw-record` so people don\u2019t get the wrong impression that cmw-array is an array of cmw.\r\n\r\nA `cmw-collection` might be an appropriate name for an array of cmw.\r\n\r\n\r\n(These points were originally raised by @nedmsmith)",
      "createdAt": "2023-12-13T23:07:02Z",
      "updatedAt": "2024-02-16T07:27:08Z",
      "closedAt": "2024-02-16T07:27:08Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith: checking if this is still needed?",
          "createdAt": "2024-02-04T13:01:12Z",
          "updatedAt": "2024-02-04T13:01:12Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Now is the time to change it if we're going to. It's a nit. But technically both maps and records can be used to make arrays. ",
          "createdAt": "2024-02-04T18:20:27Z",
          "updatedAt": "2024-02-04T18:20:27Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "I_kwDOIGCt2M55ymds",
      "title": "CMW collections",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/39",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Composite and layered attesters produce evidence that can be composed of multiple individual evidence \"bits\".\r\n\r\nA CMW \"collection\" is a container that aggregates several CMW evidence \"bits,\" each with its unique \"name.\"\r\n\r\n```\r\ncmw-collection = {\r\n  + (int / text) => cmw\r\n}\r\n```\r\nwhere\r\n```\r\ncmw = cmw-array / cmw-cbor-tag<bytes>\r\n```\r\n\r\nNote that this proposal addresses roughly the same scope as @simonfrost-arm's [EAT collections](https://github.com/SimonFrost-Arm/draft-frost-rats-eat-collection), and intentionally makes a very similar serialisation.",
      "createdAt": "2023-12-15T09:40:23Z",
      "updatedAt": "2023-12-21T09:19:30Z",
      "closedAt": "2023-12-21T09:19:30Z",
      "comments": []
    },
    {
      "number": 40,
      "id": "I_kwDOIGCt2M55zC46",
      "title": "Add media types for CMW",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/40",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The document should define an `application/cmw` media type to be used when CMWs are carried by transports that use media types to identify their payloads.  E.g.:\r\n\r\n```http\r\nPOST /verify HTTP/1.1\r\nHost: verifier.example\r\nContent-Type: application/cmw+json\r\n\r\n[\r\n  \"application/eat+jwt\",\r\n  \"eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9...\"\r\n]\r\n```\r\n\r\nNote that #39 should provide a similar `application/cmw-collection` media type to be used for composite evidence formats that use a CMW collection as their encapsulation:\r\n\r\n```http\r\nPOST /verify HTTP/1.1\r\nHost: verifier.example\r\nContent-Type: application/cmw-collection+json\r\n\r\n{\r\n  \"cpu\": [\r\n    \"application/eat+jwt\",\r\n    \"ZXlKaGJHY2lPaUpGVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5Lg...\"\r\n  ],\r\n  \"gpu\": [\r\n    \"application/ucs+json\",\r\n    \"eyJlYXRfbm9uY2UiOiAiamtkOEtMLTg9UWx6ZzQifQ\"\r\n  ]\r\n}\r\n```",
      "createdAt": "2023-12-15T10:29:41Z",
      "updatedAt": "2023-12-21T09:19:30Z",
      "closedAt": "2023-12-21T09:19:30Z",
      "comments": []
    },
    {
      "number": 41,
      "id": "I_kwDOIGCt2M55zGi8",
      "title": "base64 applies _always_",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/41",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The document says:\r\n\r\n> _\"When using JSON, the value field is encoded as Base64 using the URL and filename safe alphabet (Section 5 of RFC4648) without padding.\"_\r\n\r\nwe should add a note saying that the base64 encap always applies, even if the evidence format is already textual (e.g., a JWT).\r\n",
      "createdAt": "2023-12-15T10:34:31Z",
      "updatedAt": "2024-02-04T18:17:18Z",
      "closedAt": "2024-02-04T18:17:18Z",
      "comments": []
    },
    {
      "number": 44,
      "id": "I_kwDOIGCt2M589Un3",
      "title": "request an OID for embedding CMWs in certs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/44",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Current work in TCG DICE and IETF \"attested CSR\" requires embedding CMWs in X.509 artefacts (certs and CSRs).\r\n\r\nWe should register the relevant OIDs with IANA.",
      "createdAt": "2024-01-23T16:17:21Z",
      "updatedAt": "2024-01-25T16:34:02Z",
      "closedAt": "2024-01-25T16:34:02Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "The TCG specification is publicly available here: https://trustedcomputinggroup.org/wp-content/uploads/DICE-Attestation-Architecture-Version-1.1-Revision-18_pub.pdf",
          "createdAt": "2024-01-23T18:17:13Z",
          "updatedAt": "2024-01-23T18:17:13Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Given cmw I-D more recently included cmw-collection, would it make sense for it to also define an ASN.1 form and register an OID?",
          "createdAt": "2024-01-23T18:18:22Z",
          "updatedAt": "2024-01-23T18:18:22Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The TCG specification is publicly available here: https://trustedcomputinggroup.org/wp-content/uploads/DICE-Attestation-Architecture-Version-1.1-Revision-18_pub.pdf\r\n\r\nMy bad! I missed this definition from DICE-AA:\r\n```asn.1\r\ntcg-dice-conceptual-message-wrapper OBJECT IDENTIFIER ::= {tcg-dice 9}\r\n```\r\n\r\nI guess it can be used as-is?\r\n\r\n> Given cmw I-D more recently included cmw-collection, would it make sense for it to also define an ASN.1 form and register an OID?\r\n\r\nOK, what's left is registering one OID for the collection, i.e.:\r\n\r\n```asn.1\r\ncmw-collection OBJECT IDENTIFIER ::= { TBD }\r\n\r\nCMWCollection ::= OCTET STRING\r\n```\r\n\r\n@hannestschofenig @nedmsmith?\r\n",
          "createdAt": "2024-01-23T20:27:40Z",
          "updatedAt": "2024-01-23T20:27:40Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM",
          "createdAt": "2024-01-23T20:30:25Z",
          "updatedAt": "2024-01-23T20:30:25Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "I_kwDOIGCt2M59GS2_",
      "title": "\u00a73.4 (CMW collection) needs some TLC",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/46",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@henkbirkholz has the following comments regarding prose in \u00a73.4:\r\n\r\n* https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/45#discussion_r1465003510\r\n* https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/45#discussion_r1465004847\r\n* https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/45/commits/8c5dcc304cd21a6c6672c3c2ca47fa70f315ee29#r1465272666",
      "createdAt": "2024-01-24T17:56:57Z",
      "updatedAt": "2024-02-28T16:34:37Z",
      "closedAt": "2024-02-28T16:34:37Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Seems we're going with merged #45? Everybody actually happy with that? (non-blocking)",
          "createdAt": "2024-02-05T17:26:09Z",
          "updatedAt": "2024-02-05T17:26:09Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Seems we're going with merged #45? Everybody actually happy with that? (non-blocking)\r\n\r\nNote that #45 has none of the editorial suggestions you provided in the review.\r\n\r\nI guess you need to decide whether the current state of the section is acceptable or if you want to tweak it.",
          "createdAt": "2024-02-05T17:31:50Z",
          "updatedAt": "2024-02-05T17:31:50Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz is this issue still valid?  Or can it be closed?",
          "createdAt": "2024-02-16T15:31:53Z",
          "updatedAt": "2024-02-16T15:31:53Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Hearing no shouting I will close.  @henkbirkholz, feel free to reopen if you think otherwise.",
          "createdAt": "2024-02-28T16:34:37Z",
          "updatedAt": "2024-02-28T16:34:37Z"
        }
      ]
    },
    {
      "number": 47,
      "id": "I_kwDOIGCt2M59PEyv",
      "title": "mention PKIX encaps in abstract and intro",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/47",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The newly added PKIX extension(s) should be mentioned in the abstract and introductory text.",
      "createdAt": "2024-01-25T20:17:20Z",
      "updatedAt": "2024-02-04T18:27:01Z",
      "closedAt": "2024-02-04T18:27:01Z",
      "comments": []
    },
    {
      "number": 49,
      "id": "I_kwDOIGCt2M59Tdqs",
      "title": "improve the ASN.1 definition of CMWCollection",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/49",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Discussion starting here:\r\n* https://mailarchive.ietf.org/arch/msg/rats/eFBCC1JxC573SkDSp6yWZ4J_dyM/\r\n\r\nWe may want to define CMWCollection with finer granularity, e.g.:\r\n```asn.1\r\nCMWCollection ::= CHOICE {\r\n    json UTF8String,\r\n    cbor OCTET STRING,\r\n}\r\n```",
      "createdAt": "2024-01-26T13:53:49Z",
      "updatedAt": "2024-01-29T10:32:52Z",
      "closedAt": "2024-01-29T10:32:52Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "WFM",
          "createdAt": "2024-01-28T00:01:07Z",
          "updatedAt": "2024-01-28T00:01:07Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "I_kwDOIGCt2M59oh4_",
      "title": "rebalancing abstract & intro",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/54",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The abstract has too much details, whilst the intro is lightweight on the tech front.  I suggest we move most of the abstract contents to the bottom of the intro.",
      "createdAt": "2024-01-30T12:42:27Z",
      "updatedAt": "2024-02-04T18:27:00Z",
      "closedAt": "2024-02-04T18:27:00Z",
      "comments": []
    },
    {
      "number": 55,
      "id": "I_kwDOIGCt2M5-GKZu",
      "title": "Request for clarification: array length and mixed encoding",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/55",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "WGLC"
      ],
      "body": "I'm noodling through the idea of a modular evidence collection daemon that just runs installed binaries in a certain location and assembles a cmw-collection together to send off, and I'm wondering how much interpretation of the output it would need, assuming all the binaries output a legal CMW of either CBOR or JSON encoding.\r\n\r\nWhen JC<> is used, it's only when the CDDL pun breaks down and you need base64 encoding for binary. If you have your cmw-collection as a CBOR map, and we can use, say, the basename of the evidence collection binary to key the result, but the result is just bytes that are either CBOR or JSON, that doesn't seem to fit into the \"cmw is either CBOR or JSON\".\r\n\r\nIt seems that certainly a JSON cmw-collection that contains a CBOR-encoded cmw does not parse unless you're allowed to wantonly swap your interpretation of the CDDL as for JSON or CBOR as you see fit (say with the decapsulation algorithm), given that `cmw` doesn't have a base64 encoded string alternate to store a CBOR-encoded cmw.\r\n\r\nCan we say that\r\n\r\n```\r\ncmw-collection = {\r\n  + cmw-collection-entry-label => cmw\r\n}\r\n```\r\n\r\nshould be\r\n\r\n```\r\ncmw-collection = {\r\n  + cmw-collection-entry-label => cmw-decap\r\n}\r\ncmw-decap = JC<jc-cmw, bytes .cbor cmw>\r\njc-cmw = cmw / base64-cmw\r\nbase64-cmw = base64-string .cbor cmw\r\n```\r\n\r\nI'm unsure if the `.cbor` control operator is allowed to be applied to a base64-string technically it's for byte strings and since \"one can use CDDL with JSON by limiting oneself to what can be represented in JSON.  Roughly speaking, this means leaving out byte strings\"\r\n\r\nI don't think we can use `bytes .cbor cmw` without inserting the major type byte 0x04 before the output of any of the evidence modules, so do we just define a `.feature cmw-decap` to apply the decap algorithm to arbitrary bytes instead of this JC stuff?",
      "createdAt": "2024-02-02T18:40:31Z",
      "updatedAt": "2024-02-27T10:16:47Z",
      "closedAt": "2024-02-16T07:27:07Z",
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would similarly ask for cmw to itself contain cmw-collection, since something producing evidence could itself be amassing evidence, and you end up with a tree rather than having to flatten it and potentially have conflicting keys.",
          "createdAt": "2024-02-02T18:47:46Z",
          "updatedAt": "2024-02-02T18:47:46Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this different from cmw-collection containing a cmw / cmw-collection?",
          "createdAt": "2024-02-02T20:17:32Z",
          "updatedAt": "2024-02-02T20:17:32Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">I'm wondering how much interpretation of the output it would need, assuming all the binaries output a legal CMW of either CBOR or JSON encoding.\r\n\r\nThe I-D describes an ASN.1 encoding that distinguishes between cbor and json. \r\n```\r\nCMWCollection ::= CHOICE {\r\n    json UTF8String,\r\n    cbor OCTET STRING,\r\n}\r\n```\r\nIs the request to give the same attention to the CDDL description?",
          "createdAt": "2024-02-02T20:21:49Z",
          "updatedAt": "2024-02-02T20:22:20Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > I'm wondering how much interpretation of the output it would need, assuming all the binaries output a legal CMW of either CBOR or JSON encoding.\r\n> \r\n> The I-D describes an ASN.1 encoding that distinguishes between cbor and json.\r\n> \r\n> ```\r\n> CMWCollection ::= CHOICE {\r\n>     json UTF8String,\r\n>     cbor OCTET STRING,\r\n> }\r\n> ```\r\n> \r\n> Is the request to give the same attention to the CDDL description?\r\n\r\nNot exactly, since I'm asking about mixed representation across values. If I'm accumulating evidence from A and B, where A produces a CBOR CMW, and B produces a JSON CMW, I would rather not do a full translation from one to the other for fear of corrupting the data and taking too much processing time, so I would like to produce a cbor-encoded map {\"A\" => cbor bytes, \"B\" => json string}. If A were to produce a CMW collection instead of CMW, since it's an aggregator itself, then I'd like to not have to open it up and re-encode the key => value mappings in the overall CMW collection, since I might have conflicting keys. I also am not particularly sure what `.feature \"cbor\"` means\u2013\"if I am being interpreted as CBOR\" or \"If I am to be interpreted as CBOR\" or something else, since one depends on context, and the other is a kind of context switching device.",
          "createdAt": "2024-02-02T20:50:45Z",
          "updatedAt": "2024-02-02T20:50:45Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">not particularly sure what .feature \"cbor\" means\r\n\r\nSee https://www.ietf.org/archive/id/draft-ietf-cbor-cddl-control-02.html \r\nI believe `int .feature \"cbor\"` is saying the integer is encoded as a cbor integer.",
          "createdAt": "2024-02-02T21:07:50Z",
          "updatedAt": "2024-02-02T21:12:21Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [a]ssuming all the binaries output a legal CMW of either CBOR or JSON encoding.\r\n\r\n[ _challenging assumptions_ \ud83d\ude3a ]\r\n\r\nWhy don't you let the repackager do the repackager and the providers do the providers?  I.e., the binaries return their evidence payload plus the associated media type, and the daemon puts together the CMWs and wraps them in a CBOR or JSON collection.\r\n",
          "createdAt": "2024-02-03T11:02:29Z",
          "updatedAt": "2024-02-03T21:41:01Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The \"plus\" there is the problem then, since now I need to specify an output format for the binaries that isn't the standard CMW / CMW-collection. What you're suggesting to me sounds like \"binaries return their cmw-array value and cmw-array content type in some format for the repackager to wrap as a CMW.\" The third component of the cmw-array is just lost or somehow inferred? No, that \"some format\" to me is a CMW. I don't want plugin authors to have to implement both serialization formats as requested by the repackager to fit the final output type because that just becomes bloat.\r\n\r\nTo be parsimonious with resources due to static linking overhead, some evidence collectors may want to produce an output that is already a collection of multiple evidence formats. The cc-trusted-api and go-tpm-tools clients collect multiple evidence formats already, so changing the output format for the collection is a nicer thought than splitting each format into a different binary. We therefore have either a CMW or some sort of CMW collection as allowed response types. What format do we specify?\r\n\r\nI could say it's a mixed format of JSON or CBOR CMWs given as a definite length array of definite length octet strings for the repackager to decode and repackage into a CMW-collection of its own, but the entry labels would need to be generated somehow.\r\n\r\n```\r\n4 bytes: num_outputs in system endianness\r\nVariable: num_outputs-many output\r\n\r\nwhere an output is\r\n4 bytes: length in system endianness\r\nlength: payload bytes\r\n```\r\n\r\nPart of the assumption to be fair is that there is going to be a standard evidence request format and evidence response format, and the response doesn't necessarily need to be a CMW or CMW collection, though it'd be nicer if it were\u2013the collection CMW / CMW-collection output of either CBOR or JSON to repackage as a single CMW collection leads to the relabeling problem I described in OP. In JSON, the label could be the provider's name followed by the index of the position in the output, and in CBOR it could just be the index of the position in the output added to the current index to the output CMW\u2013the label is thus very different. The text describing the labels suggests that they aren't arbitrary but could hold semantic meaning like a mnemonic. I don't know how that works for the integer format, but it's not explicitly specified to be irrelevant:\r\n\r\n> Instead, the labels identify a conceptual message that, in the case of a composite Attester, should typically\r\n> correspond to a component of a system.  Labels can be strings or integers that serve as a mnemonic for different\r\n> conceptual messages in the collection.\r\n\r\nThe goal of being for either an aggregate attester OR a CMW aggregator should account for the multiple allowed wire formats. I don't see that without either\r\n\r\na. a tree format for CMW-collection with mixed representation\r\nb. change the current map format to an array to remove any implied meaning for labels.\r\n",
          "createdAt": "2024-02-03T20:53:58Z",
          "updatedAt": "2024-02-03T20:53:58Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [n]ow I need to specify an output format for the binaries that isn't the standard CMW / CMW-collection.\r\n\r\nThe daemon and its plugins all live under the same system roof, isn't it?\r\n\r\nCan't each binary return evidence in the native format using something equivalent to:\r\n\r\n```c\r\nint collect_evidence(\r\n    const uint8_t nonce[64],\r\n    uint8_t **evidence, size_t *evidence_sz,\r\n    struct media_type *mt\r\n);\r\n```\r\n\r\n",
          "createdAt": "2024-02-04T09:38:21Z",
          "updatedAt": "2024-02-04T09:38:40Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> a. a tree format for CMW-collection\r\n\r\nthis one is trivial:\r\n\r\n```cddl\r\ncmw-collection = {\r\n  + cmw-collection-entry-label => cmw / cmw-collection\r\n}\r\n```\r\n\r\n> with mixed representation\r\n\r\nI am afraid this one isn't.",
          "createdAt": "2024-02-04T10:00:09Z",
          "updatedAt": "2024-02-04T10:00:09Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "\n> ```cddl\n> \n> cmw-collection = {\n> \n>   + cmw-collection-entry-label => cmw / cmw-collection\n> \n> }\n> \n> ```\n+1\n",
          "createdAt": "2024-02-04T17:15:13Z",
          "updatedAt": "2024-02-04T17:15:13Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "An alternative (put forward by @nedmsmith) is to squash the productions:\r\n\r\n```cddl\r\ncmw = cmw-array / cmw-tag / cmw-collection\r\n```",
          "createdAt": "2024-02-06T09:09:39Z",
          "updatedAt": "2024-02-06T09:09:39Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I still don't see how nesting the trees is going to help if some output trees are JSON and others are CBOR and we need to aggregate into a single format. If we can register a tag that implies the bytes within constitute a JSON CMW-collection, then we can say \r\n\r\n```\r\ncmw = cmw-array / JC<base64-string, cmw-tag> / cmw-collection\r\n```\r\n\r\nA tag in CBOR can swap to JSON, and a baes64-string in JSON can be interpreted as a serialized CBOR cmw-collection",
          "createdAt": "2024-02-08T00:12:35Z",
          "updatedAt": "2024-02-08T00:12:35Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I still don't see how nesting the trees is going to help if some output trees are JSON and others are CBOR and we need to aggregate into a single format\r\n\r\nYou are right, it doesn't help with mixtures of formats.\r\n\r\n> If we can register a tag that implies the bytes within constitute a JSON CMW-collection, then we can say\r\n> \r\n> ```\r\n> cmw = cmw-array / JC<base64-string, cmw-tag> / cmw-collection\r\n> ```\r\n> \r\n> A tag in CBOR can swap to JSON, and a baes64-string in JSON can be interpreted as a serialized CBOR cmw-collection\r\n\r\nI am not sure that will work as written, but the gist is clear: we need tunnels :-)\r\n\r\nAnd given the tunnelling is symmetrical we might use a common shape by registering a couple of new media types (since tags are not a JSON thing):\r\n\r\n```\r\nj2c-tunnel = [ \"application/cmw-j2c-tunnel\", text .b64u json-CMW ]\r\nc2j-tunnel = [ \"application/cmw-c2j-tunnel\", text .b64u cbor-CMW ]\r\n```\r\n\r\nwhere:\r\n```\r\njson-CMW = array / collection\r\ncbor-CMW = tag / array / collection\r\n```\r\n\r\nand the tunneling procedures are:\r\n\r\n#### :mountain_railway: JSON-to-CBOR CMW :mountain_railway:\r\n\r\n* input: the UTF-8 string with the serialised JSON CMW\r\n* apply b64urlsafe encoding\r\n* stick it into the second slot of the `j2c-tunnel` tuple\r\n* output: the `j2c-tunnel` tuple as a CBOR array\r\n\r\n#### :mountain_railway: CBOR-to-JSON CMW :mountain_railway:\r\n\r\n* input: the byte array with the serialised CBOR CMW\r\n* apply b64urlsafe encoding\r\n* stick it into the second slot of the `c2j-tunnel`\r\n* output: the `c2j-tunnel` tuple as a JSON array\r\n\r\n\r\n",
          "createdAt": "2024-02-08T14:06:42Z",
          "updatedAt": "2024-02-08T14:06:42Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Why does the JSON to CBOR tunnel need to be base64 encoded? The cmw-array value type is bytes, not text.",
          "createdAt": "2024-02-08T16:13:50Z",
          "updatedAt": "2024-02-08T16:13:50Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Why does the JSON to CBOR tunnel need to be base64 encoded?\r\n\r\nI made it like that purely for aesthetic/symmetry reasons.\r\n\r\n",
          "createdAt": "2024-02-08T16:19:02Z",
          "updatedAt": "2024-02-08T16:19:02Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The symmetry breaks the current cmw-array schema and adds encoding bloat for aesthetics, so I'd recommend keeping it to bytes.",
          "createdAt": "2024-02-08T16:20:01Z",
          "updatedAt": "2024-02-08T16:20:01Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "To be clear, I have no strong opinions.  We could do:\r\n```\r\nj2c-tunnel = [ \"application/cmw-j2c-tunnel\", text .json json-CMW ]\r\nc2j-tunnel = [ \"application/cmw-c2j-tunnel\", text .b64u cbor-CMW ]\r\n```\r\nand change the tunnelling procedure accordingly.\r\n\r\n\r\n\r\n",
          "createdAt": "2024-02-08T16:23:00Z",
          "updatedAt": "2024-02-08T16:23:00Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The symmetry breaks the current cmw-array schema\r\n\r\nnote that the `j2c-tunnel` array is not strictly a `cmw-array`; we can do whatever we want with that without fear of breaking anything.\r\n\r\n> so I'd recommend keeping it to bytes.\r\n\r\nWFM\r\n\r\n",
          "createdAt": "2024-02-08T16:27:06Z",
          "updatedAt": "2024-02-08T16:27:06Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is the idea for this to not match cmw-array and instead be a different alternate? That changes the parsing complexity from LL(1) to LL(2), no? I would think we have this be a media type for cmw-array and a new cm-type bit for \"tunnel\"?",
          "createdAt": "2024-02-08T16:28:03Z",
          "updatedAt": "2024-02-08T16:28:03Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Relevant to this discussion, one of @carl-wallace's WGLC comments in https://mailarchive.ietf.org/arch/msg/rats/xY2mwu790UOGnhFAUduGj5ddo3Y/\r\n\r\n> _\"I think this came up relative to the collections draft a while back but I forget how it was handled (and did not go looking just now). How would one encode artifacts that use different encoding types, i.e., a CBOR evidence and a JSON result? The collection concept is analogous to the submodules part of EAT, and that addresses the various nesting possibilities.\"_",
          "createdAt": "2024-02-08T16:34:00Z",
          "updatedAt": "2024-02-08T17:08:32Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is the idea for this to not match cmw-array and instead be a different alternate? That changes the parsing complexity from LL(1) to LL(2), no? I would think we have this be a media type for cmw-array and a new cm-type bit for \"tunnel\"?\r\n\r\nThe complete (loose) grammar I have in mind is this:\r\n\r\n```\r\ncmw = json-CMW / cbor-CMW\r\n\r\njson-CMW = json-array / json-collection\r\ncbor-CMW = cbor-array / cbor-collection / cbor-tag\r\n\r\nc2j-tunnel = [ \"#cmw-c2j-tunnel\", text ]\r\nj2c-tunnel = [ \"#cmw-j2c-tunnel\", bytes ]\r\n\r\njson-array = [ text, text ]\r\njson-collection = { + text => json-CMW / c2j-tunnel }\r\n\r\ncbor-array = [ uint / text, bytes ]\r\ncbor-collection = { + (int / text) => cbor-CMW / j2c-tunnel }\r\ncbor-tag = #6.<0..18446744073709551615>(bytes)\r\n```\r\n\r\n> Updated according to https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/55#issuecomment-1934673175\r\n",
          "createdAt": "2024-02-08T17:04:38Z",
          "updatedAt": "2024-02-08T19:14:04Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think we do have to specify that the media type in a cmw-array cannot be  \"application/cmw-j2c-tunnel\" (conversely for JSON), OR we have to say that `ind` may not be present in a cmw-array if the media type is  \"application/cmw-j2c-tunnel\". Right now the alternates parse ambiguously.",
          "createdAt": "2024-02-08T17:48:05Z",
          "updatedAt": "2024-02-08T17:48:05Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think we do have to specify that the media type in a cmw-array cannot be \"application/cmw-j2c-tunnel\" (conversely for JSON), OR we have to say that `ind` may not be present in a cmw-array if the media type is \"application/cmw-j2c-tunnel\". Right now the alternates parse ambiguously.\r\n\r\nYes, absolutely.  The two tunnel media types are effectively magic numbers.\r\n",
          "createdAt": "2024-02-08T17:57:00Z",
          "updatedAt": "2024-02-08T17:57:00Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I think we do have to specify that the media type in a cmw-array cannot be \"application/cmw-j2c-tunnel\" (conversely for JSON), OR we have to say that `ind` may not be present in a cmw-array if the media type is \"application/cmw-j2c-tunnel\". Right now the alternates parse ambiguously.\r\n> \r\n> Yes, absolutely. The two tunnel media types are effectively magic numbers.\r\n\r\nAn alternative would be to use as a magic number something that doesn't parse as a media-type string (i.e., anything `(!ALPHA && !DIGIT)`), say `\"!\"` for CBOR and `\"#\"` for JSON, or less concisely but a bit more self-descriptively `\"#cmw-c2j-tunnel\"` and `\"#cmw-j2c-tunnel\"`.)\r\n\r\nThis would also spare us from registering two mostly useless new media types :-)\r\n\r\n",
          "createdAt": "2024-02-08T18:04:56Z",
          "updatedAt": "2024-02-08T18:10:08Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "I_kwDOIGCt2M5-Mt1L",
      "title": "\"Endorsement\", rather than \"Endorsements\"",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/58",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "NONE",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "WGLC"
      ],
      "body": "In Table 2 in 7.4.2 shouldn't  it be \"Endorsement\"? It's just one endorsement per conceptual message, right?\r\n\r\nRef values is correct as plural. Evidence is fine too.\r\n\r\nAttestation Results could be singular, but seems OK plural.\r\n\r\n",
      "createdAt": "2024-02-04T19:09:47Z",
      "updatedAt": "2024-02-16T20:43:49Z",
      "closedAt": "2024-02-16T20:43:49Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "So there are never more than one Endorsements?",
          "createdAt": "2024-02-05T17:24:20Z",
          "updatedAt": "2024-02-05T17:24:20Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> So there are never more than one Endorsements?\r\n\r\nThe plurality refers to Claims. A single conceptual message can have more than one Claim. Endorsements are not a special case. If you change all the entries in the table to include \"Claims\" the entries would be Reference Value Claims, Endorsement Claims, Evidence Claims, etc... ",
          "createdAt": "2024-02-05T17:30:02Z",
          "updatedAt": "2024-02-05T17:30:02Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "NONE",
          "body": "> So there are never more than one Endorsements?\r\n\r\nCan a conceptual message contain more than one endorsement or not? Seems like it could go either way. If it can contain more than one, you'd need to make it an array (which is beyond the scope of this draft).\r\n\r\nRATs architecture uses plurality for these terms, but could be discussing \"messages\" rather than a \"message\". https://www.rfc-editor.org/rfc/rfc9334.html#name-conceptual-messages\r\n\r\nThe plurality of \"attestation results\" and \"reference values\" is kind of ambiguous. It makes a lot of sense to have many references values in a conceptual message.\r\n\r\nNot a big deal either way, but seemed worth cross-checking.\r\n",
          "createdAt": "2024-02-05T17:54:48Z",
          "updatedAt": "2024-02-05T17:54:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Can a conceptual message contain more than one endorsement or not? Seems like it could go either way. If it can contain more than one, you'd need to make it an array (which is beyond the scope of this draft).\r\n\r\nYes, it can.  For example, a CoRIM payload potentially contains several endorsements (and reference values too.)\r\n\r\n> RATs architecture uses plurality for these terms, but could be discussing \"messages\" rather than a \"message\". https://www.rfc-editor.org/rfc/rfc9334.html#name-conceptual-messages\r\n\r\nThis is a good pointer, thanks!  I'm going to make sure we have the terms consistently in the plural form.",
          "createdAt": "2024-02-16T14:45:33Z",
          "updatedAt": "2024-02-16T14:45:33Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "NONE",
          "body": "> > Can a conceptual message contain more than one endorsement or not? Seems like it could go either way. If it can contain more than one, you'd need to make it an array (which is beyond the scope of this draft).\r\n> \r\n> Yes, it can. For example, a CoRIM payload potentially contains several endorsements (and reference values too.)\r\n\r\nTo go on a bit more. I think a reference value *set* is equivalent to an endorsement. A conceptual message might contain several reference value sets like it might contain multiple endorsements.\r\n\r\nOr call it a reference value \"bundle\" or whatever you like.",
          "createdAt": "2024-02-16T19:10:44Z",
          "updatedAt": "2024-02-16T19:10:44Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > Can a conceptual message contain more than one endorsement or not? Seems like it could go either way. If it can contain more than one, you'd need to make it an array (which is beyond the scope of this draft).\r\n> > \r\n> > \r\n> > Yes, it can. For example, a CoRIM payload potentially contains several endorsements (and reference values too.)\r\n> \r\n> To go on a bit more. I think a reference value _set_ is equivalent to an endorsement. A conceptual message might contain several reference value sets like it might contain multiple endorsements.\r\n> \r\n> Or call it a reference value \"bundle\" or whatever you like.\r\n\r\nI'd rather not add new terminology.\r\n\r\n`cm-ind` is a bit map, so one can signal the presence of multiple different conceptual messages within the same CMW.\r\n",
          "createdAt": "2024-02-16T19:24:54Z",
          "updatedAt": "2024-02-16T19:24:54Z"
        }
      ]
    },
    {
      "number": 59,
      "id": "I_kwDOIGCt2M5-R3O5",
      "title": "Clarify use of the CWT claim",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/59",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "WGLC"
      ],
      "body": "[Laurence email to rats@ietf.org](https://mailarchive.ietf.org/arch/msg/rats/9uDu-DOOrbYIX5tND0muaVREJBM/):\r\n\r\n> _Maybe some clarification about the use of the CWT claim to carry the conceptual message? If the CWT is an EAT and the conceptual message is an EAT, you have an EAT in an EAT and it looks a lot like a nested token. But I don\u2019t think that\u2019s what is intended at all. The surrounding EAT in this case is just convenient transport. It is not binding to or attesting to the enclosed EAT.\r\n> One way to do this would for the examples to be more expansive._",
      "createdAt": "2024-02-05T13:49:43Z",
      "updatedAt": "2024-02-16T20:43:30Z",
      "closedAt": "2024-02-16T20:43:30Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith IIRC you had a use case for this, right?\r\nCould we convert it into an example?",
          "createdAt": "2024-02-16T15:02:12Z",
          "updatedAt": "2024-02-16T15:02:12Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "I_kwDOIGCt2M5-s7xM",
      "title": "Two security considerations",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/63",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "WGLC"
      ],
      "body": "## UCCS is not protected\r\n\r\nIn https://mailarchive.ietf.org/arch/msg/rats/xY2mwu790UOGnhFAUduGj5ddo3Y/ Carl notes:\r\n> _\"The security considerations section says that \u201cmessages themselves and their encoding ensure security protection.\u201d This is not true for UCCS, which is part of the referenced EAT media type spec.\"_\r\n\r\n## Intra-element binding in collections\r\n\r\nIn a private conversation between Ned and I:\r\n> _\"[t]here should be a way to ensure the integrity of the collection as soon as the collection is formed.\"_.\r\n\r\nRe: intra-element binding, see also: https://www.ietf.org/archive/id/draft-frost-rats-eat-collection-03.html#section-4.1",
      "createdAt": "2024-02-08T17:21:16Z",
      "updatedAt": "2024-02-16T20:44:07Z",
      "closedAt": "2024-02-16T20:44:07Z",
      "comments": []
    },
    {
      "number": 64,
      "id": "I_kwDOIGCt2M5-s9n7",
      "title": "ASN.1 encoding clarifications",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/64",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "WGLC"
      ],
      "body": "Carl's review (https://mailarchive.ietf.org/arch/msg/rats/xY2mwu790UOGnhFAUduGj5ddo3Y/)\r\n\r\n> _\"In section 5, it may be worth calling out that the encoded CMWCollection is encoded as an OCTET STRING as the extnValue field of this extension. Section 4.2 in RFC5280 makes this point but I\u2019ve seen the outer OCTET STRING left out in a couple of attestation-related contexts. The pseudo code about removing \u201cthe ASN.1 OCTET STRING\u201d in Section 3.3. could further this misimpression since there are two OCTET STRING layers wrapping a CBOR value. Maybe add something like: \u201cThe DER encoded CMWCollection is the value of the octet string for the extnValue field of the extension\u201d.\"_",
      "createdAt": "2024-02-08T17:25:47Z",
      "updatedAt": "2024-02-16T20:45:28Z",
      "closedAt": "2024-02-16T20:45:28Z",
      "comments": []
    },
    {
      "number": 66,
      "id": "I_kwDOIGCt2M5_SZLl",
      "title": "Default content type?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/66",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I'm having trouble determining which content type to suggest for any of the evidence formats I'm working with, given that they're all binary formats specified by vendors or the TCG. Is the intention for AMD, Intel, TCG, and CNCF to all apply for application content types for formats they will specify themselves? I wouldn't want to say application/cbor for binary that doesn't have the major type tag for CBOR bytes, for example. The `ind` field is for hinting at the expected interpretation of the underspecified media type, so it'd be nice to have an appropriate underspecified media type that is basically \"binary evidence for RATS\". The examples use undefined example media types and the `application/eat+jwt` type, but nothing prior to attestation results that can be sent to a remote attestation verifier.\r\n\r\nI'd say we should encourage folks to avoid using cmw-collection labels as \"standard\" ways to interpret the data carried in the value, but while a format is developed for a new form of attestation, it'd be nice to have a kind of catch-all for underspecified binary evidence content.",
      "createdAt": "2024-02-15T02:38:36Z",
      "updatedAt": "2024-05-02T16:17:11Z",
      "closedAt": "2024-05-02T16:17:11Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Have you already considered using the [`vnd`](https://datatracker.ietf.org/doc/html/rfc6838#section-3.2) or [`prs`](https://datatracker.ietf.org/doc/html/rfc6838#section-3.3) sub-trees?  They happen to have pretty relaxed registration policies.\r\n\r\nWhen we originally chose to use media types for the type system, one of the major selling points was the possibility of using these kinds of non-standard trees precisely to cover the case you are describing.",
          "createdAt": "2024-02-15T19:17:36Z",
          "updatedAt": "2024-02-15T19:17:36Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Oh interesting I didn't know this piece \"public exposure and review of media types to be registered in the vendor tree are not required\" \r\n\r\nI was worried at the small number of vnd. entries in the media-types table.",
          "createdAt": "2024-02-15T20:04:31Z",
          "updatedAt": "2024-02-15T20:04:31Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@deeglaze do you think we need to add prose to the draft to address your questions?",
          "createdAt": "2024-02-16T15:33:27Z",
          "updatedAt": "2024-02-16T15:33:27Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "It might be important to distinguish between formats that are truly vendor specific and formats that are based on a standard format but underspecified. This could happen if the vendor extends the standard (and doesn't define the extensions in a profile) or has an underspecified profile.",
          "createdAt": "2024-02-16T17:26:53Z",
          "updatedAt": "2024-02-16T17:26:53Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> It might be important to distinguish between formats that are truly vendor specific and formats that are based on a standard format but underspecified. This could happen if the vendor extends the standard (and doesn't define the extensions in a profile) or has an underspecified profile.\r\n\r\nDo you think we should add these considerations to the CMW document?\r\n\r\nOr is there a separate \"Considerations on the use of media types in RATS\" document that we should start putting together?",
          "createdAt": "2024-02-28T16:37:34Z",
          "updatedAt": "2024-02-28T16:37:34Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> > It might be important to distinguish between formats that are truly vendor specific and formats that are based on a standard format but underspecified. This could happen if the vendor extends the standard (and doesn't define the extensions in a profile) or has an underspecified profile.\r\n> \r\n> Do you think we should add these considerations to the CMW document?\r\n> \r\n> Or is there a separate \"Considerations on the use of media types in RATS\" document that we should start putting together?\r\n\r\nMaybe the latter is best.",
          "createdAt": "2024-02-28T23:30:53Z",
          "updatedAt": "2024-02-28T23:30:53Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is there anything to do here or can we close the issue?",
          "createdAt": "2024-05-02T15:48:20Z",
          "updatedAt": "2024-05-02T15:48:20Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think we just need a CMW usage best practices doc.",
          "createdAt": "2024-05-02T16:17:11Z",
          "updatedAt": "2024-05-02T16:17:11Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "I_kwDOIGCt2M5_f-Jr",
      "title": "two `cmw` definitions",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/72",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I'm confused by cmw-start.cddl and cmw.cddl. Each has a definition for `cmw`.  frags.mk ignores cmw.cddl so possibly removal of cmw.cddl is needed? However, I prefer the convention that the \"start\" file contains only the start directive. This makes it easy to replace with a different start vector for debugging purposes. It would be better to put the cmw definition in cmw.cddl and include it in the frags.mk IMHO.",
      "createdAt": "2024-02-16T17:41:52Z",
      "updatedAt": "2024-02-22T11:00:47Z",
      "closedAt": "2024-02-22T11:00:46Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "You are right.  I spotted the dead code while working on #71, which removes `cmw.cddl` for good.",
          "createdAt": "2024-02-16T18:33:42Z",
          "updatedAt": "2024-02-16T18:33:42Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "This has been addressed in #71.  @nedmsmith could you confirm?",
          "createdAt": "2024-02-21T12:40:09Z",
          "updatedAt": "2024-02-21T12:40:09Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> This has been addressed in #71. @nedmsmith could you confirm?\r\n\r\nOK, I've got indirect confirmation by your closing of #73 \ud83d\ude04 ",
          "createdAt": "2024-02-22T11:00:46Z",
          "updatedAt": "2024-02-22T11:00:46Z"
        }
      ]
    },
    {
      "number": 74,
      "id": "I_kwDOIGCt2M5_2KjL",
      "title": "Add prose for example meanings of labels in cmw-collection",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/74",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I had asked before if we could make the labels of the cmwc non-semantic because of the aggregation issue, and now I'm wondering about how we connect this with something like tls-attestation. The only notions of evidence are the media types, so each is inherently understood to be unique to the form of evidence.\r\n\r\nHere's an example: Both Intel TDX and AMD SEV-SNP have their attestation reports made available through the Linux configfs-tsm system. If we are to create a media type like application/vnd.linux.configfs-tsm, then the two forms of attestation report that SEV can give through that interface would be indistinguishable. We have the raw attestation report from the AMD SP, and we have the service attestation reports that are either individual or a manifest of all available services. There's reason to collect multiple reports for the same connection given the different services and necessary service versions. The disambiguation here makes sense as a reason to have labels, but it's not clear in the text.\r\n\r\nHaving said that, I don't know how to say, \"I can give you service evidence in application/vnd.linux.configfs-tsm format, and I can give you a raw attestation in application/vnd.linux.configfs-tsm format.\" with `evidence_propose`, similarly there is no way to request a specific evidence form from the other side.\r\n\r\nIf the content type has to uniquely identify the content for propose/request, I don't see a reason to have labels or `ind`. If it's not meant to uniquely identify the content for propose/request, then tls-attestation needs to be amended to allow for label-based disambiguation. I don't see a reason to add label-based disambiguation to the TLS extensions if we keep the integer type for CBOR keys, since the JSON vs CBOR format request shouldn't matter to the TLS protocol, right?",
      "createdAt": "2024-02-20T17:29:20Z",
      "updatedAt": "2024-06-13T07:26:04Z",
      "closedAt": "2024-06-13T07:26:03Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> application/vnd.linux.configfs-tsm\r\n\r\nWouldn't a vendor-specific evidence type be chosen by the vendor that produced it, for example: `application/vnd.tdx`? Would an OS process re-wrap the content with a different vendor-defined media type or would the signer of the content be the most appropriate entity to decide which media type to use?",
          "createdAt": "2024-02-20T17:44:40Z",
          "updatedAt": "2024-02-20T17:44:40Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > application/vnd.linux.configfs-tsm\r\n> \r\n> Wouldn't a vendor-specific evidence type be chosen by the vendor that produced it, for example: `application/vnd.tdx`?\r\n\r\nI'd have thought the same.  Why would the TSM backend not return its native media type?\r\n",
          "createdAt": "2024-02-20T18:21:34Z",
          "updatedAt": "2024-02-20T18:21:34Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We could do that, though not everything is signed. There's the service manifest for example, that when you request a service attestation, you get SHA-512(nonce || service manifest) as the new nonce in an attestation report at a higher privilege level than the guest itself can request for a raw attestation. This is all beside the point that the labels themselves aren't doing favors for discovery and request protocols.",
          "createdAt": "2024-02-20T18:27:23Z",
          "updatedAt": "2024-02-20T18:27:23Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">the labels themselves aren't doing favors for discovery and request protocols\r\n\r\nWas this usage anticipated by the cmw work? I thought the originator (signer?) of the message selects the label based on their understanding of the contents and organization of the various cmws rather than on presumed usage(s). In many cases, there could be many usages the content originator hopes to support, and wouldn't be in a position to try to accommodate all of them. \r\n\r\nHowever, using cmw for discovery and request protocols is an interesting use case on it's own. Possibly, it is just another layer of indirection and cmw is flexible enough to support multiple layers of indirection. ",
          "createdAt": "2024-02-20T19:09:21Z",
          "updatedAt": "2024-02-20T19:09:21Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What are its existing usages then?\r\n\r\n\"With the CMW format described in this document, protocol designers do not need to update protocol specifications to support different conceptual messages.\"\r\n\r\nI don't know what the expected usage of a label is for protocols to consume them.",
          "createdAt": "2024-02-20T19:22:44Z",
          "updatedAt": "2024-02-20T19:22:44Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Labels are identifiers within a given collection that, in principle, have no absolute/global significance.  They are dependent on the usage of a collection payload within a protocol context.\r\n\r\nIf one is using CMW in protocol X, one could attribute specific semantics to labels that would be interpreted in a precise way within X.",
          "createdAt": "2024-02-20T19:43:09Z",
          "updatedAt": "2024-02-20T19:43:52Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> \"With the CMW format described in this document, protocol designers do not need to update protocol specifications to support different conceptual messages.\"\r\n\r\nThis only means that protocols that use CMWs don't need to update anything if (e.g.) a new evidence format is added.",
          "createdAt": "2024-02-20T19:51:08Z",
          "updatedAt": "2024-02-20T19:51:08Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "9334 says: \"The lead Attester collects Evidence from other\r\n   Attesters and conveys it to a Verifier.  Collection of Evidence from\r\n   sub-entities may itself be a form of Claims collection that results\r\n   in Evidence asserted by the lead Attester.  The lead Attester\r\n   generates Evidence about the layout of the whole composite device,\r\n   while sub-Attesters generate Evidence about their respective\r\n   (sub-)modules.\" \r\nFrom a cmw context, the collection of Evidence needs to be bundled up in some fashion. The lead Attester is presumed to know enough about device composition to create the bundle. The `cmw-collection` structure from draft-ietf-rats-msg-wrap seems to fit this use case. The label then is a hint that helps the Verifier decide which cmw to crack open first, etc. Maybe the design of the Verifier ignores the label since it expects to crack open all of them? A different Verifier, say one that supports a profile, might use the label to encode the name of one of the sub-attesters and direct Evidence from that sub-attester to a subroutine that is tuned for that type of attester? ",
          "createdAt": "2024-02-20T19:54:10Z",
          "updatedAt": "2024-02-20T19:55:06Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> If one is using CMW in protocol X, one could attribute specific semantics to labels that would be interpreted in a precise way within X.\r\n\r\nThis use case assumes the protocol endpoint is also the creator of the cmw message. In a composite device architecture, this may not be the case for all cmws that are generated by the device.",
          "createdAt": "2024-02-20T19:59:03Z",
          "updatedAt": "2024-02-20T19:59:03Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> The lead Attester is presumed to know enough about device composition to create the bundle.\r\n\r\nI think that it has information that can be discovered by enumerating subattesters in an install directory, but not intimate knowledge that subattesters will have. If we're putting significance on labels for verifiers to interpret as they see fit, I'm still a bit at a loss why CBOR is allowed to use integer keys when JSON can only use strings. The serialization choice is confusing. At least for the int in type: in CBOR has a specific meaning that translates through registered CoAP values to the normal Content-type string. For labels it's so open-ended that you may end up with it carrying way more semantic content than one would hope it to carry.\r\n\r\nPerhaps I'm reading too deeply into the close symmetries between CMW and the TLS extensions from the tls-attestation draft and it's the TLS attestation doc that should be revised. Still, is there any proposed use of labels so far that uses them for semantic content? Your responses don't suggest as much. Thomas, do you have an existence proof for your protocol X?",
          "createdAt": "2024-02-20T21:12:09Z",
          "updatedAt": "2024-02-20T21:12:09Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > The lead Attester is presumed to know enough about device composition to create the bundle.\r\n>\r\n> I think that it has information that can be discovered by enumerating subattesters in an install directory, but not intimate knowledge that subattesters will have.\r\n\r\nA _generic_ lead attester, like the \"evidence collection daemon\" (`ecd(8)` for short), has to have some way to discover its subattesters' arrangement.  Either via static configuration or some form of dynamic discovery (e.g., the one you suggest above).\r\n\r\nThis arrangement is going to be reflected in the CWM collection labelling, which is one facet of the `ecd(8)`'s external-facing interface, i.e., its \"protocol\".\r\n\r\nIn my fantasy, the protocol objects returned by `ecd(8)` are EAT containing the CMW collection as one of the claims, e.g.:\r\n\r\n```json\r\n{\r\n  \"cmw\": {\r\n    \"cpu.0\": [\r\n      \"application/vnd.A\",\r\n      \"...\"\r\n    ],\r\n    \"gpu.0\": [\r\n      \"application/vnd.B\",\r\n      \"...\"\r\n    ],\r\n    \"nic.0\": [\r\n      \"application/vnd.C\",\r\n      \"...\"\r\n    ],\r\n    \"nic.1\": [\r\n      \"application/vnd.D\",\r\n      \"...\"\r\n    ]\r\n  },\r\n  \"iss\": \"ecd v0.0.1\",\r\n  \"exp\": 2024129268,\r\n  \"eat_profile\": \"tag:github.com,2024:deeglaze/ecd\"\r\n}\r\n```\r\n\r\n",
          "createdAt": "2024-02-21T10:12:09Z",
          "updatedAt": "2024-02-21T10:12:09Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm confused. My understanding is that EAT is a representation of attestation results, which comes after the appraisal of evidence. I'm concerned with transmitting evidence to the verifier to then turn into attestation results that would be wrapped in an EAT to send along to the RP.\r\n\r\nThe \"Taming attestation for the cloud native world with Parsec\" talk Paul pointed me to says their model also expects to only send along a CMW (around 21 minutes in) https://youtu.be/NJKi3O0hhPo?si=P3_vimu4gUgKckWt&t=1280",
          "createdAt": "2024-02-25T22:28:42Z",
          "updatedAt": "2024-02-25T22:28:42Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'm confused. My understanding is that EAT is a representation of attestation results, which comes after the appraisal of evidence.\r\n\r\nNo, EAT is a *generic* data format for attestation-related claims-sets, including Evidence (e.g., [PSA](https://datatracker.ietf.org/doc/draft-tschofenig-rats-psa-token/)) and Attestation Results (e.g., [EAR](https://datatracker.ietf.org/doc/draft-fv-rats-ear)).\r\n",
          "createdAt": "2024-02-26T10:09:50Z",
          "updatedAt": "2024-02-26T10:09:50Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@deeglaze, is there anything actionable related to this issue?\r\n\r\nIf so, could you please suggest some text?\r\n\r\nIf not, could this be closed?",
          "createdAt": "2024-02-28T16:40:33Z",
          "updatedAt": "2024-02-28T16:40:33Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'll suggest some text.",
          "createdAt": "2024-03-01T16:11:39Z",
          "updatedAt": "2024-03-01T16:11:39Z"
        }
      ]
    },
    {
      "number": 75,
      "id": "I_kwDOIGCt2M6Abb3M",
      "title": "the type of a collection",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/75",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "WGLC"
      ],
      "body": "Since #67 a CMW can also be a collection.\r\n\r\nBut now we have introduced a slight asymmetry: the typing mechanism we have for non-collection CMWs does not apply to collections, i.e., collections don't have an intrinsic way to describe their overall type.\r\n\r\nClearly, one can always define the media type of a given collection, but that's an extrinsic property and is not always useful.\r\n\r\nProblems linked to this asymmetry have popped up in the use of CMW collections with the X.509 wrapper where the OID is not a sufficient indication for the processor to make sense of the wrapped CMW collection as a whole.\r\n\r\nOne possibility is to reuse the EAT approach and reserve a specific label for a type indicator, e.g.:\r\n\r\n```\r\njson-collection = {\r\n  ? \"__cmwc_t\": uri / oid\r\n  + text => json-CMW / c2j-tunnel\r\n}\r\ncbor-collection = {\r\n  ? \"__cmwc_t\": uri / oid\r\n  + (int / text) => cbor-CMW / j2c-tunnel\r\n}\r\n```\r\n\r\n(Note the use of CDDL's [cut](https://datatracker.ietf.org/doc/html/rfc8610#section-3.5.4) in the definition which prevents further matching on the same \"reserved\" label.)\r\n\r\nNote that we could derive automatic media types using the base `application/cmw+cbor` (or `application/cmw+json`) and add a `t` parameter with the value of the `__cmwc_t` key.",
      "createdAt": "2024-02-26T17:06:03Z",
      "updatedAt": "2024-02-27T10:57:25Z",
      "closedAt": "2024-02-27T10:17:15Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "What might a content author populate the  `? \"__cmwc_t\": uri / oid ` with that is different from the text in `text => json-CMW`?  \r\n\r\nI'm afraid I don't understand the problem that this proposal fixes.",
          "createdAt": "2024-02-27T01:07:50Z",
          "updatedAt": "2024-02-27T01:07:50Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> What might a content author populate the  ? \"__cmwc_t\": uri / oid  with that is different from the text in text => json-CMW?\r\n\r\nAn example:\r\n\r\n```json\r\n{\r\n  \"__cmwc_t\": \"tag:example.com,2024:combined-evidence\",\r\n\r\n  \"kat\": [\r\n    \"application/kat+jwt\",\r\n    \"eyJhbGci...\"\r\n  ],\r\n  \r\n  \"pat\": [\r\n    \"application/pat+jwt\",\r\n    \"eyJhbGci...\"\r\n  ]\r\n}\r\n```\r\n",
          "createdAt": "2024-02-27T02:18:12Z",
          "updatedAt": "2024-02-27T02:18:12Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for quickly adressing this issue!",
          "createdAt": "2024-02-27T10:57:24Z",
          "updatedAt": "2024-02-27T10:57:24Z"
        }
      ]
    },
    {
      "number": 81,
      "id": "I_kwDOIGCt2M6CEcS-",
      "title": "Trust contexts to consider",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/81",
      "state": "CLOSED",
      "author": "MikeCamel",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "1. do I trust this party to create a measurement (this isn't that important, I suspect, as we should always verify!)\r\n2. do I trust this party to verify the measurement?\r\n3. do I trust this party to attest to another party (or possibly the linkage to another party)?\r\n4. do I trust this party to create a topology of trust relationships?\r\n\r\nThese are clearly different trust contexts, but people don't understand very well that contexts must be separated, so we should call this out and ensure that the semantics we're creating support them from the very initial version and any implementation (or people will combine them, and implementations will allow combinations to support previous versions, which is a Bad Thing[tm]).",
      "createdAt": "2024-03-12T16:56:44Z",
      "updatedAt": "2024-11-15T09:01:20Z",
      "closedAt": "2024-11-15T09:01:20Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @MikeCamel.\r\n\r\nUsing RATS terminology, I interpret 1. as \"trusting evidence\" based on endorsements, such as those from the supply chain.  Adn I interpret 2. as \"trusting attestation results,\" meaning trusting the verifier, usually by knowing and trusting its signing key.\r\n\r\nRe: 3. and 4.  I interpret 3. as \"verifying that the expected transitive trust relationships are in place\", and 4. as a generalisation of 3, where instead of a linear chain, the trust relationships are modelled as a graph.\r\n\r\n1 and 2 are not within CMW's scope, whilst 3 and 4 seem very relevant.  Especially when CMWs are used to describe [layered attesters](https://www.rfc-editor.org/rfc/rfc9334.html#section-3.2) (case 3) or [composite devices](https://www.rfc-editor.org/rfc/rfc9334.html#section-3.3) (case 4).\r\n\r\n\r\n",
          "createdAt": "2024-06-12T13:49:09Z",
          "updatedAt": "2024-11-15T08:56:59Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "In #113 and #117, we have extended the \"security considerations\" and \"CMW collections\" sections to discuss the trust implications when using CMW collections to model layered attesters and composite devices.\r\n",
          "createdAt": "2024-11-15T09:01:20Z",
          "updatedAt": "2024-11-15T09:01:20Z"
        }
      ]
    },
    {
      "number": 83,
      "id": "I_kwDOIGCt2M6CYjqN",
      "title": "Remove Claim Value Type(s) from IANA Consideration section for JWT",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/83",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Remove Claim Value Type(s): JSON Object or JSON Array should be removed since JWT registry doesn't have this field defined.",
      "createdAt": "2024-03-15T00:05:49Z",
      "updatedAt": "2024-05-02T15:43:40Z",
      "closedAt": "2024-05-02T15:43:40Z",
      "comments": []
    },
    {
      "number": 86,
      "id": "I_kwDOIGCt2M6Cwdpw",
      "title": "which OID arc should we use?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/86",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@ounsworth [commented](https://zulip.ietf.org/#narrow/stream/45-rats/topic/ietf-119/near/109103) on the [CMW extension](https://www.ietf.org/archive/id/draft-ietf-rats-msg-wrap-04.html#section-5.1):\r\n\r\n> [\u00a76.3 of draft-ietf-lamps-csr-attestation-08](https://www.ietf.org/archive/id/draft-ietf-lamps-csr-attestation-08.html#section-6.3) defines a new registry: _\"SMI Security for PKIX Evidence Statement Formats\"_ which might be a better place to put it?\r\n\r\nSince CMW is not evidence-only, the name of the CSR-attestation registry should be probably tweaked to match the extended semantic.\r\n\r\ncc @mcr",
      "createdAt": "2024-03-19T00:21:23Z",
      "updatedAt": "2024-06-25T07:45:36Z",
      "closedAt": "2024-06-25T07:45:36Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Twin issue: https://github.com/lamps-wg/csr-attestation/issues/109",
          "createdAt": "2024-03-19T00:22:58Z",
          "updatedAt": "2024-03-19T00:22:58Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Since 4 Jun, codepoint 35 has been allocated by IANA in the [\"SMI Security for PKIX Certificate Extension\"](https://www.iana.org/assignments/smi-numbers/smi-numbers.xhtml#smi-numbers-1.3.6.1.5.5.7.1) registry for CMW.",
          "createdAt": "2024-06-12T13:53:06Z",
          "updatedAt": "2024-06-12T13:53:06Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I guess this can be closed on our side at least.\r\n\r\nFeel free to reopen if there is anything left to discuss.",
          "createdAt": "2024-06-25T07:45:36Z",
          "updatedAt": "2024-06-25T07:45:36Z"
        }
      ]
    },
    {
      "number": 87,
      "id": "I_kwDOIGCt2M6KJ0ds",
      "title": "IoTdir review",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/87",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "[Mohit's IoT directorate review](https://mailarchive.ietf.org/arch/msg/rats/w7_wMuRenwMbTTmc9l_qMayRF44/)\r\n\r\nSome minor comments:\r\n\r\n* [x] Section 4: Perhaps expand what is CoRIM and add a reference to https://datatracker.ietf.org/doc/html/draft-ietf-rats-corim-04\r\n\r\n* [x] Section 5 and 5.1: It would be helpful for readers if a short use-case explaining when CMW would be transported in CRLs could be provided. While I can guess why a CMW would be in a CSR, I could not immediately understand when a CMW would be part of a CRL. Similarly, it would be helpful to explain where and how the ASN.1 module will be used. I assume it is relevant for cases where a certificate containing a CMW extension is passed around?\r\n\r\n* [x] Section 5.2: I wonder about the consequences of having two different CMW specifications: one by the Trusted Computing Group (TCG) and the other in this draft. I downloaded the TCG specification and found a reference to this draft.  Would it be possible for future versions of the TCG specification to reuse this draft rather than creating a subset? Also, this draft states that the \"CMW extension\" \"MUST NOT be marked critical,\" whereas the TCG specification states that the \"tcg-dice-conceptual-message-wrapper extension criticality flag SHOULD be marked critical.\" In summary, I wonder if these specifications can somehow be synchronized.\r\n\r\n* [x] Section 7: Please expand UCCS on first use: unprotected CWT Claims Sets (UCCS).\r\n",
      "createdAt": "2024-05-26T16:20:58Z",
      "updatedAt": "2024-06-11T10:11:40Z",
      "closedAt": "2024-06-11T10:11:40Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "For more context about the resolution of point 3, see https://mailarchive.ietf.org/arch/msg/rats/XFxvxa5EOn5q-8nRQV4Ir4DBymI/",
          "createdAt": "2024-05-30T16:05:01Z",
          "updatedAt": "2024-05-30T16:05:01Z"
        }
      ]
    },
    {
      "number": 89,
      "id": "I_kwDOIGCt2M6KrIOq",
      "title": "media-type pre-allocation to use provisional M-T registry",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/89",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "hannestschofenig",
        "nedmsmith",
        "thomas-fossati",
        "henkbirkholz"
      ],
      "labels": [],
      "body": "We've been informed that instead of making an early allocation in the registry at https://www.iana.org/assignments/media-types, we would need to add these to the provisional standard media type registry at https://www.iana.org/assignments/provisional-standard-media-types.\r\n\r\nWhen the document is approved for publication, we would remove those entries from the provisional registry and add them to the media type registry itself.\r\n\r\nIs it OK with the CMW authors for the pre-allocation request to be modified to target the Provisional Standard Media Type Registry?\r\n",
      "createdAt": "2024-05-30T21:21:37Z",
      "updatedAt": "2024-06-25T07:41:05Z",
      "closedAt": "2024-06-25T07:00:42Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is it OK with the CMW authors for the pre-allocation request to be modified to target the Provisional Standard Media Type Registry?\r\n\r\nWFM.  However, reading [Section 5.2.1 of RFC6838](https://www.rfc-editor.org/rfc/rfc6838.html#section-5.2.1):\r\n\r\n```\r\n   [a] provisional registration process is provided to\r\n   support early assignment of media type names in the standards tree.\r\n   A provisional registration MAY be submitted to IANA for standards-\r\n   tree types.  The only required fields in such registrations are the\r\n   media type name and contact information (including the standards-\r\n   related organization name).\r\n\r\n   Upon receipt of a provisional registration, IANA will check the name\r\n   and contact information, then publish the registration in a distinct\r\n   publicly visible provisional registration list.\r\n```\r\n\r\nfrom the I-D perspective, there is nothing extra to do.\r\n\r\nWe probably just need to send a request to IANA to trigger the registration in the Provisional registry.\r\n\r\n",
          "createdAt": "2024-05-31T09:45:41Z",
          "updatedAt": "2024-05-31T09:45:41Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "done: https://www.iana.org/assignments/provisional-standard-media-types/provisional-standard-media-types.xhtml#provisional-standard-types",
          "createdAt": "2024-06-25T07:00:42Z",
          "updatedAt": "2024-06-25T07:41:05Z"
        }
      ]
    },
    {
      "number": 90,
      "id": "I_kwDOIGCt2M6KrOOi",
      "title": "Pre-allocation to RATS Conceptual Message Wrapper Indicators\" registry",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/90",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "hannestschofenig",
        "nedmsmith",
        "thomas-fossati",
        "henkbirkholz"
      ],
      "labels": [],
      "body": "IANA is not allowed to create a new registry and create pre-allocation entries. \r\n\r\nRFC 7120 allows for early allocations from existing registries (with chair and AD approval, or just AD approval if the document is AD-sponsored), but it doesn't permit the early creation of registries.\r\n\r\nWe are looking at how to make this work for a 7120bis (no text yet), which we'll be discussing with the IESG in Vancouver, but that's not very helpful at the moment. (Logistical issues include what to do with abandoned registries given that we prefer not to delete them, whether intended registration procedure should affect the early registration procedure, and how allocations from yet-to-be-approved documents should be carried over when the IESG approves the document that contains the registry.)\r\n\r\nIn the meantime, the two options available would probably be to 1) include any other drafts' registrations in the document that contains the registry, and use a \"reference\" field to refer to those other drafts, or 2) limit the registrations in the I-D version of the registry as desired, but have the WG maintain a living registry of some kind in a wiki or in github that can contain entries for other documents. In the latter case, it would be important to make sure that nobody can add entries to that living pre-registry once IANA creates the actual registry.\r\n\r\nIANA expert also asked the CMW authors to add the following text to the IANA section, table 2, for this registry:\r\n\"4-255 | Unassigned\".",
      "createdAt": "2024-05-30T21:44:48Z",
      "updatedAt": "2024-05-31T15:52:39Z",
      "closedAt": "2024-05-31T15:43:21Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "In terms of new registries, we only create the [\"CMW indicators\"](https://www.ietf.org/archive/id/draft-ietf-rats-msg-wrap-04.html#section-8.4), which comes pre-populated with a bunch of reasonable codepoints already.\r\n\r\nTo cover the (remote?) risk of someone wanting to add further registration in the short term, I like the idea of handling a \"provisional registry\" page as a file under revision control in the msg-wrap repo.  People wanting to add their codepoints would make a PR changing that file (and the I-D).\r\n\r\n(Let me know if you are OK with the proposal above and I'll go ahead and add the file and document the procedure in the I-D.)\r\n",
          "createdAt": "2024-05-31T10:00:06Z",
          "updatedAt": "2024-05-31T10:00:58Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "So, we should say no to IANA for using the provisional registry?",
          "createdAt": "2024-05-31T15:00:25Z",
          "updatedAt": "2024-05-31T15:00:25Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> So, we should say no to IANA for using the provisional registry?\r\n\r\nyes, we can host the provisional registry ourselves and shut it down when IANA takes over.",
          "createdAt": "2024-05-31T15:14:40Z",
          "updatedAt": "2024-05-31T15:14:40Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I withdrew the IANA request for CMW Indicators registry early allocation.",
          "createdAt": "2024-05-31T15:43:21Z",
          "updatedAt": "2024-05-31T15:43:21Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I withdrew the IANA request for CMW Indicators registry early allocation.\r\n\r\nCool.  I'll take this as a yes to my question: https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/90#issuecomment-2141676903 :-)",
          "createdAt": "2024-05-31T15:52:38Z",
          "updatedAt": "2024-05-31T15:52:38Z"
        }
      ]
    },
    {
      "number": 93,
      "id": "I_kwDOIGCt2M6LTV90",
      "title": "Indicator for attester key certificate?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/93",
      "state": "CLOSED",
      "author": "deeglaze",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "On AMD SEV-SNP, every machine has its own attestation-signing key that is cached on the node. The VMM is permitted to give the certificate to the guest in an \"auxblob\" as a means of avoiding a runtime dependency on a low query-per-second (QPS) service that provides the certificates given data that is available in the attestation reports (product, CHIP_ID and TCB_VERSION).\r\n\r\nTo help out the attestation verification service, we pass that certificate along to allow it to avoid its own fetch from a cache. My thinking was that we'd put this in the CMW under an x509 certificate content type (`application/pem-certificate-chain` maybe? `application/x-x509-ca-cert` seems like a misnomer) but with an indicator that it's an attestation key certificate, or as an endorsement with a new content type that I negotiate with AMD to register with the IANA.\r\n\r\nIs cached certificate collateral for helping interpret evidence... reference value? Endorsement? Or some new indicator? If AMD were to write its certificate provisioning service with CoRIM in mind, they might provide their x.509 certificate in a corim's cose headers, where the corim just describes the data that are currently in the x.509 extensions https://www.amd.com/content/dam/amd/en/documents/epyc-technical-docs/specifications/57230.pdf. I'm guessing since there's no reference or endorsement triple involved in giving the attestation key data... it's a new indicator? ",
      "createdAt": "2024-06-06T01:15:18Z",
      "updatedAt": "2024-06-11T13:02:55Z",
      "closedAt": "2024-06-11T13:02:55Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is cached certificate collateral for helping interpret evidence... reference value? Endorsement? Or some new indicator?\r\n\r\nLooks like `endorsements: 1` to me.",
          "createdAt": "2024-06-11T10:21:11Z",
          "updatedAt": "2024-06-11T10:21:11Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Good enough for me",
          "createdAt": "2024-06-11T13:02:55Z",
          "updatedAt": "2024-06-11T13:02:55Z"
        }
      ]
    },
    {
      "number": 94,
      "id": "I_kwDOIGCt2M6L3H1S",
      "title": "`cmw` is not defined with sufficient precision",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/94",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "Comment from Mike Jones:\r\n\r\n> _\"I believe that Section 3.1 needs to be revised to say that the json-record is the value of the \"cwm\" JWT claim and the cbor-record is the value of the \"cwm\" CWT claim.\"_\r\n",
      "createdAt": "2024-06-11T13:45:11Z",
      "updatedAt": "2024-06-12T09:37:26Z",
      "closedAt": "2024-06-12T09:37:26Z",
      "comments": []
    },
    {
      "number": 96,
      "id": "I_kwDOIGCt2M6L_8Ed",
      "title": "naming is hard",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/96",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The name `id-pe-cmw-collection` is not a great choice: a CMW can be a record, a tag or a collection, so emphasising \"collection\" seems unwarranted.\r\n\r\nI propose we use `id-pe-cmw` instead.",
      "createdAt": "2024-06-12T13:33:16Z",
      "updatedAt": "2024-06-13T14:25:52Z",
      "closedAt": "2024-06-13T14:25:52Z",
      "comments": []
    },
    {
      "number": 100,
      "id": "I_kwDOIGCt2M6NaFmi",
      "title": "Should we also register a couple of CoAP Content-Formats?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/100",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "At present, we don't.  However, while we are at it, it probably makes sense.",
      "createdAt": "2024-06-25T11:22:03Z",
      "updatedAt": "2024-06-26T21:06:56Z",
      "closedAt": "2024-06-26T21:06:55Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "OK",
          "createdAt": "2024-06-25T19:34:55Z",
          "updatedAt": "2024-06-25T19:34:55Z"
        }
      ]
    },
    {
      "number": 101,
      "id": "I_kwDOIGCt2M6NeSFY",
      "title": "JSON Web Token Registry pre-assignment wording change needed",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/101",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "IANA experts feedback: I believe that Section 3.1 needs to be revised to say that the json-record is the value of the \u201ccwm\u201d JWT claim and the cbor-record is the value of the \u201ccwm\u201d CWT claim.  ",
      "createdAt": "2024-06-25T19:42:01Z",
      "updatedAt": "2024-06-26T21:09:07Z",
      "closedAt": "2024-06-26T21:09:07Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe the requested prose is already in the [second paragraph of Section 3.1](https://www.ietf.org/archive/id/draft-ietf-rats-msg-wrap-05.html#section-3.1-2):\r\n\r\n> _\"A CMW record carried in a cmw JWT claim ([Section 8.2](https://www.ietf.org/archive/id/draft-ietf-rats-msg-wrap-05.html#iana-jwt)) MUST be a json-record. A CMW record carried in a cmw CWT claim ([Section 8.1](https://www.ietf.org/archive/id/draft-ietf-rats-msg-wrap-05.html#iana-cwt)) MUST be a cbor-record.\"_",
          "createdAt": "2024-06-25T20:58:35Z",
          "updatedAt": "2024-06-25T20:58:35Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Is it a problem if we also say this in section 3.1?\r\n",
          "createdAt": "2024-06-25T21:00:54Z",
          "updatedAt": "2024-06-25T21:00:54Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is it a problem if we also say this in section 3.1?\r\n\r\nThe quoted sentences are taken from section 3.1.",
          "createdAt": "2024-06-25T21:05:24Z",
          "updatedAt": "2024-06-25T21:05:24Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "This is a duplicate of #94 which has been addressed by #95 and published in -05.",
          "createdAt": "2024-06-26T21:09:07Z",
          "updatedAt": "2024-06-26T21:09:07Z"
        }
      ]
    },
    {
      "number": 104,
      "id": "I_kwDOIGCt2M6NuXW_",
      "title": "Section 3.3.1 is not clear",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/104",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Carl, about #78 :\r\n\r\n> _'I read the PR but can't say that it helps much. The phrase \"If a label changes Verifier state beyond a \"hint\"\" must be evaluated from the point of view of a verifier, right? If different verifiers may elect to use or ignore a \"hint\", I don't see how this could be any other way. The rest of that sentence establishes that how a verifier acts upon a \"hint\" determines whether a label is considered to carry semantic content. This impacts the next sentence, which states that \"the collection SHOULD be signed by an attestation key\" when a label carries semantic content.  Maybe stating \"if an attester expects for a label to change Verifier state beyond a \"hint\"\" would salvage the paragraph. Separately, is \"label\" right here or should it be \"item\" or \"message\"? It might also help if \"hint\" were defined in this context as well as how the \"hint\" notion interacts with the last point made in the security considerations section.'_\r\n",
      "createdAt": "2024-06-27T10:12:35Z",
      "updatedAt": "2024-07-01T16:52:11Z",
      "closedAt": "2024-07-01T16:52:10Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "/cc @deeglaze ",
          "createdAt": "2024-06-27T10:12:53Z",
          "updatedAt": "2024-06-27T10:12:53Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "\"hint\" refers to `text`in the `json-collection` and `(int/text)` in the `cbor-collection`. \r\n\r\nWe didn't provide CDDL tagging to help with semantics. Possibly we could define them as:\r\n```\r\njson-collection = {\r\n  ? \"__cmwc_t\": ~uri / oid\r\n  + hint: text => json-CMW / c2j-tunnel\r\n}\r\n\r\ncbor-collection = {\r\n  ? \"__cmwc_t\": ~uri / oid\r\n  + hint: (int / text) => cbor-CMW / j2c-tunnel\r\n}\r\n```\r\n\r\nthen the prose in \u00a73.3.1 would be more easily connected for the reader.\r\n\r\nThe prose might be improved by:\r\n\r\n\"A CMW Collection's tree structure is not required to be a spanning tree of the system's composite Attester topology. If the hint includes semantic content for a Verifier (e.g., for better Verifier performance or human comprehension), the collection SHOULD be integrity protected, e.g., by including it in a signed token such as a CWT or JWT.\"\r\n\r\nNote: It isn't strictly necessary to include the hint in an Evidence structure. For example, DICE includes hint information in a certificate extension, but not one that is considered to be Evidence such as DiceTcbInfo. Certs can play multiple roles so it may not be exclusively an \"attestation\" key. \r\n\r\nTechnically, hints aren't Evidence because there is no expectation for matching Reference Values and because they are information intended for consumption by a Verifier. Uncorroborated Evidence is still meaningful without RVs, but the intended audience is a RP (or appraisal policy), whereas hints would not be added to an ACS.\r\n\r\nA CWT/JWT containing EAT Claims is said to be an \"EAT\" token, but a profile determines whether it is Evidence, Endorsement, or RVs. A `cmw` can contain both Evidence and non-evidence information, much like a DICE cert does. The hint information is non-evidence. \r\n\r\nA second form of integrity protection is to create a Claim that has the same semantics as the hint and put that claim in Evidence or Endorsements. This seems like an advanced alternative that doesn't need to be captured in prose as the current example is sufficient to illustrate the concept of integrity protection.\r\n\r\nIt isn't necessary to include the signed token / Evidence in a CMW collection either, as long as it is integrity protected somehow. \r\n",
          "createdAt": "2024-06-28T17:12:00Z",
          "updatedAt": "2024-06-28T17:36:29Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> \"hint\" refers to `text`in the `json-collection` and `(int/text)` in the `cbor-collection`.\r\n> \r\n> We didn't provide CDDL tagging to help with semantics. Possibly we could define them as:\r\n> \r\n> ```\r\n> json-collection = {\r\n>   ? \"__cmwc_t\": ~uri / oid\r\n>   + hint: text => json-CMW / c2j-tunnel\r\n> }\r\n> \r\n> cbor-collection = {\r\n>   ? \"__cmwc_t\": ~uri / oid\r\n>   + hint: (int / text) => cbor-CMW / j2c-tunnel\r\n> }\r\n> ```\r\n> \r\n> then the prose in \u00a73.3.1 would be more easily connected for the reader.\r\n\r\nWe already have the term \"label\" to refer to that, we should just use it consistently.\r\n",
          "createdAt": "2024-06-28T17:49:41Z",
          "updatedAt": "2024-06-28T17:50:09Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> We already have the term \"label\" to refer to that, we should just use it consistently.\r\n\r\nI didn't see `label` in the CDDL. That is the part that is potentially confusing to readers IMO.\r\n\r\nDoes this CDDL work:\r\n```\r\njson-collection = {\r\n  ? \"__cmwc_t\": ~uri / oid\r\n  + label: text => json-CMW / c2j-tunnel\r\n}\r\n\r\ncbor-collection = {\r\n  ? \"__cmwc_t\": ~uri / oid\r\n  + label: (int / text) => cbor-CMW / j2c-tunnel\r\n}\r\n```",
          "createdAt": "2024-06-28T17:58:12Z",
          "updatedAt": "2024-06-28T17:58:12Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > We already have the term \"label\" to refer to that, we should just use it consistently.\r\n> \r\n> I didn't see `label` in the CDDL. That is the part that is potentially confusing to readers IMO.\r\n> \r\n> Does this CDDL work:\r\n> \r\n> ```\r\n> json-collection = {\r\n>   ? \"__cmwc_t\": ~uri / oid\r\n>   + label: text => json-CMW / c2j-tunnel\r\n> }\r\n> \r\n> cbor-collection = {\r\n>   ? \"__cmwc_t\": ~uri / oid\r\n>   + label: (int / text) => cbor-CMW / j2c-tunnel\r\n> }\r\n> ```\r\n\r\nI think you need to do:\r\n```\r\n@@ -1,9 +1,9 @@\r\n json-collection = {\r\n   ? \"__cmwc_t\": ~uri / oid\r\n   + &(label: text) => json-CMW / c2j-tunnel\r\n }\r\n\r\n cbor-collection = {\r\n   ? \"__cmwc_t\": ~uri / oid\r\n   + &(label: (int / text)) => cbor-CMW / j2c-tunnel\r\n }\r\n```\r\n\r\n",
          "createdAt": "2024-06-28T18:03:34Z",
          "updatedAt": "2024-06-28T18:03:34Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "fixed by PR #106 ",
          "createdAt": "2024-06-28T18:28:57Z",
          "updatedAt": "2024-06-28T18:28:57Z"
        }
      ]
    },
    {
      "number": 108,
      "id": "I_kwDOIGCt2M6Qi7Xv",
      "title": "Further comments from Mike",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/108",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "Some [further comments](https://mailarchive.ietf.org/arch/msg/rats/3XR_dNtlNKgc6bY6C4n3biaPuko/) from Mike Jones:\r\n\r\n* [x] I suggest changing the identifier \"base64-string\" to \"base64url-string\" or \"base64url-encoded-string\".  The current name could be interpreted ambiguously by implementers. If you want to be even more precise, I'd suggest referencing the \"Base64url Encoding\" definition in Section 2 of RFC 7515.\r\n\r\n* [x] Finally, in the Acknowledgments, please change \"Mike Jones\" to \"Michael B. Jones\".  (My name is very common so I always include the middle initial in professional contexts to try to help with disambiguation.)\r\n\r\n\r\n",
      "createdAt": "2024-07-23T12:19:45Z",
      "updatedAt": "2024-07-24T17:30:20Z",
      "closedAt": "2024-07-24T17:30:20Z",
      "comments": []
    },
    {
      "number": 110,
      "id": "I_kwDOIGCt2M6SqHJW",
      "title": "collection binding: expand security consideration",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/110",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "WGLC"
      ],
      "body": "Laurence has [proposed text](https://mailarchive.ietf.org/arch/msg/rats/kruW3-EGxemSBQM_0laRoEhnHZM/) that adds more security considerations about the binding mechanisms for collection CMWs:\r\n\r\n> _When CMW is used to carry multiple evidence messages for a composite device, layered attestation or such, there should be strong binding between the evidence messages. This is to prevent attacks where evidence from a subverted part of the device is replaced by evidence from a separate non-subverted device._\r\n>\r\n> _The binding of evidence messages should be some form of attestation. For example, key material used to sign/bind an entire CMW collection should be attestation key material handled as described in RFC 9334 12.1. The binding might also be by identifiers, cross linking, signing or hashing between the members of the collection (it doesn\u2019t have to be a signature over the CMW collection)._\r\n>\r\n> _Client authenticated TLS may be used to bind a CMW collection of evidence messages, but the client key used with TLS should not be that of the end user or owner of the device or such. It should be attestation-oriented key material from the device or attester manufacturer._\r\n\r\n",
      "createdAt": "2024-08-12T09:44:36Z",
      "updatedAt": "2024-09-02T15:03:43Z",
      "closedAt": "2024-09-02T15:03:43Z",
      "comments": []
    },
    {
      "number": 111,
      "id": "I_kwDOIGCt2M6S0EML",
      "title": "{abstract,intro} += media types",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/111",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "WGLC"
      ],
      "body": "@ionut-arm suggested adding the following to the abstract and intro:\r\n\r\n> _\"This document also defines a Media Type and a CoAP Content-Format for transporting CMWs in HTTP, MIME, CoAP and other Internet protocols.\"_",
      "createdAt": "2024-08-13T11:35:03Z",
      "updatedAt": "2024-08-29T14:46:19Z",
      "closedAt": "2024-08-29T14:46:19Z",
      "comments": []
    },
    {
      "number": 115,
      "id": "I_kwDOIGCt2M6WnDCo",
      "title": "Describe possible ways to secure collections",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/115",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "### Composite attester\r\n\r\nThe lead attester wraps the collection in a signed envelope.  For example, using the `cmw` claim with EAT/JWT/CWT, or using the `id-pe-cmw` extension in a X.509 cert/CSR.\r\n\r\n### Layered attester\r\n\r\nThe collection members are chain-locked via some special-purpose \"claim\".  In practice, the attestation scheme must devise a method by which the locking property for the $i$-th layer is captured by layer $(i-1)$-th - similar to DICE.  Examples: Arm CCA delegated attestation, where the locking is obtained via $L_0$ (Platform) capturing the \"delegated\" signing key of layer $L_1$ (Realm) through the `eat_nonce` claim. ",
      "createdAt": "2024-09-15T09:09:12Z",
      "updatedAt": "2024-10-20T10:32:54Z",
      "closedAt": "2024-10-20T10:32:54Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@laurencelundblade has proposed text for S3.3 in an [email](https://mailarchive.ietf.org/arch/msg/rats/-ob1tn6YCPPWoSr__Z4LNr_qMuc/) on the RATS mailing list:\r\n\r\n> Collections are multipurpose.\r\n> They may be used to carry groups of Endorsements or Reference Values, Evidence and so on.\r\n> One CMW can be a mixture of different types of messages.\r\n> One CMW can be used to carry messages related to more than one, even thousands of, devices.\r\n>\r\n> CMW itself provides no facilities for authenticity, integrity protection, privacy or attestation security.\r\n> It is up to the designer of each use case to understand the security properties necessary and add them around CMW.\r\n> Simple TLS may be sufficient, but not always.\r\n>\r\n> When a CMW is used to carry the Evidence for composite or layered attestation for a single device, the security properties needed are that of attesatation.\r\n> In particular, all the members in a CMW must be bound together so that an attacker can not replace one Evidence message showing compromise with that from a non-compromised device.\r\n> The authenticity and integrity protection MUST be attestation-oriented.\r\n>\r\n> EAT submods [ref to EAT ] provide a facility for composite and layered attestation that has built-in security and will be suitable for most attestation Evidence use cases.\r\n> CMW collections is a little more flexible for some use cases, but requires the user to design and assemble their own attestation security features.\r\n",
          "createdAt": "2024-09-18T07:54:43Z",
          "updatedAt": "2024-09-18T07:54:43Z"
        }
      ]
    },
    {
      "number": 116,
      "id": "I_kwDOIGCt2M6W5YGV",
      "title": "Are examples realistic?",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/116",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "NONE",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "In the following, I don't think the example tokens are either real b64-encoded tokens or CBOR-encoded tokens. They probably should be to help people understand. For example, I don't know what 4c693475 is.\r\n\r\nIt would be a lot of work, but you could import EAT CDDL and use the .b64 and .cbor control operators to validate into them with the cddl tool. I did that with EAT and was able to make some useful corrections to my examples.\r\n\r\n```\r\n{\r\n  \"attester A\": [\r\n    30001,\r\n    h'2347da55',\r\n    4\r\n  ],\r\n  \"attester B\": 1668576818(h'2347da55'),\r\n  \"attester C\": [\r\n    \"application/eat+jwt\",\r\n    h'4c693475',\r\n    8\r\n  ]\r\n}\r\n```",
      "createdAt": "2024-09-17T16:47:09Z",
      "updatedAt": "2024-11-15T17:10:22Z",
      "closedAt": "2024-11-15T17:10:22Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> For example, I don't know what 4c693475 is.\r\n\r\nit's `...` base-64 encoded, i.e., the JWT delimiters.\r\n\r\nTo present something more realistic, we could replace it with the JSON claims-set from EAT's intro, sign it with HS256 and have:\r\n```\r\neyJhbGciOiJIUzI1NiJ9.eyJlYXRfbm9uY2UiOiJNSURCTkgyOGlpb2lzalB5IiwidWVpZCI6IkFnQUVpenJLM1EiLCJvZW1pZCI6NzY1NDMsInN3bmFtZSI6IkFjbWUgSW9UIE9TIiwic3d2ZXJzaW9uIjoiMy4xLjQifQ.m_nRRsJIyNq_VT4qeL2SMfgOowkfi-34QtnjeglCU3w\r\n```\r\n\r\n> It would be a lot of work, but you could import EAT CDDL and use the .b64 and .cbor control operators to validate into them with the cddl tool. I did that with EAT and was able to make some useful corrections to my examples.\r\n\r\nI'd like to minimise this kind of work at this stage.\r\n",
          "createdAt": "2024-09-18T08:52:14Z",
          "updatedAt": "2024-09-18T08:53:52Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "NONE",
          "body": "The b64 decoders I tried, two of them, don't decode  4c693475 to ...  Encoding ... gives Li4uC\r\n\r\nI know it's a lot of work (and you have many docs to worry about!).  I did all this work for EAT.\r\n\r\nIf you don't do this, probably adding a note to indicate what they are so people don't try to interpret and get confused like I did. ",
          "createdAt": "2024-09-30T03:21:16Z",
          "updatedAt": "2024-09-30T03:21:16Z"
        }
      ]
    },
    {
      "number": 123,
      "id": "I_kwDOIGCt2M6bsz8X",
      "title": "Expected use of cmw and CF in IANA section could be more clear",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/123",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Section 10.3 defines the CBOR tag `CPA765` and section 6. defines the expected content as `CMW`. \r\n\r\nSection 10.6 requests TBD1 and TBD2 from CF registry. Section 3.2 defines $cbor-tag socket and uses example `tn` and `$fmt` inputs to the macro. But it doesn't describe if the macro should be used for the TBD1 input.  There is an example that defines $cbor-tag as `cbor-tag<1668576818, any>`. But it isn't clear if 1668576818 is the intended TN result from TBD1 or if the intended $fmt is `any`.  In other words, is the following macro definition intended?\r\n```\r\n; 1668576818 = tn(TBD1)\r\n$cbor-tag /= cbor-tag<1668576818, any>\r\n; or possibly\r\n$cbor-tag /= cbor-tag<1668576818, cmw>\r\n```\r\nThe various media-type / content-format names use `cmw` (e.g., `cmw+cbor`, `cmw+json`), but there isn't text that explicitly associates the I-D use of \"CMW\" with the cddl `cmw`.  The top level `cmw` isn't discussed in the normative part of the I-D. For example, it would be helpful if the following cddl was described in section 3.\r\n```\r\ncmw = json-CMW / cbor-CMW\r\n\r\njson-CMW = json-record / json-collection\r\ncbor-CMW = cbor-record / cbor-collection / $cbor-tag\r\n```\r\nwith text that equates CMW with `cmw`. \r\n",
      "createdAt": "2024-10-24T17:42:40Z",
      "updatedAt": "2024-11-16T05:37:59Z",
      "closedAt": "2024-11-16T05:37:59Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Since in -10 we have removed the plug-in for EAT submods, this issue seems OBE.\r\n\r\n@nedmsmith could you confirm?  (If so, please close this.)",
          "createdAt": "2024-11-15T14:02:26Z",
          "updatedAt": "2024-11-15T14:02:26Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Since in -10 we have removed the plug-in for EAT submods, this issue seems OBE.\r\n\r\nNo. The issue is `cmw` isn't defined normatively. \r\nSection 3 refers to appendix A, which contains `cmw`, but appendices are not normative.\r\n\r\nSection 3 also incorrectly positions that there are 2 CMW types defined in the draft, but there are 3 since it defines an ASN.1 form. There is a top level definition of CMW for the ASN.1 form\r\n```\r\nCMW ::= CHOICE {\r\n    json UTF8String,\r\n    cbor OCTET STRING\r\n}\r\n```\r\nBut not the CDDL form.\r\n\r\nThe document readability is diminished by lax use of \"CMW\" as both an acronym for \"Conceptual Message Wrapper\", a normative ASN.1 expression and a normative CBOR/JSON expression (at least in part) in `json-CMW` and `cbor-CMW`. None of the other CDDL uses upper case, so it is a strange break in convention.\r\n\r\n",
          "createdAt": "2024-11-15T16:53:05Z",
          "updatedAt": "2024-11-15T16:53:05Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Since in -10 we have removed the plug-in for EAT submods, this issue seems OBE.\r\n> \r\n> No. The issue is `cmw` isn't defined normatively. Section 3 refers to appendix A, which contains `cmw`\r\n\r\nWe could add the top level rules into Section 3:\r\n\r\n```\r\nstart = cmw\r\n\r\ncmw = json-CMW / cbor-CMW\r\n\r\njson-CMW = json-record / json-collection\r\ncbor-CMW = cbor-record / cbor-collection / $cbor-tag\r\n```\r\n\r\nAlternatively, we could move the CDDL to a normal section in the `--- middle` of the document.\r\n\r\n> [...] appendices are not normative.\r\n\r\nI am not sure that's the case.  This is @henkbirkholz's mantra ;-) but I have at least one example of a normative appendix in mind.\r\n\r\n> Section 3 also incorrectly positions that there are 2 CMW types defined in the draft, but there are 3 since it defines an ASN.1 form. There is a top level definition of CMW for the ASN.1 form\r\n> \r\n> ```\r\n> CMW ::= CHOICE {\r\n>     json UTF8String,\r\n>     cbor OCTET STRING\r\n> }\r\n> ```\r\n\r\nI wonder whether this can be considered a distinct definition though.  I see it just as an ASN.1 stash for something that's defined elsewhere.\r\n\r\n> The document readability is diminished by lax use of \"CMW\" as both an acronym for \"Conceptual Message Wrapper\", a normative ASN.1 expression and a normative CBOR/JSON expression (at least in part) in `json-CMW` and `cbor-CMW`. None of the other CDDL uses upper case, so it is a strange break in convention.\r\n\r\nI am not adverse to change.  I only lack a bit of fantasy and motivation in this specific case :-) Do you have a suggestion?\r\n",
          "createdAt": "2024-11-15T17:28:51Z",
          "updatedAt": "2024-11-15T17:28:51Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">We could add the top level rules into Section 3:\r\n\r\nThis is my preference. Section 3 should be re-titled to \"Conceptual Message Wrapper\" since this section is both about the type and the encoding.\r\n\r\nA new section 3.1 should be created that describes the top-level construction of \"cmw\".  The document flows better if it describes the thing from top to bottom rather than the other way around. Mathematicians might prefer the other way around, but everybody else prefers top down (IMHO).\r\n\r\nThe new section 3.1 could point out that the ASN.1/der encoding is another form of `cmw` as in:\r\n```\r\ncmw = json-CMW / cbor-CMW / CMW\r\n```\r\nBut the CDDL bridge to ASN.1 isn't there yet. But the wording should make it clear that the above CDDL example is what is intended.\r\n\r\n>I am not sure that's the case.\r\n\r\nIf in doubt put it in the main body of the spec.\r\n\r\n>I wonder whether this can be considered a distinct definition though. I see it just as an ASN.1 stash for something that's defined elsewhere.\r\n\r\nThe stash is just a reference back to the json-CMW or cbor-CMW, but the top level definition implies all of the above forms are defined. The CDDL could have used an extensible type form to make it clear there could be others defined down the road (as these are the \"basic\" definitions).\r\n```\r\ncmw-type /= cbor-CMW\r\ncmw-type /= json-CMW\r\ncmw-type /= der-CMW ; where der-CMW is defined by the ASN.1 definition of `CMW`\r\n```\r\n>Do you have a suggestion?\r\n\r\nWhat about:\r\n```\r\ncmw = json-cmw / cbor-cmw\r\njson-cmw = json-record / json-collection\r\ncbor-cmw = cbor-record / cbor-collection / $cbor-tag\r\n```\r\nor\r\n```\r\ncmw = cmw-type\r\ncmw-type /= json-cmw\r\ncmw-type /= cbor-cmw\r\n```",
          "createdAt": "2024-11-15T17:58:56Z",
          "updatedAt": "2024-11-15T17:58:56Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > We could add the top level rules into Section 3:\r\n> \r\n> This is my preference. Section 3 should be re-titled to \"Conceptual Message Wrapper\" since this section is both about the type and the encoding.\r\n> \r\n> A new section 3.1 should be created that describes the top-level construction of \"cmw\". The document flows better if it describes the thing from top to bottom rather than the other way around.\r\n\r\nNoted.\r\n\r\n> Mathematicians might prefer the other way around, but everybody else prefers top down (IMHO).\r\n\r\nThat must be it then :-)\r\n\r\n> The new section 3.1 could point out that the ASN.1/der encoding is another form of `cmw` as in:\r\n> \r\n> ```\r\n> cmw = json-CMW / cbor-CMW / CMW\r\n> ```\r\n> \r\n> But the CDDL bridge to ASN.1 isn't there yet. But the wording should make it clear that the above CDDL example is what is intended.\r\n\r\nYes, that needs to be stated in natural language.\r\n\r\n> > I am not sure that's the case.\r\n> \r\n> If in doubt put it in the main body of the spec.\r\n\r\nTBH, I don't know where this thing about default non-normative appendixes in RFCs comes from.\r\nHenk is the first IETF person I know who's so adamant about that :-)\r\n \r\n> > I wonder whether this can be considered a distinct definition though. I see it just as an ASN.1 stash for something that's defined elsewhere.\r\n> \r\n> The stash is just a reference back to the json-CMW or cbor-CMW, but the top level definition implies all of the above forms are defined. The CDDL could have used an extensible type form to make it clear there could be others defined down the road (as these are the \"basic\" definitions).\r\n> ```\r\n> cmw-type /= cbor-CMW\r\n> cmw-type /= json-CMW\r\n> cmw-type /= der-CMW ; where der-CMW is defined by the ASN.1 definition of `CMW`\r\n> ```\r\n\r\nCDDL is CBOR/JSON only, it can't plug into another language.  Well, it can pull in ABNF, but not ASN.1 or other spec languages I am afraid.\r\n\r\n\r\n>  > Do you have a suggestion?\r\n> \r\n> What about:\r\n> \r\n> ```\r\n> cmw = json-cmw / cbor-cmw\r\n> json-cmw = json-record / json-collection\r\n> cbor-cmw = cbor-record / cbor-collection / $cbor-tag\r\n> ```\r\n\r\nWFM!",
          "createdAt": "2024-11-15T18:11:33Z",
          "updatedAt": "2024-11-15T18:11:33Z"
        }
      ]
    },
    {
      "number": 125,
      "id": "I_kwDOIGCt2M6cS5hy",
      "title": "CBOR Tag CDDL is incorrect",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/125",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As noted by @carl-wallace in [this email](https://mailarchive.ietf.org/arch/msg/rats/wfv-J3RGEYvSgzeVJLwiPBlB7K0/), the CDDL description of the CBOR Tag form is incorrect as it'd force non-CBOR types to go through a double, unneeded, `bstr`-wrapping.\r\n\r\nThe CDDL is not even consistent with the surrounding prose.",
      "createdAt": "2024-10-29T19:55:37Z",
      "updatedAt": "2024-11-02T16:55:03Z",
      "closedAt": "2024-11-02T16:55:03Z",
      "comments": []
    },
    {
      "number": 129,
      "id": "I_kwDOIGCt2M6c1fbn",
      "title": "IANA review",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/129",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "* [x] Section 10.1: how should we fill in the registry\u2019s \u201cJWT Claim Name\u201d field? See https://www.iana.org/assignments/cwt\r\n\r\n\"cmw\"\r\n\r\n* [x] Should Section 10.4\u2019s new registry be added to the Remote Attestation Procedures (RATS) registry group at https://www.iana.org/assignments/rats?\r\n\r\nyes\r\n\r\n* [x] If possible, please name a desired range for the new CoAP Content-Format assignments. See https://www.iana.org/assignments/core-parameters.\r\n\r\n256-9999\r\n\r\n* [x] In Section 10.7, please provide the relevant registry name(s) from https://www.iana.org/assignments/smi-numbers and provide the information that should appear in each field in the registry.\r\n\r\n\"SMI Security for PKIX Certificate Extension\"\r\n",
      "createdAt": "2024-11-03T15:11:46Z",
      "updatedAt": "2024-11-15T08:55:23Z",
      "closedAt": "2024-11-15T08:55:22Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #130 ",
          "createdAt": "2024-11-15T08:55:22Z",
          "updatedAt": "2024-11-15T08:55:22Z"
        }
      ]
    },
    {
      "number": 132,
      "id": "I_kwDOIGCt2M6deMNP",
      "title": "CoAP content format with JSON",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/132",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "NONE",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "6.1 says it is OK to use the CoAP content format with json-record. 3.1 says it is not.\r\n\r\nSo far, I don't have a strong opinion for which way it should go.",
      "createdAt": "2024-11-07T19:13:43Z",
      "updatedAt": "2024-11-15T17:16:14Z",
      "closedAt": "2024-11-15T17:16:14Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Good catch!",
          "createdAt": "2024-11-07T19:44:08Z",
          "updatedAt": "2024-11-07T19:44:08Z"
        }
      ]
    },
    {
      "number": 133,
      "id": "I_kwDOIGCt2M6dedjG",
      "title": "Consistent use of term \"tag\"",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/133",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "NONE",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "* [x] 3.2 mentions \"prepending a tag\". I think this should be \"tag number\" since a \"tag\" is the number plus content.\r\n\r\n* [x] The first sentence in 3.2 is hard for me to interpret too.\r\n\r\n* [ ] The term \"CMW CBOR Tag\" may have double meaning, one in 3.2 and the other in 9.3.\r\n\r\n* [x] I don't know what a '\"native\" CBOR type' is.\r\n",
      "createdAt": "2024-11-07T19:44:48Z",
      "updatedAt": "2024-11-15T18:30:01Z",
      "closedAt": "2024-11-15T18:30:01Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The term \"CMW CBOR Tag\" may have double meaning, one in 3.2 and the other in 9.3.\r\n\r\nThe context should be sufficient to eliminate the potential ambiguity.",
          "createdAt": "2024-11-15T10:13:22Z",
          "updatedAt": "2024-11-15T10:13:22Z"
        }
      ]
    },
    {
      "number": 135,
      "id": "I_kwDOIGCt2M6eMsDb",
      "title": "RFC 9277 has exceptions for bstr wrapping of TN() (I think)",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/135",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "If I understand it, if the content of the TN tag is not a byte string, but rather tag 55799, 55800, or 55801, then byte string wrapping is side stepped.\r\n\r\nThat means the CDDL in the CMW document that forces the tag content to a byte string is wrong.\r\n\r\nSo 1668546930(55799(sensml-stuff-in-CBOR)) for sensml content.\r\n\r\nI still kind of wonder about making the section on tags very small and simple so as to not draw attention to them as we prefer content/media types.\r\n\r\n",
      "createdAt": "2024-11-13T04:34:46Z",
      "updatedAt": "2024-11-13T10:16:48Z",
      "closedAt": "2024-11-13T10:16:48Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> If I understand it, if the content of the TN tag is not a byte string, but rather tag 55799, 55800, or 55801, then byte string wrapping is side stepped.\r\n\r\nI think it's the other way around:\r\n\r\n> _\"Exceptionally, when used immediately as tag content of one of the tags 55799, 55800, or 55801, the tag content is as follows [...]\"_\r\n\r\ntalks about the case where a TN-derived tag is the tag content of one of 55799-55801, e.g., 55800(1330664270(h'424F52')).\r\n\r\nThis is not how we plan to use TN.  (Actually, this is another solid good argument for avoiding any non-TN tag as the outer type indicator.)\r\n\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2024-11-13T08:41:59Z",
          "updatedAt": "2024-11-13T08:41:59Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "NONE",
          "body": "Yes, you are right.\r\n",
          "createdAt": "2024-11-13T10:16:48Z",
          "updatedAt": "2024-11-13T10:16:48Z"
        }
      ]
    },
    {
      "number": 137,
      "id": "I_kwDOIGCt2M6eoOo2",
      "title": "downrefs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/137",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [],
      "body": "`idnits` reports two downrefs:\r\n\r\n```\r\n  ** Downref: Normative reference to an Informational RFC: RFC 5912\r\n  ** Downref: Normative reference to an Informational RFC: RFC 6268\r\n```",
      "createdAt": "2024-11-15T09:19:22Z",
      "updatedAt": "2024-11-15T16:58:07Z",
      "closedAt": "2024-11-15T16:58:07Z",
      "comments": []
    },
    {
      "number": 144,
      "id": "I_kwDOIGCt2M6eyGJl",
      "title": "IANA terminology",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/issues/144",
      "state": "CLOSED",
      "author": "cabo",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Analog of https://github.com/thomas-fossati/draft-cf-reg-update/issues/1",
      "createdAt": "2024-11-16T07:08:10Z",
      "updatedAt": "2024-11-16T19:22:37Z",
      "closedAt": "2024-11-16T19:22:37Z",
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 3,
      "id": "PR_kwDOIGCt2M5AmwzF",
      "title": "more words to the abstract and intro section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/3",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #2\r\n\r\nSigned-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-10-11T22:36:57Z",
      "updatedAt": "2022-10-12T17:29:47Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "6dfe433d1e720460515c1f54e092ecd6ec770d1c",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "intro++",
      "headRefOid": "44469365d8cfbb63e8d07ab33d1f1bb0b1132a05",
      "closedAt": "2022-10-12T17:24:52Z",
      "mergedAt": "2022-10-12T17:24:52Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "32412e960b74219ae05b973af83bc21ece9ff7d5"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "/cc @ionut-arm",
          "createdAt": "2022-10-11T22:49:53Z",
          "updatedAt": "2022-10-11T22:49:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5D2F8m",
          "commit": {
            "abbreviatedOid": "4446936"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "minor wording issue",
          "createdAt": "2022-10-11T23:13:51Z",
          "updatedAt": "2022-10-11T23:14:44Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Wording should say \"there are two formats\" rather than \"designed to have two formats\"",
              "createdAt": "2022-10-11T23:13:51Z",
              "updatedAt": "2022-10-11T23:14:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D4cly",
          "commit": {
            "abbreviatedOid": "4446936"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T10:52:29Z",
          "updatedAt": "2022-10-12T10:52:29Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I don't understand the editorial suggestion.  It doesn't seem to apply to L83.",
              "createdAt": "2022-10-12T10:52:29Z",
              "updatedAt": "2022-10-12T10:52:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D4hiG",
          "commit": {
            "abbreviatedOid": "4446936"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-12T11:08:56Z",
          "updatedAt": "2022-10-12T11:08:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5D5n8Q",
          "commit": {
            "abbreviatedOid": "4446936"
          },
          "author": "ionut-arm",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T14:13:52Z",
          "updatedAt": "2022-10-12T14:13:52Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Sounds like the suggested change would be along the lines of\r\n```suggestion\r\nThere are two encapsulation formats available:\r\n```",
              "createdAt": "2022-10-12T14:13:52Z",
              "updatedAt": "2022-10-12T14:13:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D578f",
          "commit": {
            "abbreviatedOid": "4446936"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T14:59:44Z",
          "updatedAt": "2022-10-12T14:59:44Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "yes, but that doesn't work with what follows: the bulleted list describes the design criteria of the encaps, not the encaps themselves.",
              "createdAt": "2022-10-12T14:59:44Z",
              "updatedAt": "2022-10-12T14:59:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D5-L3",
          "commit": {
            "abbreviatedOid": "4446936"
          },
          "author": "ionut-arm",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T15:05:12Z",
          "updatedAt": "2022-10-12T15:05:13Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Ah, right, I see now!",
              "createdAt": "2022-10-12T15:05:12Z",
              "updatedAt": "2022-10-12T15:05:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D6v4G",
          "commit": {
            "abbreviatedOid": "4446936"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T17:24:45Z",
          "updatedAt": "2022-10-12T17:24:45Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "closing this and merging.",
              "createdAt": "2022-10-12T17:24:45Z",
              "updatedAt": "2022-10-12T17:24:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOIGCt2M5Am1kS",
      "title": "add recommendations for registration of evidence media types",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/4",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #1\r\n\r\nSigned-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-10-11T23:03:51Z",
      "updatedAt": "2022-10-12T13:29:25Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "6dfe433d1e720460515c1f54e092ecd6ec770d1c",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "iana",
      "headRefOid": "c670403e4f38e414b684bba809b2a0263ff97826",
      "closedAt": "2022-10-12T13:29:24Z",
      "mergedAt": "2022-10-12T13:29:24Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "e1788b64f67e708191c66bd95516c6e1bde390fb"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "/cc @ionut-arm",
          "createdAt": "2022-10-11T23:04:03Z",
          "updatedAt": "2022-10-11T23:04:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5D2FOi",
          "commit": {
            "abbreviatedOid": "7db4eef"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-11T23:08:35Z",
          "updatedAt": "2022-10-11T23:08:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5D4HZh",
          "commit": {
            "abbreviatedOid": "7db4eef"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T09:46:42Z",
          "updatedAt": "2022-10-12T09:46:43Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\ndescription of the signing and appraisal procedures associated with\r\n```",
              "createdAt": "2022-10-12T09:46:42Z",
              "updatedAt": "2022-10-12T09:46:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D4hej",
          "commit": {
            "abbreviatedOid": "c670403"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-12T11:08:43Z",
          "updatedAt": "2022-10-12T11:08:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5D5QO3",
          "commit": {
            "abbreviatedOid": "c670403"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-12T13:21:18Z",
          "updatedAt": "2022-10-12T13:21:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOIGCt2M5AqCAS",
      "title": "polish for initial submit",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/5",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-12T14:09:52Z",
      "updatedAt": "2022-10-12T17:24:07Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "e1788b64f67e708191c66bd95516c6e1bde390fb",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "00-polish",
      "headRefOid": "7980f664747018f77c687b80285778966104a204",
      "closedAt": "2022-10-12T17:24:02Z",
      "mergedAt": "2022-10-12T17:24:02Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "d278add2ff92e9965f733e8be3a73339decc1f47"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5D6DAg",
          "commit": {
            "abbreviatedOid": "68755b1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM; bunch of small editorial comments",
          "createdAt": "2022-10-12T15:17:19Z",
          "updatedAt": "2022-10-12T15:19:53Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n1. a CMW using a CBOR or a JSON array ({{type-n-val}})\r\n```",
              "createdAt": "2022-10-12T15:17:20Z",
              "updatedAt": "2022-10-12T15:19:53Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\n2. a CMW based on CBOR tags ({{cbor-tag}}).\r\n```",
              "createdAt": "2022-10-12T15:17:27Z",
              "updatedAt": "2022-10-12T15:19:53Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nThe CMW array illustrated in {{fig-cddl}} is composed of two members:\r\n```",
              "createdAt": "2022-10-12T15:17:45Z",
              "updatedAt": "2022-10-12T15:19:53Z"
            },
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nA CMW array can be encoded as CBOR {{-cbor}} or JSON {{-json}}.\r\n```",
              "createdAt": "2022-10-12T15:18:41Z",
              "updatedAt": "2022-10-12T15:19:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D6IE7",
          "commit": {
            "abbreviatedOid": "68755b1"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-12T15:29:57Z",
          "updatedAt": "2022-10-12T15:29:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5D6OTN",
          "commit": {
            "abbreviatedOid": "68755b1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T15:44:59Z",
          "updatedAt": "2022-10-12T15:45:00Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nIf a CoAP Content Format exists for a CMW, the\r\n```",
              "createdAt": "2022-10-12T15:44:59Z",
              "updatedAt": "2022-10-12T15:45:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D6PEm",
          "commit": {
            "abbreviatedOid": "68755b1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T15:46:58Z",
          "updatedAt": "2022-10-12T15:46:59Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\n* value: the CMW serialized according to the\r\n```",
              "createdAt": "2022-10-12T15:46:58Z",
              "updatedAt": "2022-10-12T15:46:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D6QUY",
          "commit": {
            "abbreviatedOid": "68755b1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T15:48:56Z",
          "updatedAt": "2022-10-12T15:48:56Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "mmm, it's really the fact that a content format is defined for the top-level \"conceptual message\" that enables the automatic CBOR tagging.",
              "createdAt": "2022-10-12T15:48:56Z",
              "updatedAt": "2022-10-12T15:48:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5D6SKX",
          "commit": {
            "abbreviatedOid": "68755b1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T15:53:29Z",
          "updatedAt": "2022-10-12T15:53:29Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "the CMW is the whole she-bang, not just the value.",
              "createdAt": "2022-10-12T15:53:29Z",
              "updatedAt": "2022-10-12T15:53:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOIGCt2M5Aqjiq",
      "title": "Moving me last on the author's list",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/6",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-12T15:49:53Z",
      "updatedAt": "2022-10-12T17:24:23Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "e1788b64f67e708191c66bd95516c6e1bde390fb",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "72a60f18490094e18d1ac37af6852057a38773ed",
      "closedAt": "2022-10-12T17:24:20Z",
      "mergedAt": "2022-10-12T17:24:20Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "f391d28bc5076790ff6ec909b57f00fe2578bf32"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5D6Xxg",
          "commit": {
            "abbreviatedOid": "72a60f1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": ":-(",
          "createdAt": "2022-10-12T16:08:23Z",
          "updatedAt": "2022-10-12T16:08:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOIGCt2M5AywSz",
      "title": "Updated Introduction and Security Consideration Section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/7",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-14T07:19:53Z",
      "updatedAt": "2022-10-14T07:24:07Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "126c33c9bb0dc32474447f6b4eec60eee88df217",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "7098d4373c80737f63cf6411b9c48364c5495dbd",
      "closedAt": "2022-10-14T07:24:04Z",
      "mergedAt": "2022-10-14T07:24:04Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "359fa1f9a2795da4c58ecf3a122d6e66df30249b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5EEKgR",
          "commit": {
            "abbreviatedOid": "7098d43"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83d\udc4d ",
          "createdAt": "2022-10-14T07:23:47Z",
          "updatedAt": "2022-10-14T07:23:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOIGCt2M5BJbKb",
      "title": "clarify how to deal with pre-existing CBOR tags",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/9",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "(also `make fix-lint` to remove trailing whitespaces.)\r\n\r\nFix #8\r\n\r\nSigned-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-10-19T23:40:03Z",
      "updatedAt": "2022-10-20T12:00:07Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "359fa1f9a2795da4c58ecf3a122d6e66df30249b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "clarify",
      "headRefOid": "f5e20f2b89c83600129868acae1dd282903aaee7",
      "closedAt": "2022-10-20T12:00:03Z",
      "mergedAt": "2022-10-20T12:00:03Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "4fa7a453398c51c1dcb01f6c6a60fea1de8e057c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5Ec0Qx",
          "commit": {
            "abbreviatedOid": "147936d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-10-20T00:13:17Z",
          "updatedAt": "2022-10-20T00:13:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5Eedcc",
          "commit": {
            "abbreviatedOid": "147936d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2022-10-20T08:55:51Z",
          "updatedAt": "2022-10-20T09:00:52Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nThe first format uses a CBOR or JSON array with two members: one for the\r\n```",
              "createdAt": "2022-10-20T08:55:51Z",
              "updatedAt": "2022-10-20T09:00:52Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nThe first format uses a CBOR or JSON array with two members: one for the\r\ntype, another for the value.  The other format wraps the value in a CBOR\r\nbyte string and prepends a CBOR tag to convey the type information.\r\n```",
              "createdAt": "2022-10-20T08:57:26Z",
              "updatedAt": "2022-10-20T09:00:52Z"
            },
            {
              "originalPosition": 38,
              "body": "good",
              "createdAt": "2022-10-20T08:58:19Z",
              "updatedAt": "2022-10-20T09:00:52Z"
            },
            {
              "originalPosition": 67,
              "body": "yes",
              "createdAt": "2022-10-20T08:59:24Z",
              "updatedAt": "2022-10-20T09:00:52Z"
            },
            {
              "originalPosition": 71,
              "body": "Maybe a quick 'how' to be on the safest side?",
              "createdAt": "2022-10-20T09:00:04Z",
              "updatedAt": "2022-10-20T09:00:52Z"
            },
            {
              "originalPosition": 92,
              "body": "if your process has exactly zero other ways of checking that is",
              "createdAt": "2022-10-20T09:00:43Z",
              "updatedAt": "2022-10-20T09:00:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5EeuRN",
          "commit": {
            "abbreviatedOid": "147936d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-20T09:35:05Z",
          "updatedAt": "2022-10-20T09:35:05Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "not sure why this got duplicated.  resolved in a846601",
              "createdAt": "2022-10-20T09:35:05Z",
              "updatedAt": "2022-10-20T09:35:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5EewMv",
          "commit": {
            "abbreviatedOid": "147936d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-20T09:40:15Z",
          "updatedAt": "2022-10-20T09:40:15Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "done in f5e20f2\r\n",
              "createdAt": "2022-10-20T09:40:15Z",
              "updatedAt": "2022-10-20T09:40:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5EewZR",
          "commit": {
            "abbreviatedOid": "147936d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-20T09:40:47Z",
          "updatedAt": "2022-10-20T09:40:47Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "not sure what you mean here?",
              "createdAt": "2022-10-20T09:40:47Z",
              "updatedAt": "2022-10-20T09:40:47Z"
            }
          ]
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOIGCt2M5LJgwX",
      "title": "Update draft-ftbs-rats-msg-wrap.md",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/16",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "added section on enclapsulation decapsulation algorithm",
      "createdAt": "2023-03-02T17:03:50Z",
      "updatedAt": "2023-03-06T09:31:28Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "4fa7a453398c51c1dcb01f6c6a60fea1de8e057c",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "10-clearly-describe-encapdecap-algorithm",
      "headRefOid": "03ab92f849843bf0f31715f296b344f106dea8d3",
      "closedAt": "2023-03-06T09:31:23Z",
      "mergedAt": "2023-03-06T09:31:23Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "bd327f57a9a31e02914156284cbc50cfbebe4913"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5O0fkY",
          "commit": {
            "abbreviatedOid": "986ae9f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "thanks Ned.  I have inlined a few editorial suggestions.",
          "createdAt": "2023-03-02T18:20:43Z",
          "updatedAt": "2023-03-02T18:25:24Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "the content seems to be limited to the decap algorithm\r\n\r\n```suggestion\r\n## Decapsulation Algorithm\r\n```",
              "createdAt": "2023-03-02T18:20:43Z",
              "updatedAt": "2023-03-02T18:25:24Z"
            },
            {
              "originalPosition": 9,
              "body": "the existence of an external framing is not a necessity\r\n\r\n```suggestion\r\nAfter removing any external framing (for example, the ASN.1 OCTET STRING\r\nif the CMW is carried in a certificate extension {{DICE-arch}}), the CMW\r\ndecoder does a 1-byte lookahead, as illustrated in the following pseudo\r\ncode, to decide how to decode the remainder of the byte buffer:\r\n```",
              "createdAt": "2023-03-02T18:21:48Z",
              "updatedAt": "2023-03-02T18:25:24Z"
            },
            {
              "originalPosition": 20,
              "body": "kramdown-rfc uses `~~~` to delimit block codes.\r\n```suggestion\r\n~~~\r\nswitch b[0] {\r\ncase 0x82:\r\n  return CBORArrayDecode(b)\r\ncase 0x5b:\r\n  return JSONArrayDecode(b)\r\ndefault:\r\n  return CBORTagDecode(b)\r\n}\r\n~~~\r\n```",
              "createdAt": "2023-03-02T18:23:09Z",
              "updatedAt": "2023-03-02T18:25:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5O9CFX",
          "commit": {
            "abbreviatedOid": "03ab92f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83d\udea2 it",
          "createdAt": "2023-03-03T21:35:51Z",
          "updatedAt": "2023-03-03T21:35:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5PBCpl",
          "commit": {
            "abbreviatedOid": "03ab92f"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-03-06T07:58:30Z",
          "updatedAt": "2023-03-06T07:58:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOIGCt2M5LYMQx",
      "title": "address most open issues",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/17",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #11\r\nFix #12\r\nFix #13\r\nPartially address #14\r\n\r\nAlso:\r\n* add decoder code (incomplete)\r\n* add CDDL 2 for the CBOR tag format\r\n* add hex (wire) representations",
      "createdAt": "2023-03-06T14:52:17Z",
      "updatedAt": "2023-03-06T16:51:24Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "bd327f57a9a31e02914156284cbc50cfbebe4913",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "most-open-issues",
      "headRefOid": "8cd4218ce7484eaabc11126e1a70be5adfad2871",
      "closedAt": "2023-03-06T16:51:20Z",
      "mergedAt": "2023-03-06T16:51:20Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "0c99c9f9eab1256b9412cd379b41e6b51a79410b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5PErds",
          "commit": {
            "abbreviatedOid": "8cd4218"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-06T16:00:16Z",
          "updatedAt": "2023-03-06T16:00:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5PE9ug",
          "commit": {
            "abbreviatedOid": "8cd4218"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "checked the cddl part, skimmed the code part",
          "createdAt": "2023-03-06T16:34:38Z",
          "updatedAt": "2023-03-06T16:34:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOIGCt2M5NLgdl",
      "title": "add a CM indicator to the array form",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/20",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A draft proposal.  Note that this is slightly different from what discussed in the email thread in that the bit map is done using an integer type (rather than a byte string) in order make the CBOR and JSON representations more uniform.\r\n\r\nAddress #24 ",
      "createdAt": "2023-03-29T15:28:47Z",
      "updatedAt": "2023-04-18T16:32:13Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "eb7002957d7b613e2c71106039bd26963fa256c1",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "cm-ind",
      "headRefOid": "42a3a30409b03e770dfbad3fb6c0c08d060ca1d6",
      "closedAt": "2023-04-18T13:04:34Z",
      "mergedAt": "2023-04-18T13:04:33Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "5afda423e8cae6e4bd9842bf20a4e8993ef1be4d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5SxWco",
          "commit": {
            "abbreviatedOid": "dfa89d6"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "see suggested text at line 164",
          "createdAt": "2023-04-17T17:50:52Z",
          "updatedAt": "2023-04-17T17:51:55Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nnot profiled (e.g., `application/eat+cwt`) or if the `value` field contains multiple values having different `cm-type` values or if the same profile\r\n```",
              "createdAt": "2023-04-17T17:50:52Z",
              "updatedAt": "2023-04-17T17:51:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5SxXMo",
          "commit": {
            "abbreviatedOid": "dfa89d6"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-17T17:53:00Z",
          "updatedAt": "2023-04-17T17:53:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5S4a0i",
          "commit": {
            "abbreviatedOid": "dfa89d6"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T16:32:12Z",
          "updatedAt": "2023-04-18T16:32:13Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "done in https://github.com/thomas-fossati/draft-ftbs-rats-msg-wrap/pull/29",
              "createdAt": "2023-04-18T16:32:12Z",
              "updatedAt": "2023-04-18T16:32:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 21,
      "id": "PR_kwDOIGCt2M5NXjWh",
      "title": "add the registration howto to the appendix ",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/21",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #19 ",
      "createdAt": "2023-03-31T16:12:45Z",
      "updatedAt": "2023-04-02T17:35:13Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "eb7002957d7b613e2c71106039bd26963fa256c1",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "flow",
      "headRefOid": "1326297a681d2012587d9ce821b349d2007cc50f",
      "closedAt": "2023-04-02T17:35:10Z",
      "mergedAt": "2023-04-02T17:35:10Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "98a29543f38891630c2ef69059bf4b2238aea65b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5RfnGJ",
          "commit": {
            "abbreviatedOid": "7284c3e"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-31T16:21:02Z",
          "updatedAt": "2023-03-31T16:21:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5Rg6es",
          "commit": {
            "abbreviatedOid": "7284c3e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-03-31T20:50:41Z",
          "updatedAt": "2023-03-31T20:50:42Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "note that CoRIM uses the same scheme (i.e., base + profile) as EAT",
              "createdAt": "2023-03-31T20:50:41Z",
              "updatedAt": "2023-03-31T20:50:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5Ri9QH",
          "commit": {
            "abbreviatedOid": "7284c3e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-02T17:34:25Z",
          "updatedAt": "2023-04-02T17:34:25Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "done in [1326297](https://github.com/thomas-fossati/draft-ftbs-rats-msg-wrap/pull/21/commits/1326297a681d2012587d9ce821b349d2007cc50f)",
              "createdAt": "2023-04-02T17:34:25Z",
              "updatedAt": "2023-04-02T17:34:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 22,
      "id": "PR_kwDOIGCt2M5NXycu",
      "title": "clarify intro",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/22",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Attempt at addressing Carl's confusion on \u00a71:\r\n\r\n\"In the first sentence of the second paragraph, what is being registered or used interoperably? This would clarify what \"their\" means in the second sentence. I think the media type notion might need to be introduced before this paragraph.\"\r\n\r\nPartially addresses #15 \r\n",
      "createdAt": "2023-03-31T17:07:20Z",
      "updatedAt": "2023-04-18T13:03:30Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "eb7002957d7b613e2c71106039bd26963fa256c1",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "clarify-intro",
      "headRefOid": "0d34d7940b98ef05589b3628d4a1949139616cf5",
      "closedAt": "2023-04-18T13:03:26Z",
      "mergedAt": "2023-04-18T13:03:26Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "eb528a9648ce44402cbc4c119e4d281f50f6d94c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5Rf-9W",
          "commit": {
            "abbreviatedOid": "0d34d79"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-03-31T17:37:18Z",
          "updatedAt": "2023-03-31T17:37:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 23,
      "id": "PR_kwDOIGCt2M5Nd9Yw",
      "title": "more examples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/23",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Partially addresses #15",
      "createdAt": "2023-04-03T09:06:21Z",
      "updatedAt": "2023-04-18T13:03:50Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "98a29543f38891630c2ef69059bf4b2238aea65b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "more-examples",
      "headRefOid": "baf7e2b2f98cdc0e0b30361837b81b094fe47b29",
      "closedAt": "2023-04-18T13:03:47Z",
      "mergedAt": "2023-04-18T13:03:47Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "8dc0c9f4761dd9426ccc5f5f38f2afcd6b4179a2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5RnPTV",
          "commit": {
            "abbreviatedOid": "baf7e2b"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-03T15:06:17Z",
          "updatedAt": "2023-04-03T15:06:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 27,
      "id": "PR_kwDOIGCt2M5OlSrP",
      "title": "add an example with CM indicator",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/27",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-04-18T13:52:19Z",
      "updatedAt": "2023-04-19T11:37:26Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "5afda423e8cae6e4bd9842bf20a4e8993ef1be4d",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "cm-ind-examples",
      "headRefOid": "2a1c4986c6cb8bb6b7f302ee88f8a272aeed2637",
      "closedAt": "2023-04-19T11:37:23Z",
      "mergedAt": "2023-04-19T11:37:23Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "256b2bd43d664d2477e220ffab01a83eaa2d6a04"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5S4jRj",
          "commit": {
            "abbreviatedOid": "2a1c498"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-18T16:51:18Z",
          "updatedAt": "2023-04-18T16:51:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 28,
      "id": "PR_kwDOIGCt2M5OlX8I",
      "title": "add an implementation status section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/28",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-04-18T14:04:12Z",
      "updatedAt": "2023-04-19T11:37:11Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "5afda423e8cae6e4bd9842bf20a4e8993ef1be4d",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "impl-status",
      "headRefOid": "1ea8b9961d5479fd48713936bb927dd3c77abecb",
      "closedAt": "2023-04-19T11:37:07Z",
      "mergedAt": "2023-04-19T11:37:07Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "904e2232966a7b7938d23e7f735c5dfbbae819b4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5S4j3z",
          "commit": {
            "abbreviatedOid": "1ea8b99"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-18T16:52:52Z",
          "updatedAt": "2023-04-18T16:52:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOIGCt2M5OmN-5",
      "title": "Added missed review suggestion [1]",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/29",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added missed review suggestion [1], and rearranged the surrounding prose accordingly.\r\n\r\n[1] https://github.com/thomas-fossati/draft-ftbs-rats-msg-wrap/pull/20#discussion_r1169088805",
      "createdAt": "2023-04-18T16:21:25Z",
      "updatedAt": "2023-06-15T12:31:14Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "5afda423e8cae6e4bd9842bf20a4e8993ef1be4d",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "ned-missing-suggestion",
      "headRefOid": "e28702a2f2d6ad178fed1ac299f295aa4c5b6fc8",
      "closedAt": "2023-06-15T12:31:14Z",
      "mergedAt": "2023-06-15T12:31:14Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "8e95596e766e22d3920dd8b85ef98f4b40edb1cb"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": ":ship: it",
          "createdAt": "2023-06-15T12:29:15Z",
          "updatedAt": "2023-06-15T12:29:15Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5S4lMM",
          "commit": {
            "abbreviatedOid": "0d45aab"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T16:56:20Z",
          "updatedAt": "2023-04-18T16:56:36Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nfield contains multiple conceptual messages with different types (e.g.,\r\n```",
              "createdAt": "2023-04-18T16:56:20Z",
              "updatedAt": "2023-04-18T17:38:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5YTApY",
          "commit": {
            "abbreviatedOid": "9e4b3ad"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-06-15T11:46:21Z",
          "updatedAt": "2023-06-15T11:46:44Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "would \"different types\" not require at two examples?",
              "createdAt": "2023-06-15T11:46:21Z",
              "updatedAt": "2023-06-15T11:46:44Z"
            },
            {
              "originalPosition": 19,
              "body": "Also, maybe example?",
              "createdAt": "2023-06-15T11:46:36Z",
              "updatedAt": "2023-06-15T11:46:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5YTNRX",
          "commit": {
            "abbreviatedOid": "9e4b3ad"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T12:17:08Z",
          "updatedAt": "2023-06-15T12:17:08Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "There is no such thing that I could reference now.  Although it exists in principle, and IIRC Ned had a use case for that.",
              "createdAt": "2023-06-15T12:17:08Z",
              "updatedAt": "2023-06-15T12:17:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5YTRCq",
          "commit": {
            "abbreviatedOid": "9e4b3ad"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T12:25:35Z",
          "updatedAt": "2023-06-15T12:25:35Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nboth reference values and endorsements within the same `application/signed-corim+cbor`), or if the same profile identifier is\r\n```",
              "createdAt": "2023-06-15T12:25:35Z",
              "updatedAt": "2023-06-15T12:25:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5YTSh_",
          "commit": {
            "abbreviatedOid": "e28702a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-15T12:28:52Z",
          "updatedAt": "2023-06-15T12:28:59Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "good enough for CfA, I think.",
              "createdAt": "2023-06-15T12:28:52Z",
              "updatedAt": "2023-06-15T12:28:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5YTTWA",
          "commit": {
            "abbreviatedOid": "9e4b3ad"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-15T12:30:37Z",
          "updatedAt": "2023-06-15T12:30:37Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "done in [e28702a](https://github.com/thomas-fossati/draft-ftbs-rats-msg-wrap/pull/29/commits/e28702a2f2d6ad178fed1ac299f295aa4c5b6fc8)",
              "createdAt": "2023-06-15T12:30:37Z",
              "updatedAt": "2023-06-15T12:30:37Z"
            }
          ]
        }
      ]
    },
    {
      "number": 30,
      "id": "PR_kwDOIGCt2M5O_Fjt",
      "title": "apply Carl's suggestions and fixes",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/30",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "apply Carl's suggestions and fixes at [1]\r\n\r\n[1] https://github.com/thomas-fossati/draft-ftbs-rats-msg-wrap/issues/15#issuecomment-1516870623",
      "createdAt": "2023-04-24T10:29:57Z",
      "updatedAt": "2023-06-15T12:31:45Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "256b2bd43d664d2477e220ffab01a83eaa2d6a04",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "carls-review-nits",
      "headRefOid": "89a931dab29a243f00669f654a6c5531de948376",
      "closedAt": "2023-06-15T12:31:41Z",
      "mergedAt": "2023-06-15T12:31:41Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "af0432bd7014a5e6efa19c47d19f92e9cfcaaaba"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5YTBN9",
          "commit": {
            "abbreviatedOid": "89a931d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-15T11:47:53Z",
          "updatedAt": "2023-06-15T11:47:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOIGCt2M5XfCct",
      "title": "JWT/CWT claims and CBOR tag for CMWs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/32",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "Added IANA section for JWT and CWT registry entries for a 'cmw' element within a JWT or CWT. This allows any unsigned CMW message type definition to be included as a JWT or CWT payload.\r\n\r\nAlso added a CBOR tag for explicit typing of CBOR based serialisations (array and tag).\r\n\r\nFixes #25\r\nFixes #31 \r\n\r\n\r\n",
      "createdAt": "2023-08-09T00:24:02Z",
      "updatedAt": "2023-10-06T09:37:03Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "af0432bd7014a5e6efa19c47d19f92e9cfcaaaba",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "add-iana-section",
      "headRefOid": "b288559f5c0e6e506ef81fa8af5bd233756a707e",
      "closedAt": "2023-10-06T09:37:03Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Superseded by #33\r\n",
          "createdAt": "2023-10-06T09:37:03Z",
          "updatedAt": "2023-10-06T09:37:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5i61fT",
          "commit": {
            "abbreviatedOid": "ba70b30"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "a dodgy, CoI-infested approval :-)",
          "createdAt": "2023-10-05T11:22:05Z",
          "updatedAt": "2023-10-05T11:22:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5i8z84",
          "commit": {
            "abbreviatedOid": "50659a8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-05T15:03:44Z",
          "updatedAt": "2023-10-05T15:03:44Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nThis document defines a corresponding CBOR tag, as well as JWT and CWT claims.  These allow embedding the wrapped conceptual messages into CBOR-based protocols and web tokens.\r\n```",
              "createdAt": "2023-10-05T15:03:44Z",
              "updatedAt": "2023-10-05T15:09:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5i80MC",
          "commit": {
            "abbreviatedOid": "50659a8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-05T15:04:11Z",
          "updatedAt": "2023-10-05T15:04:12Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Maybe:\r\nformats -> data structures?",
              "createdAt": "2023-10-05T15:04:11Z",
              "updatedAt": "2023-10-05T15:04:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5i83wh",
          "commit": {
            "abbreviatedOid": "50659a8"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-05T15:09:53Z",
          "updatedAt": "2023-10-05T15:09:53Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I have updated your suggestion:\r\n* to fix some mismatched grammar, and\r\n* change \"formats\" into \"wrapped conceptual messages\"",
              "createdAt": "2023-10-05T15:09:53Z",
              "updatedAt": "2023-10-05T15:09:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5i88RC",
          "commit": {
            "abbreviatedOid": "50659a8"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-05T15:17:20Z",
          "updatedAt": "2023-10-05T15:17:20Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Maybe say \"...into CBOR-based protocols and structures, e.g., web tokens.\"",
              "createdAt": "2023-10-05T15:17:20Z",
              "updatedAt": "2023-10-05T15:17:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5i88bO",
          "commit": {
            "abbreviatedOid": "50659a8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-05T15:17:41Z",
          "updatedAt": "2023-10-05T15:17:41Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": ":sparkles: lgtm",
              "createdAt": "2023-10-05T15:17:41Z",
              "updatedAt": "2023-10-05T15:17:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5i88k_",
          "commit": {
            "abbreviatedOid": "50659a8"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM",
          "createdAt": "2023-10-05T15:18:01Z",
          "updatedAt": "2023-10-05T15:18:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5i89OK",
          "commit": {
            "abbreviatedOid": "de98cf3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "see suggested edit",
          "createdAt": "2023-10-05T15:19:19Z",
          "updatedAt": "2023-10-05T15:19:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThis document defines a corresponding CBOR tag, as well as JWT and CWT claims.  These allow embedding the wrapped conceptual messages into CBOR-based protocols and structures, e.g., web tokens.\r\n```",
              "createdAt": "2023-10-05T15:19:19Z",
              "updatedAt": "2023-10-05T15:19:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5i8_df",
          "commit": {
            "abbreviatedOid": "de98cf3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-05T15:23:43Z",
          "updatedAt": "2023-10-05T15:23:43Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Ned, the problem with the suggestion is that JWT is not a CBOR-based structure.\r\n\r\nThe two sentences are structured symmetrically:\r\n* CBOR tag -> CBOR-based protocols\r\n* JWT and CTW claims -> web tokens\r\n\r\nMaybe we should add a \"respectively\" to make the connection more explicit?",
              "createdAt": "2023-10-05T15:23:43Z",
              "updatedAt": "2023-10-05T15:23:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5i8_9l",
          "commit": {
            "abbreviatedOid": "de98cf3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-05T15:24:44Z",
          "updatedAt": "2023-10-05T15:24:44Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "OK",
              "createdAt": "2023-10-05T15:24:44Z",
              "updatedAt": "2023-10-05T15:24:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5i9ICx",
          "commit": {
            "abbreviatedOid": "de98cf3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-05T15:41:01Z",
          "updatedAt": "2023-10-05T15:41:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "see b288559f5c0e6e506ef81fa8af5bd233756a707e\r\n",
              "createdAt": "2023-10-05T15:41:01Z",
              "updatedAt": "2023-10-05T15:41:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5jB1Uv",
          "commit": {
            "abbreviatedOid": "b288559"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2023-10-06T09:01:23Z",
          "updatedAt": "2023-10-06T09:01:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOIGCt2M5cB3Qi",
      "title": "Extensibility rules for CM indicators",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/33",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add IANA paraphernalia to handle registrations of new CM indicators.\r\n\r\nFix #26 \r\n\r\n\r\n(This PR sits on top of #32, the relevant commit here is [2dddc46](https://github.com/thomas-fossati/draft-ftbs-rats-msg-wrap/pull/33/commits/2dddc46f5fa8030ee09425482c02043460fd3374))",
      "createdAt": "2023-10-05T16:09:55Z",
      "updatedAt": "2023-10-06T09:30:37Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "af0432bd7014a5e6efa19c47d19f92e9cfcaaaba",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "extentensible-cm-indicators",
      "headRefOid": "c4a51342688f8f313f879eb139f98ca2f5aa88ea",
      "closedAt": "2023-10-06T09:30:32Z",
      "mergedAt": "2023-10-06T09:30:32Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "a573d92da24d85e5a13bc8a13f6889c9fa465d6e"
      },
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "body": "Fine for me.",
          "createdAt": "2023-10-06T09:14:54Z",
          "updatedAt": "2023-10-06T09:14:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5i9fHe",
          "commit": {
            "abbreviatedOid": "2dddc46"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-05T16:31:21Z",
          "updatedAt": "2023-10-05T16:31:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5jB05i",
          "commit": {
            "abbreviatedOid": "2dddc46"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-06T09:00:18Z",
          "updatedAt": "2023-10-06T09:00:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5jB6Tp",
          "commit": {
            "abbreviatedOid": "2dddc46"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-06T09:14:24Z",
          "updatedAt": "2023-10-06T09:14:24Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThis document defines a corresponding CBOR tag, as well as JSON Web Tokens (JWT) and CBOR Web Tokens (CWT) claims.  These allow embedding the wrapped conceptual messages into CBOR-based protocols and web tokens.\r\n```",
              "createdAt": "2023-10-06T09:14:24Z",
              "updatedAt": "2023-10-06T09:14:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOIGCt2M5cB4jO",
      "title": "removing a out-of-scope section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/34",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "$title ",
      "createdAt": "2023-10-05T16:14:06Z",
      "updatedAt": "2023-10-06T08:52:39Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "af0432bd7014a5e6efa19c47d19f92e9cfcaaaba",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "remove-spurious-section",
      "headRefOid": "437d25c1eea2d588381d2984ad1585333dff745c",
      "closedAt": "2023-10-05T19:15:46Z",
      "mergedAt": "2023-10-05T19:15:46Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "46cbde8c024370b5873dcd2aa6232f986e58bd19"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5i9fcJ",
          "commit": {
            "abbreviatedOid": "437d25c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-05T16:32:04Z",
          "updatedAt": "2023-10-05T16:32:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5jBxxE",
          "commit": {
            "abbreviatedOid": "437d25c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I liked the notion that \"better define media-type for your CMs!\", but the text can survive without.",
          "createdAt": "2023-10-06T08:52:39Z",
          "updatedAt": "2023-10-06T08:52:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 35,
      "id": "PR_kwDOIGCt2M5cF8DH",
      "title": "s/web tokens/web APIs/g",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/35",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "${issue_title}",
      "createdAt": "2023-10-06T10:12:01Z",
      "updatedAt": "2023-10-06T14:53:01Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "10ee8859b9804e0588f17a1863b88acd3382a12f",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "web-tokens",
      "headRefOid": "e600e5a0c906d6b198323599cffe99ef7fa825d8",
      "closedAt": "2023-10-06T14:52:57Z",
      "mergedAt": "2023-10-06T14:52:57Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "412f49655c25a4b6b297e16bda907c7f3c516b14"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5jCsck",
          "commit": {
            "abbreviatedOid": "e600e5a"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-06T11:17:33Z",
          "updatedAt": "2023-10-06T11:17:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDOIGCt2M5g76Vg",
      "title": "rename individual to WG",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/36",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-01T21:03:22Z",
      "updatedAt": "2023-12-01T21:17:11Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "f26ff6a7fab02c5b0a97373af41ed9452aeb247e",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "rename",
      "headRefOid": "d42c4d781731dd5e459f3b1a30cb10a5e181d785",
      "closedAt": "2023-12-01T21:17:07Z",
      "mergedAt": "2023-12-01T21:17:07Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "bda1a4f3f0cd152ef094a4d6757ea2d48f693ead"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5o8EDT",
          "commit": {
            "abbreviatedOid": "d42c4d7"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-01T21:15:05Z",
          "updatedAt": "2023-12-01T21:15:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDOIGCt2M5iIB8f",
      "title": "Add CMW collections and media types",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/42",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Also fix idnits warning about use of non-ASCII characters\r\n\r\nFix #39\r\nFix #40",
      "createdAt": "2023-12-15T16:18:24Z",
      "updatedAt": "2023-12-21T09:19:32Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "bda1a4f3f0cd152ef094a4d6757ea2d48f693ead",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "collection+media-types",
      "headRefOid": "5d7a38b18f0c4e4d54c3280e98081aea4993848c",
      "closedAt": "2023-12-21T09:19:29Z",
      "mergedAt": "2023-12-21T09:19:29Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "6cfab6b8d76674699ddde39d57a63756f0d8a5ca"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the dependency triple can model that. Independent means the appraisal contexts are separate.",
          "createdAt": "2023-12-16T01:08:38Z",
          "updatedAt": "2023-12-16T08:34:20Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think the dependency triple can model that. Independent means the appraisal contexts are separate.\r\n\r\nOK, thanks. Now I understand what you were trying to say.  However, I still think that the highlighted bit is too context-sensitive and may not apply to all cases.  I'd prefer to drop it.",
          "createdAt": "2023-12-16T08:37:06Z",
          "updatedAt": "2023-12-16T08:37:06Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok",
          "createdAt": "2023-12-16T17:29:13Z",
          "updatedAt": "2023-12-20T17:04:01Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> Ok\r\n\r\ncool, see [7bb53e3](https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/42/commits/7bb53e3d5bf3dc03e93876fd743a855bf12cb1d8)",
          "createdAt": "2023-12-16T18:06:03Z",
          "updatedAt": "2023-12-16T18:06:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5qXvWN",
          "commit": {
            "abbreviatedOid": "3089734"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Several suggested changes in line.",
          "createdAt": "2023-12-15T17:48:55Z",
          "updatedAt": "2023-12-15T18:18:46Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nFor example, in data center servers, it is not uncommon for separate attesting environments (AE) to serve a subsection of the entire machine.\r\n```",
              "createdAt": "2023-12-15T17:48:55Z",
              "updatedAt": "2023-12-15T18:18:46Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nOne AE might measure and attest to what was booted on the main CPU, while another AE might measure and attest to what was booted on a SmartNIC plugged into a PCIe slot, and a third AE might measure and attest to what was booted on the machine's GPU.\r\n```",
              "createdAt": "2023-12-15T17:50:53Z",
              "updatedAt": "2023-12-15T18:18:46Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nTo address the composite Attester use case, this document defines a CMW \"collection\" as a container that holds several CMW evidence conceptual messages, each with a label that is unique within the scope of the collection.\r\n```",
              "createdAt": "2023-12-15T17:53:32Z",
              "updatedAt": "2023-12-15T19:52:47Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nThe position of a cmw entry in the `cmw-collection` is not significant.\r\nInstead, the labels identify a conceptual message that corresponds to a component of a system.\r\nLabels can be strings or integers that serve as a mnemonic for different conceptual messages in the collection.\r\n```",
              "createdAt": "2023-12-15T17:59:48Z",
              "updatedAt": "2023-12-16T18:04:08Z"
            },
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nAlthough initially designed for the composite attester use case,\r\nthe CMW collection can be repurposed for other use cases such as CMW aggregation.\r\nCMW aggregation might be used by a lead Attester to bundle Evidence obtained from multiple\r\nAttesters that rely on a lead Attester for connectivity to a remote Verifier.\r\n```",
              "createdAt": "2023-12-15T18:17:21Z",
              "updatedAt": "2023-12-15T18:18:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qYoUe",
          "commit": {
            "abbreviatedOid": "3089734"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-15T19:55:23Z",
          "updatedAt": "2023-12-15T19:55:24Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I am not sure\r\n\r\n> _\"[b]ut each conceptual message is processed independently.\"_\r\n\r\nis always valid.  For example, in a CCA collection the two CMWs are chained and one (the realm) can't be processed independently from the other (the platform).",
              "createdAt": "2023-12-15T19:55:23Z",
              "updatedAt": "2023-12-15T19:55:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qYpEh",
          "commit": {
            "abbreviatedOid": "3089734"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-15T19:58:07Z",
          "updatedAt": "2023-12-15T19:58:07Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "hmm, L342-343 seem to be restating the composite attester use case, which is already explained in L324-329.",
              "createdAt": "2023-12-15T19:58:07Z",
              "updatedAt": "2023-12-15T19:58:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qYrIS",
          "commit": {
            "abbreviatedOid": "9471487"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-15T20:04:26Z",
          "updatedAt": "2023-12-15T20:04:26Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Are you saying the reference values for the realm can be used to appraise the platform and vise versa?",
              "createdAt": "2023-12-15T20:04:26Z",
              "updatedAt": "2023-12-15T20:04:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qZYO2",
          "commit": {
            "abbreviatedOid": "3089734"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-15T22:58:19Z",
          "updatedAt": "2023-12-15T22:58:20Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "What I mean is that in CCA, the two processes are interrelated. Specifically, you can't start evaluating the realm part until you've ensured that the delegated key's attestation (which is included in the platform part) is good.\r\n\r\n",
              "createdAt": "2023-12-15T22:58:20Z",
              "updatedAt": "2023-12-15T22:58:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qbZF-",
          "commit": {
            "abbreviatedOid": "7bb53e3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T00:04:43Z",
          "updatedAt": "2023-12-18T00:04:44Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Is cmw-cbor-tag< > a macro? If so, where is it defined?",
              "createdAt": "2023-12-18T00:04:43Z",
              "updatedAt": "2023-12-18T00:04:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qbZLA",
          "commit": {
            "abbreviatedOid": "7bb53e3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T00:05:29Z",
          "updatedAt": "2023-12-18T00:10:27Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I don't especially like the colloquialism. ",
              "createdAt": "2023-12-18T00:05:29Z",
              "updatedAt": "2023-12-18T00:10:27Z"
            },
            {
              "originalPosition": 22,
              "body": "Maybe try rewording L324-329 to be more succinct and less colloquial?",
              "createdAt": "2023-12-18T00:07:46Z",
              "updatedAt": "2023-12-18T00:10:27Z"
            },
            {
              "originalPosition": 44,
              "body": "Is there a media type for anything that a tagged CBOR (i.e., its a CBOR tags registered tag)? \r\ne.g.: \"application/tagged+cbor\"",
              "createdAt": "2023-12-18T00:09:58Z",
              "updatedAt": "2023-12-18T00:10:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qelSm",
          "commit": {
            "abbreviatedOid": "7bb53e3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T10:07:20Z",
          "updatedAt": "2023-12-18T10:07:20Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "> Is `cmw-cbor-tag< >` a macro? If so, where is it defined?\r\n\r\nIt's defined in [Figure 2](https://www.ietf.org/archive/id/draft-ietf-rats-msg-wrap-00.html#figure-2) of the CMW document.  It uses CDDL 2 [\"Non-literal Tag Numbers\"](https://www.ietf.org/archive/id/draft-ietf-cbor-update-8610-grammar-02.html#section-3.2).",
              "createdAt": "2023-12-18T10:07:20Z",
              "updatedAt": "2023-12-18T10:07:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qel8a",
          "commit": {
            "abbreviatedOid": "7bb53e3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T10:08:30Z",
          "updatedAt": "2023-12-18T10:08:30Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "no",
              "createdAt": "2023-12-18T10:08:30Z",
              "updatedAt": "2023-12-18T10:08:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qesR6",
          "commit": {
            "abbreviatedOid": "7bb53e3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-18T10:17:05Z",
          "updatedAt": "2023-12-18T10:17:05Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "see [ac1bfe3](https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/42/commits/ac1bfe37b332e70249093b959ff8dc34a153a520)",
              "createdAt": "2023-12-18T10:17:05Z",
              "updatedAt": "2023-12-18T10:17:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qoijh",
          "commit": {
            "abbreviatedOid": "3089734"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-19T14:38:45Z",
          "updatedAt": "2023-12-19T14:38:45Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "see [ac1bfe3](https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/42/commits/ac1bfe37b332e70249093b959ff8dc34a153a520)",
              "createdAt": "2023-12-19T14:38:45Z",
              "updatedAt": "2023-12-19T14:38:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5qp4P7",
          "commit": {
            "abbreviatedOid": "566c8a5"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-19T17:12:56Z",
          "updatedAt": "2023-12-19T17:12:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDOIGCt2M5kBZsB",
      "title": "add the CBOR tag CDDL (using NLTN) to the testing machinery",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/43",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Carsten added NLTN support in cddl v0.10.5 :-)\r\n\r\nAlso add a \"collected CDDL\" and therefore\r\nFix #37",
      "createdAt": "2024-01-14T12:12:27Z",
      "updatedAt": "2024-01-25T16:28:07Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "6cfab6b8d76674699ddde39d57a63756f0d8a5ca",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "cbor-tag-in-cddl",
      "headRefOid": "956b46a441400c63555f5888d129491dcd474590",
      "closedAt": "2024-01-25T16:28:07Z",
      "mergedAt": "2024-01-25T16:28:07Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "72507479e450bf25c051602f22293836d60944d5"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz @nedmsmith @hannestschofenig ping!",
          "createdAt": "2024-01-24T08:44:08Z",
          "updatedAt": "2024-01-24T08:44:08Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5sfpXo",
          "commit": {
            "abbreviatedOid": "30dab46"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-14T13:56:08Z",
          "updatedAt": "2024-01-14T13:56:08Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nA further CMW \"collection\" type that holds together multiple CMW items is defined in {{cmw-coll}}.\r\n```",
              "createdAt": "2024-01-14T13:56:08Z",
              "updatedAt": "2024-01-14T13:56:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5sfpa_",
          "commit": {
            "abbreviatedOid": "6b5a79a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-14T13:57:18Z",
          "updatedAt": "2024-01-14T13:57:19Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nTo address the composite Attester use case, this document defines a CMW \"collection\" as a container that holds several CMW items, each with a label that is unique within the scope of the collection.\r\n```",
              "createdAt": "2024-01-14T13:57:19Z",
              "updatedAt": "2024-01-14T13:57:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5sfpeP",
          "commit": {
            "abbreviatedOid": "390d2c6"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-14T13:58:30Z",
          "updatedAt": "2024-01-14T13:58:30Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nInstead, the labels identify a conceptual message that, in the case of a composite attester, should typically correspond to a component of a system.\r\n```",
              "createdAt": "2024-01-14T13:58:30Z",
              "updatedAt": "2024-01-14T13:58:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5sfphd",
          "commit": {
            "abbreviatedOid": "e97071c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-14T13:59:48Z",
          "updatedAt": "2024-01-14T13:59:49Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-01-14T13:59:49Z",
              "updatedAt": "2024-01-14T13:59:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5t66DU",
          "commit": {
            "abbreviatedOid": "956b46a"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "It couldn't be better! :-)",
          "createdAt": "2024-01-25T16:27:58Z",
          "updatedAt": "2024-01-25T16:27:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 45,
      "id": "PR_kwDOIGCt2M5k8LTq",
      "title": "add x.509 extension for CMW collections ",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/45",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR is on top of #43.  The commit to review is ebdbc07",
      "createdAt": "2024-01-24T11:14:00Z",
      "updatedAt": "2024-01-25T16:34:00Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "72507479e450bf25c051602f22293836d60944d5",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "oid",
      "headRefOid": "787d9dce7528163a3266379d384fd5876266f574",
      "closedAt": "2024-01-25T16:34:00Z",
      "mergedAt": "2024-01-25T16:34:00Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "10142418a646aa9fad80a18b7d005156853e2f07"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "To be clear:\r\n\r\n* #43 is just adding Carsten's new CDDL machinery to our build/test/assemble.  It is also moving the \"collection\" section closer to the rest.  It's not changing *anything* in the contents.  Basically, this should just be merged as-is as it's purely mechanical work (and a bit of lift and shift).\r\n* #45 (this one) needs some more serious scrutiny, especially from people with x.509 knowledge.  This is built on top of the other's branch that's why you are seeing the other commits, and the reason why I pointed to the *only* commit that is relevant for review in the description.",
          "createdAt": "2024-01-24T16:59:12Z",
          "updatedAt": "2024-01-24T16:59:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5tw2um",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T14:33:14Z",
          "updatedAt": "2024-01-24T14:33:15Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "\"component of a system\" seems too vague. Either a component is a AE or a TE. I assume you mean AE, but that is unspecified in text.",
              "createdAt": "2024-01-24T14:33:14Z",
              "updatedAt": "2024-01-24T14:33:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5tw3P3",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T14:34:08Z",
          "updatedAt": "2024-01-24T14:34:09Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "As an Attester's TEs cannot produce Conceptual Messages this would mean you always mean AE?",
              "createdAt": "2024-01-24T14:34:09Z",
              "updatedAt": "2024-01-24T14:34:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5tw5Ft",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T14:37:21Z",
          "updatedAt": "2024-01-24T14:37:21Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": ":+1: reusing this section for CMW in CSR",
              "createdAt": "2024-01-24T14:37:21Z",
              "updatedAt": "2024-01-24T14:37:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5tyasM",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T17:02:06Z",
          "updatedAt": "2024-01-24T17:02:06Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This has changed the meaning.  The *or* seem to present alternatives, but that's not the case: in the composite attester multiple AEs co-exist in parallel.",
              "createdAt": "2024-01-24T17:02:06Z",
              "updatedAt": "2024-01-24T17:02:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5tylJf",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T17:24:48Z",
          "updatedAt": "2024-01-24T17:24:48Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Probably should be 'target environment'",
              "createdAt": "2024-01-24T17:24:48Z",
              "updatedAt": "2024-01-24T17:24:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5tyojy",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T17:32:11Z",
          "updatedAt": "2024-01-24T17:32:11Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "The ambiguous part is the meaning of 'correspond'. Either the label identifies the AE that produced the evidence, or it identifies the TEs that are the subject of claims collection. The label, nevertheless, is a hint. The cmw contents should describe system structure in terms of TE composition. ",
              "createdAt": "2024-01-24T17:32:11Z",
              "updatedAt": "2024-01-24T17:38:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5ty1Rr",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T17:52:24Z",
          "updatedAt": "2024-01-24T17:52:24Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Sure, that's great :-) but can we have the discussion about refining \u00a73.4 in another PR, please?  This PR is just concerned with registering an OID for the CMW collection extension.",
              "createdAt": "2024-01-24T17:52:24Z",
              "updatedAt": "2024-01-24T17:52:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5ty1sR",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T17:53:23Z",
          "updatedAt": "2024-01-24T17:53:24Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I am going to revert [8c5dcc3](https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/45/commits/8c5dcc304cd21a6c6672c3c2ca47fa70f315ee29) and create a new issue where to wordsmith \u00a73.4",
              "createdAt": "2024-01-24T17:53:24Z",
              "updatedAt": "2024-01-24T17:53:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5tyzQX",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T17:47:36Z",
          "updatedAt": "2024-01-24T17:56:20Z",
          "comments": [
            {
              "originalPosition": 140,
              "body": "`CMWCollectionExtn` doesn't appear to be consumed by anything. Why is it needed?",
              "createdAt": "2024-01-24T17:47:37Z",
              "updatedAt": "2024-01-24T17:56:20Z"
            },
            {
              "originalPosition": 150,
              "body": "This appears to be boilerplate. Should this be explained better? Seems to leave the reader guessing at its significance.",
              "createdAt": "2024-01-24T17:49:43Z",
              "updatedAt": "2024-01-24T17:56:20Z"
            },
            {
              "originalPosition": 5,
              "body": "OK",
              "createdAt": "2024-01-24T17:55:56Z",
              "updatedAt": "2024-01-24T17:56:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5ty3tk",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T17:58:00Z",
          "updatedAt": "2024-01-24T17:58:00Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Opened #46 to track this",
              "createdAt": "2024-01-24T17:58:00Z",
              "updatedAt": "2024-01-24T17:58:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5ty3y7",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T17:58:12Z",
          "updatedAt": "2024-01-24T17:58:12Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Opened #46 to track this",
              "createdAt": "2024-01-24T17:58:12Z",
              "updatedAt": "2024-01-24T17:58:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5ty58k",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T18:03:16Z",
          "updatedAt": "2024-01-24T18:03:16Z",
          "comments": [
            {
              "originalPosition": 140,
              "body": "This is the name of the ASN.1 module.\r\n\r\nIt's the name it'll be given when it lands in the [IANA registry](https://www.iana.org/assignments/smi-numbers/smi-numbers.xhtml#smi-numbers-1.3.6.1.5.5.7.0).\r\n\r\nWe are slaves to X.680 :)",
              "createdAt": "2024-01-24T18:03:16Z",
              "updatedAt": "2024-01-24T18:03:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5ty6w1",
          "commit": {
            "abbreviatedOid": "8c5dcc3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-24T18:05:10Z",
          "updatedAt": "2024-01-24T18:05:10Z",
          "comments": [
            {
              "originalPosition": 150,
              "body": "That's how the PKIX registration machinery is set up.",
              "createdAt": "2024-01-24T18:05:10Z",
              "updatedAt": "2024-01-24T18:05:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5t6zsK",
          "commit": {
            "abbreviatedOid": "ebdbc07"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-25T16:19:02Z",
          "updatedAt": "2024-01-25T16:19:02Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "```suggestion\r\nThere are cases where CMW and CMW collection payloads need to be transported in PKIX messages, for example in Certificate Signing Requests (CSRs) {{-csr-a}}, or in X.509 Certificates and Certificate Revocation Lists (CRLs) {{DICE-arch}}.\r\n```",
              "createdAt": "2024-01-25T16:19:02Z",
              "updatedAt": "2024-01-25T16:19:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5t60vN",
          "commit": {
            "abbreviatedOid": "ebdbc07"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-25T16:20:51Z",
          "updatedAt": "2024-01-25T16:20:52Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "```suggestion\r\nFor CMW, Section 6.1.8 of {{DICE-arch}} already defines the ConceptualMessageWrapper format and the associated object identifier.\r\n```",
              "createdAt": "2024-01-25T16:20:52Z",
              "updatedAt": "2024-01-25T16:20:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5t61Qb",
          "commit": {
            "abbreviatedOid": "ebdbc07"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-25T16:21:48Z",
          "updatedAt": "2024-01-25T16:21:48Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "+1",
              "createdAt": "2024-01-25T16:21:48Z",
              "updatedAt": "2024-01-25T16:21:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5t61U3",
          "commit": {
            "abbreviatedOid": "ebdbc07"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-25T16:21:55Z",
          "updatedAt": "2024-01-25T16:21:56Z",
          "comments": [
            {
              "originalPosition": 100,
              "body": "+1",
              "createdAt": "2024-01-25T16:21:56Z",
              "updatedAt": "2024-01-25T16:21:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5t65e2",
          "commit": {
            "abbreviatedOid": "bda9d6e"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "A big step forward for the draft. Please merge.",
          "createdAt": "2024-01-25T16:26:49Z",
          "updatedAt": "2024-01-25T16:26:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 48,
      "id": "PR_kwDOIGCt2M5lKC3p",
      "title": "make sure JSON referenced as STD90",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/48",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-26T12:54:33Z",
      "updatedAt": "2024-01-26T13:49:21Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "10142418a646aa9fad80a18b7d005156853e2f07",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "json==std90",
      "headRefOid": "9d6d9843e58291c05327b60f07890031f2c436da",
      "closedAt": "2024-01-26T13:49:21Z",
      "mergedAt": "2024-01-26T13:49:21Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "41ae8be79886b7daa74b3c57324a8cca504e480b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5uBEzb",
          "commit": {
            "abbreviatedOid": "9d6d984"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Go for it. ",
          "createdAt": "2024-01-26T13:40:17Z",
          "updatedAt": "2024-01-26T13:40:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 50,
      "id": "PR_kwDOIGCt2M5lOapU",
      "title": "Refine ASN.1 definition of the collection",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/50",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #49",
      "createdAt": "2024-01-27T11:55:31Z",
      "updatedAt": "2024-01-29T10:32:54Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "41ae8be79886b7daa74b3c57324a8cca504e480b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "collection-choice",
      "headRefOid": "e0161db766bcc142f3fbcfd3e7bc5ce01e40ab2f",
      "closedAt": "2024-01-29T10:32:51Z",
      "mergedAt": "2024-01-29T10:32:51Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "4846d61a60473fa7ef25e1bfb2751d476b90e802"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5uHB2B",
          "commit": {
            "abbreviatedOid": "e0161db"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-28T00:02:24Z",
          "updatedAt": "2024-01-28T00:02:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5uH3pg",
          "commit": {
            "abbreviatedOid": "e0161db"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for the quick reaction",
          "createdAt": "2024-01-28T14:29:56Z",
          "updatedAt": "2024-01-28T14:29:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5uKuQ8",
          "commit": {
            "abbreviatedOid": "e0161db"
          },
          "author": "carl-wallace",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-29T10:12:55Z",
          "updatedAt": "2024-01-29T10:12:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 51,
      "id": "PR_kwDOIGCt2M5lQ4T5",
      "title": "Updated Introduction",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/51",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-28T19:52:45Z",
      "updatedAt": "2024-01-29T18:24:21Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "41ae8be79886b7daa74b3c57324a8cca504e480b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "f52226617861713c0940d1fc6b8bbf2ae1b8d81f",
      "closedAt": "2024-01-29T10:33:52Z",
      "mergedAt": "2024-01-29T10:33:52Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "a97840f2309966603921c0b294a48e64b762bb24"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5uIIMZ",
          "commit": {
            "abbreviatedOid": "d0f97f3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "good stuff, thanks!\r\n\r\nWhile the iron is hot, I have a suggestion for removing some awkwardness from L123-130:\r\n\r\n---\r\n\r\nThe following encapsulation formats have been specifically designed to possess the following characteristics:\r\n- They are self-describing, which means that they can convey precise typing information without relying on the framing provided by the embedding protocol or the storage system.\r\n- They are based on media types {{-media-types}}, which allows the cost of their registration to be spread across numerous usage scenarios.\r\n\r\n---\r\n\r\n",
          "createdAt": "2024-01-28T20:20:06Z",
          "updatedAt": "2024-01-28T20:30:24Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "```suggestion\r\nattestation-related conceptual messages, such as different Evidence formats,\r\n```",
              "createdAt": "2024-01-28T20:20:06Z",
              "updatedAt": "2024-01-28T20:30:24Z"
            },
            {
              "originalPosition": 66,
              "body": "```suggestion\r\nextensions ({{DICE-arch}}), to embed Attestation Results or Evidence as\r\nfirst-class authentication credentials in TLS handshake messages\r\n```",
              "createdAt": "2024-01-28T20:20:52Z",
              "updatedAt": "2024-01-28T20:30:24Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nacross such protocol boundaries to minimize the cost associated with\r\n```",
              "createdAt": "2024-01-28T20:22:24Z",
              "updatedAt": "2024-01-28T20:30:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5uKvOC",
          "commit": {
            "abbreviatedOid": "54c80e4"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-29T10:14:49Z",
          "updatedAt": "2024-01-29T10:14:49Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\n- EAT {{-rats-eat}} Evidence in a \"background check\" topological\r\n```",
              "createdAt": "2024-01-29T10:14:49Z",
              "updatedAt": "2024-01-29T10:14:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5uPOwU",
          "commit": {
            "abbreviatedOid": "f522266"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Reference Values should be capitalized to follow the convention consistently.",
          "createdAt": "2024-01-29T18:23:35Z",
          "updatedAt": "2024-01-29T18:24:21Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "> Evidence, Endorsements and reference values in certificates and CRLs\r\n\r\nEvidence, Endorsements and Reference Values in certificates and CRLs",
              "createdAt": "2024-01-29T18:23:35Z",
              "updatedAt": "2024-01-29T18:24:21Z"
            }
          ]
        }
      ]
    },
    {
      "number": 52,
      "id": "PR_kwDOIGCt2M5lT04c",
      "title": "fix-lint",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/52",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-29T10:45:11Z",
      "updatedAt": "2024-01-29T16:52:50Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "a97840f2309966603921c0b294a48e64b762bb24",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "fix-lint",
      "headRefOid": "7f947094b623ed4a23dfdb184cc9623be9eeb040",
      "closedAt": "2024-01-29T16:52:47Z",
      "mergedAt": "2024-01-29T16:52:47Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "d68935903816d6b23d40b46d5561b269b80acae6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5uOISg",
          "commit": {
            "abbreviatedOid": "7f94709"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-29T16:52:43Z",
          "updatedAt": "2024-01-29T16:52:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOIGCt2M5lXzsi",
      "title": "mass capitalisation",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/53",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-29T20:22:11Z",
      "updatedAt": "2024-01-30T06:59:11Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "d68935903816d6b23d40b46d5561b269b80acae6",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "capitalisation",
      "headRefOid": "9b491304ed9cb14e0e7202c09e2efc99f56f52f8",
      "closedAt": "2024-01-30T06:59:11Z",
      "mergedAt": "2024-01-30T06:59:11Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "921eb6c9b9199f6346f7490a1b0d1bfdfe2c5a5a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5uQqY6",
          "commit": {
            "abbreviatedOid": "9b49130"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-29T22:04:35Z",
          "updatedAt": "2024-01-29T22:04:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOIGCt2M5l8hur",
      "title": "Increase clarity around wrapping",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/56",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #41",
      "createdAt": "2024-02-04T12:11:29Z",
      "updatedAt": "2024-02-04T18:17:48Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "921eb6c9b9199f6346f7490a1b0d1bfdfe2c5a5a",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "always-b64",
      "headRefOid": "1f883fbd4e6d163f713969be1ad7b374af48cf84",
      "closedAt": "2024-02-04T18:17:17Z",
      "mergedAt": "2024-02-04T18:17:17Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "9fd85947d810f9e8e11c68a9c0f56118dfe6072d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5u9E4H",
          "commit": {
            "abbreviatedOid": "1f883fb"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-04T17:17:56Z",
          "updatedAt": "2024-02-04T17:17:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5u9Lnq",
          "commit": {
            "abbreviatedOid": "1f883fb"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Small change but important. ",
          "createdAt": "2024-02-04T17:46:10Z",
          "updatedAt": "2024-02-04T17:46:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 57,
      "id": "PR_kwDOIGCt2M5l8j-8",
      "title": "Rebalance text distribution between Abstract and Intro",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/57",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #54\r\nFix #47",
      "createdAt": "2024-02-04T12:44:15Z",
      "updatedAt": "2024-02-04T18:27:02Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "9fd85947d810f9e8e11c68a9c0f56118dfe6072d",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "rebalance-intro",
      "headRefOid": "6ab7ec6a952eadecf03647a27a9b21f8aa284f9d",
      "closedAt": "2024-02-04T18:27:00Z",
      "mergedAt": "2024-02-04T18:27:00Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "98730fde434623416c05beebea1e9e60621fcb0a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5u9Lmm",
          "commit": {
            "abbreviatedOid": "ace3857"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This is a good re-arrangement of the text",
          "createdAt": "2024-02-04T17:45:36Z",
          "updatedAt": "2024-02-04T17:45:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5u9MwM",
          "commit": {
            "abbreviatedOid": "6ab7ec6"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-04T18:21:55Z",
          "updatedAt": "2024-02-04T18:21:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 60,
      "id": "PR_kwDOIGCt2M5mCc6O",
      "title": "CI: allow different top-level productions",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/60",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Allow different top-level productions in the CI machinery. This enables adding the collection type alongside the CMW. In the future this can be easily extended to allow other embeddings (e.g., CWT/EAT).",
      "createdAt": "2024-02-05T15:24:28Z",
      "updatedAt": "2024-02-06T09:51:14Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "98730fde434623416c05beebea1e9e60621fcb0a",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "coll-examples",
      "headRefOid": "1abf78e806b1d0ab8fcec04453dcd47a14f58fa4",
      "closedAt": "2024-02-06T09:51:14Z",
      "mergedAt": "2024-02-06T09:51:14Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "8e4262deaa174c610c98231a76301ad9ea6f865c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5vDf4E",
          "commit": {
            "abbreviatedOid": "8d39f65"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-05T16:05:09Z",
          "updatedAt": "2024-02-05T16:05:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5vEPl-",
          "commit": {
            "abbreviatedOid": "ab7deec"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-05T17:25:08Z",
          "updatedAt": "2024-02-05T17:25:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 61,
      "id": "PR_kwDOIGCt2M5mSNNj",
      "title": "fix ASN.1",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/61",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Remove spurious comma noted by Russ",
      "createdAt": "2024-02-07T16:42:43Z",
      "updatedAt": "2024-02-07T16:54:56Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "8e4262deaa174c610c98231a76301ad9ea6f865c",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "asn1-fix",
      "headRefOid": "2e87a7d875b2ee39c723c62dc850a3b195c2a042",
      "closedAt": "2024-02-07T16:54:51Z",
      "mergedAt": "2024-02-07T16:54:51Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "b5dc84abaf8ed00fabf72ce3fde067e6a21f47c2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5vXGWi",
          "commit": {
            "abbreviatedOid": "2e87a7d"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-07T16:54:06Z",
          "updatedAt": "2024-02-07T16:54:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 62,
      "id": "PR_kwDOIGCt2M5mUbG7",
      "title": "Update rfc9193.cddl",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/62",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "changed tchar use of escaped character to use hex value %x27",
      "createdAt": "2024-02-07T23:43:19Z",
      "updatedAt": "2024-02-08T01:06:03Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "b5dc84abaf8ed00fabf72ce3fde067e6a21f47c2",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "fix-tchar-rfc9193",
      "headRefOid": "2d9ee9b38488747fa8ed0c9a992100b427b54546",
      "closedAt": "2024-02-08T01:05:13Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Updated ruby doesn't have this issue.",
          "createdAt": "2024-02-08T01:06:02Z",
          "updatedAt": "2024-02-08T01:06:02Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 65,
      "id": "PR_kwDOIGCt2M5mggmF",
      "title": "add tunnelling and treat collections as CMWs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/65",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "* merge collection in the top-level CMW production\r\n* rework the X.509 extension (CMWCollection -> CMW)\r\n* remove special-casing collection in all IANA registrations\r\n* add bi-directional tunnelling between JSON and CBOR serialisations\r\n* rework CDDL assembly & test\r\n* add new examples\r\n\r\nFix #55",
      "createdAt": "2024-02-09T18:12:42Z",
      "updatedAt": "2024-02-16T07:27:25Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "b5dc84abaf8ed00fabf72ce3fde067e6a21f47c2",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "tunnels",
      "headRefOid": "9b2061b033093da481de1ae76dce9c8efc091805",
      "closedAt": "2024-02-16T07:27:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze",
          "createdAt": "2024-02-09T18:13:51Z",
          "updatedAt": "2024-02-09T18:13:51Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks good apart from nits. Thanks Thomas :)",
          "createdAt": "2024-02-09T21:05:17Z",
          "updatedAt": "2024-02-09T21:05:17Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "After reviewing the cddl naming I think the following would be more intuitive choices:\r\n```\r\ncmw = cmwj / cmwc\r\ncmwj = cmwj-record / cmwj-collection\r\ncmwc = cmwc-record / cmwc-collection / cmw-cbor-tag\r\ncmwj-collection = { + text => cmwj / cmw-c2j-tunnel }\r\ncbor-collection = { + (int / text) => cmwc / cmw-j2c-tunnel }\r\ncmw-c2j-tunnel = [ \"#cmw-c2j-tunnel\", base64-string ]\r\ncmw-j2c-tunnel = [ \"#cmw-j2c-tunnel\", bytes ]\r\ncmw-cbor-tag = #6.<0..18446744073709551615>(bytes)\r\ncmwj-record = [\r\n  type: media-type\r\n  value: base64-string\r\n  ? ind: uint .bits cm-type\r\n]\r\ncmwc-record = [\r\n  type: coap-content-format-type / media-type\r\n  value: bytes\r\n  ? ind: uint .bits cm-type\r\n]\r\n```",
          "createdAt": "2024-02-13T19:30:57Z",
          "updatedAt": "2024-02-13T19:30:57Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> After reviewing the cddl naming I think the following would be more intuitive choices:\r\n> \r\n> ```\r\n> cmw = cmwj / cmwc\r\n> [...]\r\n> ```\r\n\r\nThe choice of avoiding extra prefixes was on purpose.  With CDDL 2 imports I'd expect modules that depend on cmw to\r\n```\r\n;# import rfcxxxx as cmw\r\n```\r\nand then use it as\r\n```\r\nmy = {\r\n  evidence: cmw.json_array\r\n}\r\n```\r\nIf we add `cmw` to all the data items we end up with\r\n```\r\nmy = {\r\n  evidence: cmw.cmwj\r\n}\r\n```\r\nwhich stutters.\r\n\r\n",
          "createdAt": "2024-02-14T17:32:51Z",
          "updatedAt": "2024-02-14T17:32:51Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": ">With CDDL 2 imports\r\n\r\nWhich version of cddl tooling recognizes CDDL2 `;#` imports?\r\nAre we married to `-array` vs. `-record`? ",
          "createdAt": "2024-02-14T17:36:23Z",
          "updatedAt": "2024-02-14T18:00:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Applying the `;#` imports convention the full schema looks like the following(?):\r\n```\r\ncmw = cmwj / cmwc\r\ncmwj = json-record / json-collection\r\ncmwc = cbor-record / cbor-collection / cbor-tag\r\njson-collection = { + text => cmwj / c2j-tunnel }\r\ncbor-collection = { + (int / text) => cmwc / j2c-tunnel }\r\nc2j-tunnel = [ \"#cmw-c2j-tunnel\", base64-string ]\r\nj2c-tunnel = [ \"#cmw-j2c-tunnel\", bytes ]\r\ncbor-tag = #6.<0..18446744073709551615>(bytes)\r\njson-record = [\r\n  type: media-type\r\n  value: base64-string\r\n  ? ind: uint .bits cm-type\r\n]\r\ncbor-record = [\r\n  type: coap-content-format-type / media-type\r\n  value: bytes\r\n  ? ind: uint .bits cm-type\r\n]\r\n```",
          "createdAt": "2024-02-14T18:05:32Z",
          "updatedAt": "2024-02-14T18:05:32Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "BTW: should there be a tunnel for X.509 encoded CMWs?",
          "createdAt": "2024-02-14T20:59:46Z",
          "updatedAt": "2024-02-14T20:59:46Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I thought CMWs were only added as an extension to a certificate as added context to understand a signature, not as another way to aggregate CMWs, no?",
          "createdAt": "2024-02-14T21:36:53Z",
          "updatedAt": "2024-02-14T21:36:53Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I thought CMWs were only added as an extension to a certificate as added context to understand a signature, not as another way to aggregate CMWs, no?\r\n\r\nA cmw-collection, conceptually, is a representation of a \"slice\" of an attested system. A certificate path is used by DICE layering to report evidence for a slice that is analogous to at boot sequence (typically). A cmw-collection could be used in the same way to report a slice through a system. The end of the cert path might still be a TE that has evidence, but not represented in a cert, maybe its a CWT / JWT. The collection therefore, is the cert path plus the token / tokens. The CMW extension to X.509 allows the evidence (as a certificate payload) to be cbor/json while continuing to use X.509 signature format. The certificate is just a container, the same way a token is just a container. A cmw-collection can contain either signed or unsigned payloads (the media-type can be used to signal which form). It's possible to include an x.509 collection in a cwt/jwt using the x5bag claim. Oddly, this is added to the protected headers rather than the payload. But semantically, it is a cmw-collection, but not a first class citizen cmw-collection. It might be as simple as defining an xtoc-tunnel as x5bag. ",
          "createdAt": "2024-02-14T22:00:15Z",
          "updatedAt": "2024-02-14T22:00:15Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't see that specifically as a CMW but as a media-type for DICE evidence the form of an x.509 certificate path, no? The tunnel is just here because the CDDL permits both JSON and CBOR.",
          "createdAt": "2024-02-14T23:06:38Z",
          "updatedAt": "2024-02-14T23:06:38Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> I don't see that specifically as a CMW but as a media-type for DICE evidence the form of an x.509 certificate path, no? The tunnel is just here because the CDDL permits both JSON and CBOR.\r\n\r\nA cmw  could contain a PEM certificate i.e., media-type=\"application/pem-certificate-chain\". If the surrounding cmw-collection is in cbor format, it might make sense to convert the pem cert to cbor. The motivation may be similar to the motivation that wants to convert a jwt to cbor.\r\n\r\nThis is different from the ASN.1 that requires a CMW certificate extension to choose either JSON / CBOR formatting as the end result could be a PEM encoded certificate regardless. \r\n\r\nIt is reasonable for attesting environments to produce a certificate as a form of evidence (as in many DICE implementations) or as an endorsement  (as a root-of-trust key typically has a mfg issued certificate). \r\n\r\nThe current definition would allow cmw-collection to include a PEM certificate, but wouldn't be able to perform the binary/text, text/binary translations outlined by the tunnelling mechanism. If its relevant to convert JSON (text) to CBOR (binary) then it seems relevant to convert PEM (text) to CBOR (binary). I don't see the need to convert PEM (text) to JSON (text) since both are text based approaches. \r\n\r\nIf the cmw-collection processor can handle equally, text and binary representations, then I don't see the value of tunnels.\r\n",
          "createdAt": "2024-02-15T00:06:10Z",
          "updatedAt": "2024-02-15T00:06:10Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What de you mean to convert the pem to cbor? A base64-encoded string is still representable as bytes in the cbor schema. If there's a cbor encoding of certificate chains, wouldn't you just use that media type instead? I feel like I'm missing something.",
          "createdAt": "2024-02-15T01:03:59Z",
          "updatedAt": "2024-02-15T01:03:59Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > I don't see that specifically as a CMW but as a media-type for DICE evidence the form of an x.509 certificate path, no? The tunnel is just here because the CDDL permits both JSON and CBOR.\r\n> \r\n> A cmw could contain a PEM certificate i.e., media-type=\"application/pem-certificate-chain\". If the surrounding cmw-collection is in cbor format, it might make sense to convert the pem cert to cbor.\r\n\r\nI don't think so.  The PEM cert is just bytes stashed in the `cbor-array.value`.\r\nThe `cbor-array.type` will tell the receiver how to interpret it.  There is no reason for doing any format conversion.\r\n\r\n> The motivation may be similar to the motivation that wants to convert a jwt to cbor.\r\n\r\nSorry, I don't see the analogy.\r\n\r\n> It is reasonable for attesting environments to produce a certificate as a form of evidence (as in many DICE implementations) or as an endorsement (as a root-of-trust key typically has a mfg issued certificate).\r\n\r\nAbsolutely.  But, as Dionna [pointed out](https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/65#issuecomment-1944946698), in a CMW world, this is handled with media types.\r\n\r\n> If the cmw-collection processor can handle equally, text and binary representations, then I don't see the value of tunnels.\r\n\r\nThe use case for tunnels is when one needs to aggregate already constructed CMWs (rather than raw evidence), and those CMWs have a different serialisation than the one used/implemented by the aggregator.\r\n",
          "createdAt": "2024-02-15T09:18:00Z",
          "updatedAt": "2024-02-15T09:18:00Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > With CDDL 2 imports\r\n> \r\n> Which version of cddl tooling recognizes CDDL2 `;#` imports?\r\n\r\nThe latest `cddlc`.\r\n\r\n> Are we married to `-array` vs. `-record`?\r\n\r\nI am neutral.  It's only some search & replace over the CDDL and the prose which I am too lazy to tackle at the moment :-)\r\n\r\n",
          "createdAt": "2024-02-15T10:00:04Z",
          "updatedAt": "2024-02-15T10:00:04Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Are we married to `-array` vs. `-record`?\r\n> I am neutral. It's only some search & replace over the CDDL and the prose which I am too lazy to tackle at the moment :-)\r\n\r\nSee PR #67 ",
          "createdAt": "2024-02-15T17:37:31Z",
          "updatedAt": "2024-02-15T17:37:31Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > > Are we married to `-array` vs. `-record`?\r\n> > > I am neutral. It's only some search & replace over the CDDL and the prose which I am too lazy to tackle at the moment :-)\r\n> \r\n> See PR #67\r\n\r\nAwesome, thanks!  Can we merge this one?",
          "createdAt": "2024-02-15T17:42:30Z",
          "updatedAt": "2024-02-15T17:42:30Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> Awesome, thanks! Can we merge this one?\r\n\r\nNote: I pulled from tunnels branch which pulled in PR #65 changes. Maybe #65 isn't needed if #67 is merged?",
          "createdAt": "2024-02-15T17:44:52Z",
          "updatedAt": "2024-02-15T17:44:52Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > Awesome, thanks! Can we merge this one?\r\n> \r\n> Note: I pulled from tunnels branch which pulled in PR #65 changes. Maybe #65 isn't needed if #67 is merged?\r\n\r\nWe could close this and move everything there (including the \"Fixes\" annotations).  Or we could merge this and then you rebase #67 on main.\r\n\r\nAs you prefer.",
          "createdAt": "2024-02-15T18:27:01Z",
          "updatedAt": "2024-02-15T18:27:01Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Superseded by #67",
          "createdAt": "2024-02-16T07:27:25Z",
          "updatedAt": "2024-02-16T07:27:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5vpngT",
          "commit": {
            "abbreviatedOid": "f867dbb"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T20:54:14Z",
          "updatedAt": "2024-02-09T20:54:14Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Do you not say \"two to three\" when one is optional?",
              "createdAt": "2024-02-09T20:54:14Z",
              "updatedAt": "2024-02-09T20:54:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5vpoqU",
          "commit": {
            "abbreviatedOid": "f867dbb"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T20:58:29Z",
          "updatedAt": "2024-02-09T20:58:29Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "Although everything is encoded as numbers on computers, saying that a string starting with `#` is a magic number doesn't sound right to me. In these cases I use the term \"sentinel value\".",
              "createdAt": "2024-02-09T20:58:29Z",
              "updatedAt": "2024-02-09T20:58:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5vpo5c",
          "commit": {
            "abbreviatedOid": "f867dbb"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T20:59:16Z",
          "updatedAt": "2024-02-09T20:59:16Z",
          "comments": [
            {
              "originalPosition": 101,
              "body": "Inconsistent use of \"subsection\" and \"sub section\" within the same doc. I recommend the former.",
              "createdAt": "2024-02-09T20:59:16Z",
              "updatedAt": "2024-02-09T20:59:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5vpwL3",
          "commit": {
            "abbreviatedOid": "f867dbb"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM. Some of the word choice suggestions seem reasonable to incorporate. These could be refined later also.",
          "createdAt": "2024-02-09T21:21:29Z",
          "updatedAt": "2024-02-09T21:21:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 67,
      "id": "PR_kwDOIGCt2M5nAZcp",
      "title": "Cmw record tweak",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/67",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "NOTE: This is a PR pulled from the tunnels branch (https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/tree/tunnels) to pickup changes made by tunnels. The tunnels PR and this PR may need to be squashed together.\r\n\r\nChanged cmw-array.cddl and related cddl structures like cbor-array to cbor-record. Updated figure 5 to use CMW instead of CMW Array and added text related to cmw collection. Changed wording to reflect the cmw record convention except where it impacted CBOR encoding.\r\n\r\nFix #55 \r\nFix #38 ",
      "createdAt": "2024-02-15T17:30:11Z",
      "updatedAt": "2024-02-16T17:27:56Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "b5dc84abaf8ed00fabf72ce3fde067e6a21f47c2",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "cmw-record-tweak",
      "headRefOid": "7399617f65ab7e631eeb122bec379250dcfd94ec",
      "closedAt": "2024-02-16T07:27:06Z",
      "mergedAt": "2024-02-16T07:27:06Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "9b4944fb076fead5a98e30d1b56f77ec6781a8c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5wRE-3",
          "commit": {
            "abbreviatedOid": "7399617"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-15T18:24:46Z",
          "updatedAt": "2024-02-15T18:24:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOIGCt2M5nFiCO",
      "title": "Clarify x.509 extension wrapping",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/68",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "WGLC"
      ],
      "body": "Fix #64",
      "createdAt": "2024-02-16T13:08:09Z",
      "updatedAt": "2024-02-16T20:45:30Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "174c62f80509c82eb1852938b924671aadec8d47",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "asn1-clarifications",
      "headRefOid": "4bde879a262475671423c08dbedb298fdbf23daf",
      "closedAt": "2024-02-16T20:45:27Z",
      "mergedAt": "2024-02-16T20:45:27Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "ec6c9729d58d8ceb3612c03d72127ee5fbdbfbeb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5wYh7m",
          "commit": {
            "abbreviatedOid": "bf37879"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-16T15:56:19Z",
          "updatedAt": "2024-02-16T15:56:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 69,
      "id": "PR_kwDOIGCt2M5nF4YC",
      "title": "expand security considerations",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/69",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "WGLC"
      ],
      "body": "* deal with UCCS\r\n* describe risks associated with collections\r\n\r\nFix #63",
      "createdAt": "2024-02-16T14:05:19Z",
      "updatedAt": "2024-02-16T20:44:08Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "9b4944fb076fead5a98e30d1b56f77ec6781a8c3",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "seccons++",
      "headRefOid": "a76d5cb0e624897533d1f3ccd72ea1770c4312fc",
      "closedAt": "2024-02-16T20:44:06Z",
      "mergedAt": "2024-02-16T20:44:06Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "174c62f80509c82eb1852938b924671aadec8d47"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5wYmA_",
          "commit": {
            "abbreviatedOid": "a76d5cb"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-16T16:02:16Z",
          "updatedAt": "2024-02-16T16:02:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 70,
      "id": "PR_kwDOIGCt2M5nGKAH",
      "title": "align conceptual messages to the plural form",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/70",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "WGLC"
      ],
      "body": "Following https://www.rfc-editor.org/rfc/rfc9334.html#name-conceptual-messages\r\n\r\nFix #58",
      "createdAt": "2024-02-16T14:47:33Z",
      "updatedAt": "2024-02-16T20:43:51Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "9b4944fb076fead5a98e30d1b56f77ec6781a8c3",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "consistency",
      "headRefOid": "1b9bc51ecb29d61b30a4cd473853f1d15bcd11e3",
      "closedAt": "2024-02-16T20:43:48Z",
      "mergedAt": "2024-02-16T20:43:48Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "cea70b2d7bb6612bc1b173e9ec168536ef8fade0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5wYkFP",
          "commit": {
            "abbreviatedOid": "1b9bc51"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-16T15:59:43Z",
          "updatedAt": "2024-02-16T15:59:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 71,
      "id": "PR_kwDOIGCt2M5nGaWk",
      "title": "add CWT example",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/71",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "thomas-fossati"
      ],
      "labels": [
        "WGLC"
      ],
      "body": "Fix #59",
      "createdAt": "2024-02-16T15:29:54Z",
      "updatedAt": "2024-02-16T20:43:33Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "9b4944fb076fead5a98e30d1b56f77ec6781a8c3",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "eat-example",
      "headRefOid": "74c8ee23bbcc6188ca58c31139e6954bced5bbe2",
      "closedAt": "2024-02-16T20:43:29Z",
      "mergedAt": "2024-02-16T20:43:29Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "d1edc0b15d9bc96d8a35b261f3aedfc85cf72d77"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5wYjnn",
          "commit": {
            "abbreviatedOid": "74c8ee2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-02-16T15:58:44Z",
          "updatedAt": "2024-02-16T15:58:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 73,
      "id": "PR_kwDOIGCt2M5nH37w",
      "title": "Fixed orphaned cmw.cddl file",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/73",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Moved contents of cmw-start.cddl to cmw.cddl except for the single line `start = cmw` and updated frags.mk to include cmw.cddl\r\n\r\nThis PR fixes issue #72",
      "createdAt": "2024-02-16T19:16:12Z",
      "updatedAt": "2024-02-21T17:25:11Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "9b4944fb076fead5a98e30d1b56f77ec6781a8c3",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "fix-orphan-cmw-cddl",
      "headRefOid": "48321dd016825bebcd4a8845abecd14c1b60b058",
      "closedAt": "2024-02-21T17:25:11Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> this is already fixed in #71\r\n\r\nI missed that. #73 also moves extra statements in cmw-start.cddl into cmw.cddl. Maybe it's a style nit, but it really bugs me to have anything but the start=xxx in a start.cddl file.",
          "createdAt": "2024-02-16T19:35:05Z",
          "updatedAt": "2024-02-16T19:35:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in PR #71",
          "createdAt": "2024-02-21T17:25:11Z",
          "updatedAt": "2024-02-21T17:25:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5wZ_2o",
          "commit": {
            "abbreviatedOid": "48321dd"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "this is already fixed in #71",
          "createdAt": "2024-02-16T19:28:48Z",
          "updatedAt": "2024-02-16T19:28:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOIGCt2M5n8iHz",
      "title": "add a type indicator for collections",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/76",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "First stab at #75",
      "createdAt": "2024-02-26T17:37:45Z",
      "updatedAt": "2024-02-27T10:17:17Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "ec6c9729d58d8ceb3612c03d72127ee5fbdbfbeb",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "typed-coll",
      "headRefOid": "84a85742e3ae713cc95cfae5d1c22fc8a465d4a8",
      "closedAt": "2024-02-27T10:17:14Z",
      "mergedAt": "2024-02-27T10:17:14Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "decd2ef83e56d1d1ba6749373b2d3325d0da2100"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze",
          "createdAt": "2024-02-26T17:38:08Z",
          "updatedAt": "2024-02-26T17:38:08Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> LGTM - BTW where is `oid` defined?\r\n\r\nIt's defined in [cddl/common-types.cddl](\r\nhttps://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/76/files#diff-2297a77f80dcee02534ed54f2326d0c44b3ee904a2c423356f94c06f01af1855)\r\n\r\n> Does it inlclude a CBOR tag?\r\n\r\nNo, it's just a string with a regexp attached.\r\n\r\n> Maybe `~oid` is reasonable for the same reason `~uri` is used?\r\n\r\nIt's a \"naked\" string, there's no tag to drop.\r\n\r\n",
          "createdAt": "2024-02-27T08:46:27Z",
          "updatedAt": "2024-02-27T08:46:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5xZJbE",
          "commit": {
            "abbreviatedOid": "62d5fc2"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM - BTW where is `oid` defined? Does it inlclude a CBOR tag? Maybe `~oid` is reasonable for the same reason `~uri` is used?",
          "createdAt": "2024-02-27T02:48:14Z",
          "updatedAt": "2024-02-27T02:54:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 77,
      "id": "PR_kwDOIGCt2M5oKESU",
      "title": "refine CDDL",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/77",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "make cbor-tag a type socket and add a macro to synthesize new CBOR Tag CMWs",
      "createdAt": "2024-02-28T11:02:55Z",
      "updatedAt": "2024-02-28T16:32:41Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "decd2ef83e56d1d1ba6749373b2d3325d0da2100",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "tag-macro",
      "headRefOid": "b3d6277866628a26cdf7f13b346cbbf4d1bc01e3",
      "closedAt": "2024-02-28T16:32:41Z",
      "mergedAt": "2024-02-28T16:32:41Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "817fbfeeb50b95d42d4d59b31a480fe23bf8e42a"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze",
          "createdAt": "2024-02-28T14:12:38Z",
          "updatedAt": "2024-02-28T14:12:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5xnEMn",
          "commit": {
            "abbreviatedOid": "2c33351"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "See inline comment.",
          "createdAt": "2024-02-28T11:58:06Z",
          "updatedAt": "2024-02-28T11:58:54Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "In what cddl file should the `$cbor-tag` extension that is specific to my favorite evidence type be located? Should the spec the defines `my-evidence` be updated to include the definition or should it be added to some other cddl file?",
              "createdAt": "2024-02-28T11:58:06Z",
              "updatedAt": "2024-02-28T11:58:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5xnHjj",
          "commit": {
            "abbreviatedOid": "2c33351"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-28T12:04:53Z",
          "updatedAt": "2024-02-28T12:04:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5xniu8",
          "commit": {
            "abbreviatedOid": "2c33351"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T12:51:08Z",
          "updatedAt": "2024-02-28T12:51:08Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "> In what cddl file should the `$cbor-tag` extension that is specific to my favorite evidence type be located?\r\n\r\nI would add it in a separate file e.g., \"my-evidence-cmw-glue.cddl\"\r\n\r\n> Should the spec the defines `my-evidence` be updated to include the definition or should it be added to some other cddl file?\r\n\r\nIn most cases, I don't think that is practical.\r\n",
              "createdAt": "2024-02-28T12:51:08Z",
              "updatedAt": "2024-02-28T12:51:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 78,
      "id": "PR_kwDOIGCt2M5obuCe",
      "title": "Add a section detailing CMW collection label usage",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/78",
      "state": "MERGED",
      "author": "deeglaze",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is to address Issue #74. A CMW collection type exists to organize individual attesters' results and not fracture the space of representations of composite attester results. The topologies however are still subject to Verifier scrutiny. If the topology is not present in a measured boot chain signed by some other attester, and the only trusted witness of the complete assembly of a system is the CMW collection itself, we must be careful to ensure that the meaning of labels is properly documented (with a profile) and integrity-protected (with a signature).\r\n\r\nFix #74",
      "createdAt": "2024-03-01T17:17:28Z",
      "updatedAt": "2024-06-13T07:26:03Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "dd4a51112774fd9fd4a5d4d687770de651f5618c",
      "headRepository": "deeglaze/draft-ietf-rats-msg-wrap",
      "headRefName": "cmwlabels",
      "headRefOid": "12d253b16f6cf4e8d5c2dbc8e219b2b6015db2b4",
      "closedAt": "2024-06-13T07:26:02Z",
      "mergedAt": "2024-06-13T07:26:02Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "392a2ca63dde389966344a3354fb8ac5677d9917"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5zBoa0",
          "commit": {
            "abbreviatedOid": "799da83"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Suggested wording.",
          "createdAt": "2024-03-11T23:28:42Z",
          "updatedAt": "2024-03-11T23:29:42Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nWhen a label carries semantic content that is not bound to other forms of evidence contained in the CMW, the CMW SHOULD be signed by an attestation key, e.g., by including the CMW in a signed EAT {{-rats-eat}}.\r\n```\r\nJustification: a cmw can be a cmw-record, cmw-collection, or cbor-tag",
              "createdAt": "2024-03-11T23:28:42Z",
              "updatedAt": "2024-03-11T23:29:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M58pi6q",
          "commit": {
            "abbreviatedOid": "799da83"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-31T16:28:20Z",
          "updatedAt": "2024-05-31T16:29:22Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I am not sure a reader of this document necessarily understands what \"domain membership\" and \"domain dependency\" mean.",
              "createdAt": "2024-05-31T16:28:20Z",
              "updatedAt": "2024-05-31T16:29:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M58pqfg",
          "commit": {
            "abbreviatedOid": "799da83"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-31T16:46:28Z",
          "updatedAt": "2024-05-31T16:46:28Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "What if we delete everything after the comma starting with \"i.e.\"?",
              "createdAt": "2024-05-31T16:46:28Z",
              "updatedAt": "2024-05-31T16:46:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M58p8XK",
          "commit": {
            "abbreviatedOid": "799da83"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-31T17:26:01Z",
          "updatedAt": "2024-05-31T17:26:01Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "> What if we delete everything after the comma starting with \"i.e.\"?\r\n\r\nWFM",
              "createdAt": "2024-05-31T17:26:01Z",
              "updatedAt": "2024-05-31T17:26:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M58qxkN",
          "commit": {
            "abbreviatedOid": "799da83"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "see suggested wording",
          "createdAt": "2024-05-31T19:31:43Z",
          "updatedAt": "2024-05-31T19:33:00Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nA CMW Collection's tree structure is not required to be a spanning tree of the system's composite Attester topology.\r\n```",
              "createdAt": "2024-05-31T19:31:43Z",
              "updatedAt": "2024-05-31T19:33:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M58qzst",
          "commit": {
            "abbreviatedOid": "749f068"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-31T19:38:33Z",
          "updatedAt": "2024-05-31T19:38:33Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "> Justification: a cmw can be a cmw-record, cmw-collection, or cbor-tag\r\n\r\nHowever, the scope here is limited to collections (the section title is \"CMW Collections' role in composite Attester topology\"), so I think using \"collection\" is OK.",
              "createdAt": "2024-05-31T19:38:33Z",
              "updatedAt": "2024-05-31T19:38:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M588UkT",
          "commit": {
            "abbreviatedOid": "749f068"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-04T12:04:33Z",
          "updatedAt": "2024-06-04T12:04:33Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Isn't L281 redundant given L282 restates both the content and the requirement level (i.e., SHOULD)?  If so, I suggest we drop it.\r\n\r\n```suggestion\r\n```",
              "createdAt": "2024-06-04T12:04:33Z",
              "updatedAt": "2024-06-05T23:11:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M59w_Lq",
          "commit": {
            "abbreviatedOid": "c9f5732"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks @deeglaze !",
          "createdAt": "2024-06-11T10:15:11Z",
          "updatedAt": "2024-06-11T10:15:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5-DTcp",
          "commit": {
            "abbreviatedOid": "c9f5732"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-13T06:15:07Z",
          "updatedAt": "2024-06-13T06:15:13Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "JSON and CBOR are not opposites. Note see CESR.",
              "createdAt": "2024-06-13T06:15:07Z",
              "updatedAt": "2024-06-13T06:15:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M5-DTpe",
          "commit": {
            "abbreviatedOid": "c9f5732"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-13T06:15:42Z",
          "updatedAt": "2024-06-13T06:15:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDOIGCt2M5ob6Ov",
      "title": "CCC attestation SIG presentation",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/79",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In preparation for presenting CMW to the attestation SIG",
      "createdAt": "2024-03-01T17:48:47Z",
      "updatedAt": "2024-03-03T16:25:05Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "817fbfeeb50b95d42d4d59b31a480fe23bf8e42a",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "materials",
      "headRefOid": "17216a4d60c3c885334a72502eedb4eda2eaf442",
      "closedAt": "2024-03-03T16:25:04Z",
      "mergedAt": "2024-03-03T16:25:04Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "ace9ef08b0abe553fdc99f393a9937d3c74b81e1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5yBqJp",
          "commit": {
            "abbreviatedOid": "17216a4"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Looks great. We should give that presentation in the IETF as well",
          "createdAt": "2024-03-03T16:22:43Z",
          "updatedAt": "2024-03-03T16:22:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5yBqPM",
          "commit": {
            "abbreviatedOid": "17216a4"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-03T16:24:53Z",
          "updatedAt": "2024-03-03T16:24:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOIGCt2M5pNs0u",
      "title": "IETF 119 slides: small tweak",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/80",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-11T08:56:17Z",
      "updatedAt": "2024-03-13T16:14:44Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "ace9ef08b0abe553fdc99f393a9937d3c74b81e1",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "ietf-119-slides-tweaks",
      "headRefOid": "661ba75503e0368f6230af865e65c6c580d50dd4",
      "closedAt": "2024-03-13T16:14:40Z",
      "mergedAt": "2024-03-13T16:14:40Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "99370fcf8bb2bd018e48fc51a155ea88bcc101d9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5zBmHu",
          "commit": {
            "abbreviatedOid": "cee54f3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-03-11T23:24:58Z",
          "updatedAt": "2024-03-11T23:24:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M5zT7fw",
          "commit": {
            "abbreviatedOid": "661ba75"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-13T16:02:10Z",
          "updatedAt": "2024-03-13T16:02:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 82,
      "id": "PR_kwDOIGCt2M5paRFv",
      "title": "CCC presentation += X.509 wrapping",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/82",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "documentation"
      ],
      "body": "",
      "createdAt": "2024-03-12T17:05:39Z",
      "updatedAt": "2024-05-02T18:04:17Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "ace9ef08b0abe553fdc99f393a9937d3c74b81e1",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "ccc-sig-slides+x509",
      "headRefOid": "a0b0a7f9b2617cd680f29b18bf51b3bb199241aa",
      "closedAt": "2024-05-02T18:04:14Z",
      "mergedAt": "2024-05-02T18:04:14Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "a06b7f19bf7b60bb6e8632a50b75580ce437ba27"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M55XHiF",
          "commit": {
            "abbreviatedOid": "a0b0a7f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-02T15:37:54Z",
          "updatedAt": "2024-05-02T15:37:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 84,
      "id": "PR_kwDOIGCt2M5psPQ7",
      "title": "Remove text in IANA considerations for JWT",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/84",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "JWT registry doesn't have \"Claim Value Type(s)\" field.",
      "createdAt": "2024-03-15T00:09:24Z",
      "updatedAt": "2024-03-15T20:52:38Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "99370fcf8bb2bd018e48fc51a155ea88bcc101d9",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "nedmsmith-JWT-claim-value-types",
      "headRefOid": "06b9f09fd1bbd2b8a276800e2c3605a952ba4f16",
      "closedAt": "2024-03-15T20:52:35Z",
      "mergedAt": "2024-03-15T20:52:35Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "1bf06f2f83b810989b1f77ca99e31dfb162886ac"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Fix #83 ",
          "createdAt": "2024-03-15T04:25:08Z",
          "updatedAt": "2024-03-15T04:25:08Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5zhPRZ",
          "commit": {
            "abbreviatedOid": "06b9f09"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks!",
          "createdAt": "2024-03-15T04:23:24Z",
          "updatedAt": "2024-03-15T04:23:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDOIGCt2M5pzWFt",
      "title": "add recap slide and more related docs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/85",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "documentation"
      ],
      "body": "",
      "createdAt": "2024-03-15T22:00:22Z",
      "updatedAt": "2024-05-02T18:04:36Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "1bf06f2f83b810989b1f77ca99e31dfb162886ac",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "ietf-119-slides-tweaks-2",
      "headRefOid": "a4490ff59712dc9b7105b8b5c53c645f74efeebe",
      "closedAt": "2024-05-02T18:04:34Z",
      "mergedAt": "2024-05-02T18:04:34Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "f5784076c2419bd2a7ae642e84c2ce072a09d561"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M55XHtq",
          "commit": {
            "abbreviatedOid": "a4490ff"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-02T15:38:14Z",
          "updatedAt": "2024-05-02T15:38:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 88,
      "id": "PR_kwDOIGCt2M5wmOFv",
      "title": "IoTdir review",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/88",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "* Expand CoRIM and add ref\r\n* Expand UCCS\r\n* CMW X.509 extension: relax critical=false to SHOULD\r\n\r\nFix #87",
      "createdAt": "2024-05-26T19:06:14Z",
      "updatedAt": "2024-06-13T07:27:40Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "f5784076c2419bd2a7ae642e84c2ce072a09d561",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "iotdir-2/4",
      "headRefOid": "d7ca10c95f4f8235dd30d9b1dd15cd508709d354",
      "closedAt": "2024-06-11T10:11:39Z",
      "mergedAt": "2024-06-11T10:11:39Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "9abbf98f4c1daef27756742fb015eccf72600cf1"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz @hannestschofenig, please review",
          "createdAt": "2024-05-30T18:06:54Z",
          "updatedAt": "2024-05-30T18:06:54Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Since Ned has already approved and there was no pushback, I'll merge this. ",
          "createdAt": "2024-06-11T10:10:59Z",
          "updatedAt": "2024-06-11T10:10:59Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M58NOvV",
          "commit": {
            "abbreviatedOid": "42abc45"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-28T21:02:01Z",
          "updatedAt": "2024-05-28T21:02:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M58gA2y",
          "commit": {
            "abbreviatedOid": "d7ca10c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-30T16:11:59Z",
          "updatedAt": "2024-05-30T16:11:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 91,
      "id": "PR_kwDOIGCt2M5xIbay",
      "title": "apply IANA suggestion",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/91",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Explicitly mark the unallocated space in the `ind` registry as \"unassigned\".\r\n\r\nThis also effectively upper-bounds the number of different CM types to 32.",
      "createdAt": "2024-05-31T14:04:11Z",
      "updatedAt": "2024-05-31T16:32:14Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "f5784076c2419bd2a7ae642e84c2ce072a09d561",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "iana-suggestion",
      "headRefOid": "4e5afde9d80c33a6d1949cfde97ed698d59713d6",
      "closedAt": "2024-05-31T16:32:09Z",
      "mergedAt": "2024-05-31T16:32:09Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "7f8898fbe53c9c68f87d31e4356dce04f0c5a45d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M58ozlW",
          "commit": {
            "abbreviatedOid": "bcfcc66"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-31T14:58:36Z",
          "updatedAt": "2024-05-31T14:58:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M58pY8-",
          "commit": {
            "abbreviatedOid": "4e5afde"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-31T16:10:14Z",
          "updatedAt": "2024-05-31T16:10:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 92,
      "id": "PR_kwDOIGCt2M5xJU2o",
      "title": "create provisional cmw-indicators registry",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/92",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fix #90 ",
      "createdAt": "2024-05-31T16:20:54Z",
      "updatedAt": "2024-06-13T07:31:31Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "f5784076c2419bd2a7ae642e84c2ce072a09d561",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "provisional-registry",
      "headRefOid": "a235fb8bb6f44bc0e8d950a7aeff858b7be83106",
      "closedAt": "2024-06-11T10:13:16Z",
      "mergedAt": "2024-06-11T10:13:16Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "a0da98af143d8fd1ce03b2802ff3231e661e9c1a"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Since Ned has already approved and there was no pushback, I'll merge this.",
          "createdAt": "2024-06-11T10:12:42Z",
          "updatedAt": "2024-06-11T10:12:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M58pq5V",
          "commit": {
            "abbreviatedOid": "6512235"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-31T16:47:35Z",
          "updatedAt": "2024-05-31T16:47:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M58prKK",
          "commit": {
            "abbreviatedOid": "6512235"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-05-31T16:48:18Z",
          "updatedAt": "2024-05-31T16:48:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M585xsx",
          "commit": {
            "abbreviatedOid": "58151b9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-04T07:18:33Z",
          "updatedAt": "2024-06-04T07:18:33Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "**NOTE** Before merging the URL needs to be changed to match the final location (i.e., `main` rather than the `provisional-registry` branch)",
              "createdAt": "2024-06-04T07:18:33Z",
              "updatedAt": "2024-06-04T07:18:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M59MpS9",
          "commit": {
            "abbreviatedOid": "58151b9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-05T23:32:50Z",
          "updatedAt": "2024-06-05T23:32:51Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nBefore the creation of the registry by IANA, new codepoints can be added to the [provisional CMW Indicators registry](https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/blob/main/provisional/cmw-indicators-registry.md) by following the documented procedure.\r\n```",
              "createdAt": "2024-06-05T23:32:50Z",
              "updatedAt": "2024-06-05T23:32:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 95,
      "id": "PR_kwDOIGCt2M5yJmov",
      "title": "improve precision when defining the \"cmw\" claim",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/95",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #94",
      "createdAt": "2024-06-11T19:26:48Z",
      "updatedAt": "2024-06-13T07:31:33Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "a0da98af143d8fd1ce03b2802ff3231e661e9c1a",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "iana-fixes",
      "headRefOid": "4214d1a94e12f8a408a45f83466ae379cdfb4a87",
      "closedAt": "2024-06-12T09:37:25Z",
      "mergedAt": "2024-06-12T09:37:25Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "dd4a51112774fd9fd4a5d4d687770de651f5618c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M596GIa",
          "commit": {
            "abbreviatedOid": "4214d1a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-12T08:52:56Z",
          "updatedAt": "2024-06-12T08:52:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 97,
      "id": "PR_kwDOIGCt2M5yRISe",
      "title": "small tweaks",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/97",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-06-12T17:29:33Z",
      "updatedAt": "2024-06-13T07:27:18Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "dd4a51112774fd9fd4a5d4d687770de651f5618c",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "small-edits",
      "headRefOid": "b686ec1f25685eb097800d436bdaf93bd64316e2",
      "closedAt": "2024-06-13T07:27:13Z",
      "mergedAt": "2024-06-13T07:27:13Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "c73f10efea434e35b00427a5234be5cb2b2f7927"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5-DRYJ",
          "commit": {
            "abbreviatedOid": "b686ec1"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-13T06:09:52Z",
          "updatedAt": "2024-06-13T06:09:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 98,
      "id": "PR_kwDOIGCt2M5yUqUy",
      "title": "CCC SIG slides tweak",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/98",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is a tweak to the slides I presented at CCC SIG.",
      "createdAt": "2024-06-13T07:29:00Z",
      "updatedAt": "2024-06-28T21:37:06Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "c73f10efea434e35b00427a5234be5cb2b2f7927",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "ccc-sig-slides-tweak",
      "headRefOid": "9b971f9ff5d62b332648430e370d7291553f7053",
      "closedAt": "2024-06-28T21:37:02Z",
      "mergedAt": "2024-06-28T21:37:02Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "c4291a0446e4b80ced4386269ae94f215c68b7af"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6AFAW7",
          "commit": {
            "abbreviatedOid": "9b971f9"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-06-28T19:19:39Z",
          "updatedAt": "2024-06-28T19:19:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 99,
      "id": "PR_kwDOIGCt2M5yUyIR",
      "title": "rename id-pe-cmw-collection to id-pe-cmw",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/99",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #96 ",
      "createdAt": "2024-06-13T07:45:47Z",
      "updatedAt": "2024-06-13T14:25:55Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "c73f10efea434e35b00427a5234be5cb2b2f7927",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "id-pe-cmw",
      "headRefOid": "b576097183da32332428f5de53164f1c5fd5c43f",
      "closedAt": "2024-06-13T14:25:51Z",
      "mergedAt": "2024-06-13T14:25:51Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "09eeb624b70e08f551eab9f57494082bfddf0445"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5-HwO4",
          "commit": {
            "abbreviatedOid": "b576097"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-13T14:23:59Z",
          "updatedAt": "2024-06-13T14:23:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 102,
      "id": "PR_kwDOIGCt2M5zl0Bm",
      "title": "add CoAP C-F registrations",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/102",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #100",
      "createdAt": "2024-06-26T07:04:11Z",
      "updatedAt": "2024-06-26T21:06:55Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "09eeb624b70e08f551eab9f57494082bfddf0445",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "cf-reg",
      "headRefOid": "f5482705e177e8a4e466df1c0f00de39bde8dc6d",
      "closedAt": "2024-06-26T21:06:54Z",
      "mergedAt": "2024-06-26T21:06:54Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "357604270d5d45b1c6efe399c370afc4b2af7ec3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5_uRKH",
          "commit": {
            "abbreviatedOid": "f548270"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-06-26T20:04:14Z",
          "updatedAt": "2024-06-26T20:04:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 103,
      "id": "PR_kwDOIGCt2M5zsZ58",
      "title": "Create README.md",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/103",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add README.md that creates an editors copy and other things.\r\n\r\nMore tweaking of ghpages may be needed as well.",
      "createdAt": "2024-06-26T23:36:39Z",
      "updatedAt": "2024-06-27T07:20:27Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "357604270d5d45b1c6efe399c370afc4b2af7ec3",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "add-README.md",
      "headRefOid": "abecc24f7dd12e3c22f615bc3f9387852fc4a303",
      "closedAt": "2024-06-27T07:20:18Z",
      "mergedAt": "2024-06-27T07:20:18Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "273abbe0c382ad90bd35489fe4afa88ce2c6ef3c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M5_0fCS",
          "commit": {
            "abbreviatedOid": "abecc24"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "thanks!",
          "createdAt": "2024-06-27T07:20:00Z",
          "updatedAt": "2024-06-27T07:20:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 105,
      "id": "PR_kwDOIGCt2M5z3zeA",
      "title": "add explicit quotes around cmw when used as a claim name",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/105",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "apparently, \\`cmw\\` is no longer enough for kramdown-rfc to add quotes when rendering to txt",
      "createdAt": "2024-06-28T09:57:05Z",
      "updatedAt": "2024-06-28T16:49:07Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "273abbe0c382ad90bd35489fe4afa88ce2c6ef3c",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "quotes",
      "headRefOid": "17344bfda23263ab44560bbb253396802082dadd",
      "closedAt": "2024-06-28T16:49:07Z",
      "mergedAt": "2024-06-28T16:49:07Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "4c1ca4291ab01a490bbc829f061cf6a73c6ab2ef"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6ADyUz",
          "commit": {
            "abbreviatedOid": "17344bf"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-06-28T16:45:55Z",
          "updatedAt": "2024-06-28T16:45:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "PR_kwDOIGCt2M5z65J5",
      "title": "Fix label in collections",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/106",
      "state": "MERGED",
      "author": "nedmsmith",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "nedmsmith"
      ],
      "labels": [],
      "body": "updated cmw-collection.cddl to include a label.\r\nmodified prose in section 3.3.1 to better capture the need for integrity protection of label information.\r\n\r\nAddresses issue #104 ",
      "createdAt": "2024-06-28T18:25:04Z",
      "updatedAt": "2024-07-01T16:52:14Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "4c1ca4291ab01a490bbc829f061cf6a73c6ab2ef",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "fix-label-in-collections",
      "headRefOid": "a835a33d9590769178e2a04e7ea85db61227df43",
      "closedAt": "2024-07-01T16:52:09Z",
      "mergedAt": "2024-07-01T16:52:09Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "a26e8386579e754ebd54e5a9a0bdcbca2dc8df52"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@carl-wallace could you please check that the proposed text addresses your concern?",
          "createdAt": "2024-06-28T21:36:21Z",
          "updatedAt": "2024-06-28T21:36:21Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "@carl-wallace if you have any issues with the proposed text, or have clarifying suggestions, please shout.  Otherwise, we are going to merge it shortly.",
          "createdAt": "2024-07-01T16:09:06Z",
          "updatedAt": "2024-07-01T16:09:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6AF6-Z",
          "commit": {
            "abbreviatedOid": "4de1be7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "LGTM, I've inlined a small editorial tweak.",
          "createdAt": "2024-06-28T21:41:13Z",
          "updatedAt": "2024-06-28T21:42:43Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "* use \"labels\" plural\r\n* split sentence into two\r\n\r\n```suggestion\r\nIf the labels carry semantic content for a Verifier (e.g. to improve Verifier performance or aid human comprehension), the collection SHOULD be integrity protected. For example, by including it in a signed token such as a CWT or JWT.\r\n```",
              "createdAt": "2024-06-28T21:41:13Z",
              "updatedAt": "2024-06-28T21:42:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6AQJ2D",
          "commit": {
            "abbreviatedOid": "b2408a4"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-01T15:45:49Z",
          "updatedAt": "2024-07-01T15:45:49Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "The \"for example\" change is a sentence fragment.\r\n```suggestion\r\nIf the labels carry semantic content for a Verifier (e.g. to improve Verifier performance or aid human comprehension), the collection SHOULD be integrity protected.\r\nFor example, the collection can be integrity protected by including it in a signed token such as a CWT or JWT.\r\n```",
              "createdAt": "2024-07-01T15:45:49Z",
              "updatedAt": "2024-07-01T15:45:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6AQUqF",
          "commit": {
            "abbreviatedOid": "a835a33"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-01T16:09:24Z",
          "updatedAt": "2024-07-01T16:09:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6AQfNN",
          "commit": {
            "abbreviatedOid": "a835a33"
          },
          "author": "carl-wallace",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-01T16:35:04Z",
          "updatedAt": "2024-07-01T16:35:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 107,
      "id": "PR_kwDOIGCt2M50PK3M",
      "title": "add presentation for IETF 120",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/107",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-02T19:09:37Z",
      "updatedAt": "2024-08-29T14:45:54Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "a26e8386579e754ebd54e5a9a0bdcbca2dc8df52",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "ietf-120",
      "headRefOid": "d7400d19c2d5ff5eb34cf4a03502376b702e230f",
      "closedAt": "2024-08-29T14:45:50Z",
      "mergedAt": "2024-08-29T14:45:50Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "a2e0d3b8fd3a9a85c70abe89eae3a15e8f2d75bc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6HPrIe",
          "commit": {
            "abbreviatedOid": "d7400d1"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-29T14:45:10Z",
          "updatedAt": "2024-08-29T14:45:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 109,
      "id": "PR_kwDOIGCt2M52UhsN",
      "title": "Use `base64url-string` rather than `base64-string`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/109",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #108 ",
      "createdAt": "2024-07-24T10:26:47Z",
      "updatedAt": "2024-07-24T17:30:20Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "a26e8386579e754ebd54e5a9a0bdcbca2dc8df52",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "mike",
      "headRefOid": "9e2d1fd9eb147415a49f1c51d466bf3f6c79f2e4",
      "closedAt": "2024-07-24T17:30:19Z",
      "mergedAt": "2024-07-24T17:30:19Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "2ef4c996e65efb5da7fc19bfca5876f917949948"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6C9ef1",
          "commit": {
            "abbreviatedOid": "9e2d1fd"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-07-24T15:56:08Z",
          "updatedAt": "2024-07-24T15:56:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 112,
      "id": "PR_kwDOIGCt2M552G15",
      "title": "Say we also register the CMW media type and Content-Format",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/112",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #111",
      "createdAt": "2024-08-29T14:41:01Z",
      "updatedAt": "2024-08-29T14:46:18Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "2ef4c996e65efb5da7fc19bfca5876f917949948",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "mt-ionut",
      "headRefOid": "1dc6dbc075129a000d4e6e3356c8337c155215b9",
      "closedAt": "2024-08-29T14:46:18Z",
      "mergedAt": "2024-08-29T14:46:18Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "a60113b1d1e964bae6a851856bfc46ac17ebf643"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6HPrZ0",
          "commit": {
            "abbreviatedOid": "1dc6dbc"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-29T14:45:28Z",
          "updatedAt": "2024-08-29T14:45:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 113,
      "id": "PR_kwDOIGCt2M552d3m",
      "title": "Laurence augmented security considerations on collections",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/113",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #110",
      "createdAt": "2024-08-29T15:15:04Z",
      "updatedAt": "2024-09-02T15:03:42Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "a60113b1d1e964bae6a851856bfc46ac17ebf643",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "laurence-sc",
      "headRefOid": "5ff5515031141756a7af01a54b13dff096604ff7",
      "closedAt": "2024-09-02T15:03:42Z",
      "mergedAt": "2024-09-02T15:03:42Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "cf9af0e57036fec5174d36ad0084760badaef075"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> assuming the tiny addition to 3.3 [...]\r\n\r\nSee bade001aa171730adbe5aa82a912d60337f9a70b",
          "createdAt": "2024-08-30T09:14:18Z",
          "updatedAt": "2024-08-30T09:14:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6HQJxj",
          "commit": {
            "abbreviatedOid": "a9c9d19"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T15:17:06Z",
          "updatedAt": "2024-08-29T15:17:07Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nIn particular, when a CMW is used to carry multiple Evidence messages for a composite device or layered attestation, there SHOULD be strong binding between the Evidence messages within the collection.\r\n```",
              "createdAt": "2024-08-29T15:17:06Z",
              "updatedAt": "2024-08-29T15:17:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HQKNG",
          "commit": {
            "abbreviatedOid": "a9c9d19"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T15:17:27Z",
          "updatedAt": "2024-08-29T15:17:27Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe binding of Evidence messages SHOULD be realized via Claims in Evidence and MAY be realized by elevating a CMW to an Evidence Claim.\r\n```\r\n",
              "createdAt": "2024-08-29T15:17:27Z",
              "updatedAt": "2024-08-29T15:22:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HQOA-",
          "commit": {
            "abbreviatedOid": "a9c9d19"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T15:20:48Z",
          "updatedAt": "2024-08-29T15:20:48Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Even though:\r\n\r\n* It's not something that can be enforced at a protocol level - it's at the layer above CMW...\r\n* Some people are allergic to RFC2119-words in security considerations,\r\n\r\nI am happy to capitalise.",
              "createdAt": "2024-08-29T15:20:48Z",
              "updatedAt": "2024-08-30T03:23:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HQORL",
          "commit": {
            "abbreviatedOid": "a9c9d19"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T15:21:00Z",
          "updatedAt": "2024-08-29T15:21:00Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "`DITTO` :-D for s/should/SHOULD/\r\n\r\nI think the rest of the suggestion narrows the scope of the original.  Binding could be via special-purpose claims (intra-collection), or via signatures.  I think it's better to stay general here since the rest of the paragraph takes care of delving into the details.",
              "createdAt": "2024-08-29T15:21:00Z",
              "updatedAt": "2024-08-29T15:39:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HQepa",
          "commit": {
            "abbreviatedOid": "a9c9d19"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T15:37:12Z",
          "updatedAt": "2024-08-29T15:37:13Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Alternatively, we simply not use named words here? Actually, I do not think that the secconsec is a good place for CAPS either.",
              "createdAt": "2024-08-29T15:37:12Z",
              "updatedAt": "2024-08-29T15:37:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HQfRx",
          "commit": {
            "abbreviatedOid": "a9c9d19"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-29T15:37:51Z",
          "updatedAt": "2024-08-29T15:37:51Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Ditto `DITTO` :o)",
              "createdAt": "2024-08-29T15:37:51Z",
              "updatedAt": "2024-08-29T15:37:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HZf_h",
          "commit": {
            "abbreviatedOid": "a9c9d19"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-30T08:40:30Z",
          "updatedAt": "2024-08-30T08:40:30Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nIt is the responsibility of the CMW collection producer to ensure that the contents of the collection are integrity-protected.\r\nIn particular, when a CMW is used to carry multiple Evidence messages for a composite device or layered attestation, there should be strong binding between the Evidence messages within the collection.\r\n```",
              "createdAt": "2024-08-30T08:40:30Z",
              "updatedAt": "2024-08-30T08:40:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HZi-T",
          "commit": {
            "abbreviatedOid": "6512ecd"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-30T08:45:20Z",
          "updatedAt": "2024-08-30T08:45:20Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "As discussed, with the new L590 these \"should\"s are clearly non-normative.",
              "createdAt": "2024-08-30T08:45:20Z",
              "updatedAt": "2024-08-30T08:45:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HZjJD",
          "commit": {
            "abbreviatedOid": "6512ecd"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-30T08:45:36Z",
          "updatedAt": "2024-08-30T08:45:36Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "ditto ditto ditto",
              "createdAt": "2024-08-30T08:45:36Z",
              "updatedAt": "2024-08-30T08:45:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HZjxv",
          "commit": {
            "abbreviatedOid": "6512ecd"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "assuming the tiny addition to 3.3, this is now well-done",
          "createdAt": "2024-08-30T08:46:34Z",
          "updatedAt": "2024-08-30T08:46:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6Hn5PQ",
          "commit": {
            "abbreviatedOid": "bade001"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I have made various suggestions to improve readability.",
          "createdAt": "2024-09-02T11:27:46Z",
          "updatedAt": "2024-09-02T13:11:52Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIt is the responsibility of the Attester to ensure that the CMW contents have the necessary security protection.\r\n```",
              "createdAt": "2024-09-02T11:27:46Z",
              "updatedAt": "2024-09-02T13:11:52Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nIt is the responsibility of the Attester who creates the CMW collection to ensure that the contents of the collection are integrity-protected.\r\n```",
              "createdAt": "2024-09-02T13:04:56Z",
              "updatedAt": "2024-09-02T13:27:16Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nIn particular, when a CMW is used to carry multiple Evidence messages for a composite device or layered attestation, there should be strong binding between the Evidence messages within the collection.\r\n``",
              "createdAt": "2024-09-02T13:09:19Z",
              "updatedAt": "2024-09-02T13:55:51Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nFor example, key material used to sign/bind an entire CMW collection should be an attestation key, handled as described in {{Section 12.1 of -rats-arch}}.\r\n```",
              "createdAt": "2024-09-02T13:11:07Z",
              "updatedAt": "2024-09-02T14:01:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6Ho9a0",
          "commit": {
            "abbreviatedOid": "bade001"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T13:24:35Z",
          "updatedAt": "2024-09-02T13:24:35Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "This one seems to break the natural flow between L595 (\"In particular, ...\") and L596 (\"This is to prevent ...\").",
              "createdAt": "2024-09-02T13:24:35Z",
              "updatedAt": "2024-09-02T13:24:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6Ho_y0",
          "commit": {
            "abbreviatedOid": "bade001"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T13:28:41Z",
          "updatedAt": "2024-09-02T13:28:41Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I think the original is more accurate: S12.1 of the architecture discusses the requirements for attestation key material handling. Besides, the switch from \"should\" to \"could\" weakens the message.",
              "createdAt": "2024-09-02T13:28:41Z",
              "updatedAt": "2024-09-02T13:39:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HpAGq",
          "commit": {
            "abbreviatedOid": "388388e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T13:29:10Z",
          "updatedAt": "2024-09-02T13:29:10Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nIt is the responsibility of the Attester who creates the CMW collection to ensure that the contents of the collection are integrity-protected.\r\n```",
              "createdAt": "2024-09-02T13:29:10Z",
              "updatedAt": "2024-09-02T13:29:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HpNM-",
          "commit": {
            "abbreviatedOid": "ef9635c"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T13:55:45Z",
          "updatedAt": "2024-09-02T13:55:46Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nIt is the responsibility of the Attester who creates the CMW collection to ensure that the contents of the collection are integrity-protected.\r\nThe designer of the attestation technology is typically in charge of ensuring that the security properties are met, not the user of the conceptual message wrapper.\r\n```",
              "createdAt": "2024-09-02T13:55:45Z",
              "updatedAt": "2024-09-02T13:58:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HpNV0",
          "commit": {
            "abbreviatedOid": "ef9635c"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T13:56:01Z",
          "updatedAt": "2024-09-02T13:56:01Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Fixed. Moved the sentence",
              "createdAt": "2024-09-02T13:56:01Z",
              "updatedAt": "2024-09-02T13:56:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HpNa0",
          "commit": {
            "abbreviatedOid": "ef9635c"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T13:56:11Z",
          "updatedAt": "2024-09-02T13:56:11Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nThis binding is needed to prevent attacks where Evidence from a subverted part of the device is replaced by Evidence from a separate non-subverted device.\r\n```",
              "createdAt": "2024-09-02T13:56:11Z",
              "updatedAt": "2024-09-02T14:00:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6HpNrg",
          "commit": {
            "abbreviatedOid": "ef9635c"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-02T13:56:43Z",
          "updatedAt": "2024-09-02T13:56:43Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Changed the could back to a should",
              "createdAt": "2024-09-02T13:56:43Z",
              "updatedAt": "2024-09-02T13:56:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 114,
      "id": "PR_kwDOIGCt2M56IOO-",
      "title": "s/Sniff/Demux/",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/114",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-02T08:19:42Z",
      "updatedAt": "2024-09-02T13:30:18Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "a60113b1d1e964bae6a851856bfc46ac17ebf643",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "desniff",
      "headRefOid": "13fc6389b84684cb151fd6b58a103935dfed081a",
      "closedAt": "2024-09-02T13:30:18Z",
      "mergedAt": "2024-09-02T13:30:18Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "f805e248ec7e84102034a006839032757c99d3d7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6Ho5ti",
          "commit": {
            "abbreviatedOid": "13fc638"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "WFM",
          "createdAt": "2024-09-02T13:17:39Z",
          "updatedAt": "2024-09-02T13:17:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 117,
      "id": "PR_kwDOIGCt2M58Maws",
      "title": "More on collections security",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/117",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Due to the reflow of S3.3 I created a separate section to hold CMW/JWT-related considerations.   That, in turn, necessitated moving the X.509 section to a closer place.\r\n\r\nFix #115",
      "createdAt": "2024-09-20T17:24:35Z",
      "updatedAt": "2024-10-20T10:32:57Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "cf9af0e57036fec5174d36ad0084760badaef075",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "more-about-collections",
      "headRefOid": "c4e73095a58826076c12598699afc3afb773bc54",
      "closedAt": "2024-10-20T10:32:53Z",
      "mergedAt": "2024-10-20T10:32:53Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "d44568dae353c0b8c0220de1578b6d6fe4ca5e97"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6KNuAH",
          "commit": {
            "abbreviatedOid": "a5c08c1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T17:29:35Z",
          "updatedAt": "2024-09-20T17:29:35Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "```suggestion\r\nTheir definitions are provided in {{iana-jwt}} and {{iana-cwt}} respectively.\r\n```",
              "createdAt": "2024-09-20T17:29:35Z",
              "updatedAt": "2024-09-20T17:29:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6KNulD",
          "commit": {
            "abbreviatedOid": "e60615d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T17:30:47Z",
          "updatedAt": "2024-09-20T17:30:47Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nA CMW collection carried in a `\"cmw\"` JWT claim MUST be a `json-collection`.\r\nA CMW collection carried in a `\"cmw\"` CWT claim MUST be a `cbor-collection`.\r\n\r\nA CMW record carried in a `\"cmw\"` JWT claim MUST be a `json-record`.\r\nA CMW record carried in a `\"cmw\"` CWT claim MUST be a `cbor-record`.\r\n```",
              "createdAt": "2024-09-20T17:30:47Z",
              "updatedAt": "2024-09-20T17:30:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6KNzYr",
          "commit": {
            "abbreviatedOid": "22ff537"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-20T17:36:59Z",
          "updatedAt": "2024-09-20T17:37:00Z",
          "comments": [
            {
              "originalPosition": 291,
              "body": "```suggestion\r\nInstead, it should be attestation-oriented key material from the device or the attester manufacturer.\r\n```",
              "createdAt": "2024-09-20T17:36:59Z",
              "updatedAt": "2024-09-20T17:37:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6KQ0Il",
          "commit": {
            "abbreviatedOid": "1b02f22"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-21T06:15:27Z",
          "updatedAt": "2024-09-21T06:15:27Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion\r\n2. Their top-down structure does not align with the bottom-up approach layered attesters use to build the chain of trust, making them unsuitable for modelling layered attestation.\r\n```",
              "createdAt": "2024-09-21T06:15:27Z",
              "updatedAt": "2024-09-21T06:19:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6KXRx0",
          "commit": {
            "abbreviatedOid": "7dfdadf"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-23T07:45:11Z",
          "updatedAt": "2024-09-23T07:45:12Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "```suggestion\r\n# Transporting CMW in COSE and JOSE Web Tokens\r\n```",
              "createdAt": "2024-09-23T07:45:12Z",
              "updatedAt": "2024-09-23T07:45:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6KcHb3",
          "commit": {
            "abbreviatedOid": "03b8317"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-09-23T15:22:05Z",
          "updatedAt": "2024-09-23T15:22:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6K4MRn",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "laurencelundblade",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "I haven't actually finished the review, but wanted to get this comment to you now because I'm kind of buried in some other work right now and won't get to the full review right away.",
          "createdAt": "2024-09-26T03:20:21Z",
          "updatedAt": "2024-09-26T03:21:15Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "You can make an EAT submod a format other than EAT by defining a type for it. In CBOR-format EATs, that's just defining a new CBOR tag to identify it. Might be a bit weird to define a CBOR tag to identify an X.509 format attestation, but it is possible.\r\n\r\nSo I don't think 1. is true.\r\n\r\nA more correct statement would be that EAT can't represent layered attestation when the topmost/outermost/lead attestation is not EAT format.\r\n\r\nEAT seems fine for most layered attestation (see recent email to rats). Seems to me that CCA is doing rather unusual layered attestation. CCA attestation evidence spans devices, right? That's unusual for attestation IMO and beyond what I imagined anyone doing in EAT (and RATS).\r\n\r\nEAT should not be presented as being unsuitable or bad at layered attestation.\r\n\r\nMaybe say something like, while EAT submods are fine for most layered attestation, CMW is more flexible and can represent more complex or unusual layered attestation like a bottom-up chain of trust.",
              "createdAt": "2024-09-26T03:20:21Z",
              "updatedAt": "2024-09-26T03:21:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6K6jVa",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-26T09:08:36Z",
          "updatedAt": "2024-09-26T09:08:36Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "> You can make an EAT submod a format other than EAT by defining a type for it. In CBOR-format EATs, that's just defining a new CBOR tag to identify it. Might be a bit weird to define a CBOR tag to identify an X.509 format attestation, but it is possible.\r\n>\r\n> So I don't think 1. is true.\r\n\r\nThis is not what I understand from reading  [4.2.18. submods (Submodules)](https://ietf-rats-wg.github.io/eat/draft-ietf-rats-eat.html#section-4.2.18).  There is no mention of the possibility of incorporating non-EAT tokens/claims-sets.  \r\n\r\nCan you point me to the relevant text?\r\n\r\n> A more correct statement would be that EAT can't represent layered attestation when the topmost/outermost/lead attestation is not EAT format.\r\n> \r\n> EAT seems fine for most layered attestation (see recent email to rats). Seems to me that CCA is doing rather unusual layered attestation. CCA attestation evidence spans devices, right? That's unusual for attestation IMO and beyond what I imagined anyone doing in EAT (and RATS).\r\n> \r\n> EAT should not be presented as being unsuitable or bad at layered attestation.\r\n> \r\n> Maybe say something like, while EAT submods are fine for most layered attestation, CMW is more flexible and can represent more complex or unusual layered attestation like a bottom-up chain of trust.\r\n\r\nWe can certainly curate the text to avoid sounding adversarial vs EAT (that's certainly not my intent, on the contrary, I think EAT and CMW are an excellent pair.)\r\n\r\nHowever, I stand by my assessment that submods are not great at layered attestation because they go counter the \"natural\" construction of the chain of trust of the device.\r\n\r\nTypically (e.g., DICE, Arm CCA), the layer below signs the layer above, not the opposite.  As I also said on the list, it could be my bias, but this doesn't look either complex or unusual to me.",
              "createdAt": "2024-09-26T09:08:36Z",
              "updatedAt": "2024-09-26T09:53:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6K7NLA",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "lgtm",
          "createdAt": "2024-09-26T10:20:46Z",
          "updatedAt": "2024-09-26T10:20:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6LGgg5",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "carl-wallace",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T13:23:10Z",
          "updatedAt": "2024-09-27T13:23:10Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Re: incorporating non-EAT tokens/claims-sets, I think Laurence is referring to the fact that $EAT-CBOR-Tagged-Token is extensible. The potential for adding new types is noted in section 4.2.18 as follows:\r\n\r\n```\r\nThe addition of further types is accomplished by augmenting the $EAT-CBOR-Tagged-Token socket or the $JSON-Selector socket.\r\n```\r\n\r\nYou are correct the text does not explicitly call out that ASN.1 types, or other, could be accommodated this way but the means to support such is there. ",
              "createdAt": "2024-09-27T13:23:10Z",
              "updatedAt": "2024-09-27T13:23:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LGxyr",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T13:49:49Z",
          "updatedAt": "2024-09-27T13:49:49Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Thanks for the pointer!\r\n\r\nWould it be fair to say something like:\r\n\r\n> _\"* {{EAT}} allows carrying non-EAT-formatted types by augmenting the `$EAT-CBOR-Tagged-Token` socket or the `$JSON-Selector` socket. However, these need to be specified in subsequent standard documents updating the EAT specification.\"_\r\n\r\n?",
              "createdAt": "2024-09-27T13:49:49Z",
              "updatedAt": "2024-09-27T13:51:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LG0xd",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "carl-wallace",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T13:54:52Z",
          "updatedAt": "2024-09-27T13:54:52Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "I think so.",
              "createdAt": "2024-09-27T13:54:52Z",
              "updatedAt": "2024-09-27T13:54:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LG3HO",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T13:58:53Z",
          "updatedAt": "2024-09-27T13:58:54Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n1. {{EAT}} allows carrying non-EAT-formatted types by augmenting the $EAT-CBOR-Tagged-Token socket or the $JSON-Selector socket. However, these need to be specified in subsequent standard documents updating the EAT specification,\r\n```",
              "createdAt": "2024-09-27T13:58:54Z",
              "updatedAt": "2024-09-27T13:58:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LHZsI",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T14:59:38Z",
          "updatedAt": "2024-09-27T14:59:38Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Integrated in [39e1f53](https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/117/commits/39e1f533af004805e30967fba3284101ac4c9a7f)",
              "createdAt": "2024-09-27T14:59:38Z",
              "updatedAt": "2024-09-27T14:59:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LTxvs",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T11:28:49Z",
          "updatedAt": "2024-09-30T11:28:49Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Taking this a step further, we may as well drop this and add a new subsection _\"Transporting CMW in EAT submods\"_ that defines the sockets extensions:\r\n\r\n```\r\n$EAT-CBOR-Tagged-Token /= #6.TBD(cbor-CMW)\r\n```\r\nand\r\n```\r\n$JSON-Selector /= [type: \"CMW\", nested-token: json-CMW]\r\n```\r\n\r\nWhere:\r\n\r\n* `cbor-CMW` and `json-CMW` are defined in [Appendix A of CMW](https://www.ietf.org/archive/id/draft-ietf-rats-msg-wrap-08.html#appendix-A)\r\n* `6.TBD` is the CBOR tag [requested for CMW](https://www.ietf.org/archive/id/draft-ietf-rats-msg-wrap-08.html#section-8.3)\r\n\r\n\r\n@carl-wallace @laurencelundblade @gmandyam would that work?",
              "createdAt": "2024-09-30T11:28:49Z",
              "updatedAt": "2024-09-30T11:29:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LU9Vl",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T13:19:40Z",
          "updatedAt": "2024-09-30T13:19:40Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "A preview of that is in the `cmw-in-submods` branch: https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/118/commits/701013c19a80b30d9f58338736015ed8d12e8d56",
              "createdAt": "2024-09-30T13:19:40Z",
              "updatedAt": "2024-09-30T13:19:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LeEYv",
          "commit": {
            "abbreviatedOid": "a2cb293"
          },
          "author": "carl-wallace",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-01T11:22:38Z",
          "updatedAt": "2024-10-01T11:22:38Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "Adding use of submod extensibility here seems like a good idea to me.",
              "createdAt": "2024-10-01T11:22:38Z",
              "updatedAt": "2024-10-01T11:22:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1sFd",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:21:46Z",
          "updatedAt": "2024-10-19T18:21:47Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\nCMW itself provides no facilities for authenticity, integrity protection, or confidentiality.\r\n```",
              "createdAt": "2024-10-19T18:21:47Z",
              "updatedAt": "2024-10-19T18:21:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1sUm",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:22:52Z",
          "updatedAt": "2024-10-19T18:22:52Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nIt is the responsibility of the designer for each use case to determine the necessary security properties and implement them accordingly.\r\n```",
              "createdAt": "2024-10-19T18:22:52Z",
              "updatedAt": "2024-10-19T18:22:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1sWj",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:23:07Z",
          "updatedAt": "2024-10-19T18:23:08Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\nA secure channel (e.g., via TLS) or object-level security (e.g., using JWT) may suffice in some scenarios, but not in all.\r\n```",
              "createdAt": "2024-10-19T18:23:08Z",
              "updatedAt": "2024-10-19T18:23:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1szf",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:26:43Z",
          "updatedAt": "2024-10-19T18:26:43Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nAlthough originally designed to support layered Attester and composite device use cases, the CMW collection can be adapted for other scenarios that require the aggregation of RATS conceptual messages.\r\n```",
              "createdAt": "2024-10-19T18:26:43Z",
              "updatedAt": "2024-10-19T18:26:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1sz9",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:27:02Z",
          "updatedAt": "2024-10-19T18:27:03Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "```suggestion\r\nFor instance, collections may be used to group Endorsements, Reference Values, Attestation Results, and more.\r\n```",
              "createdAt": "2024-10-19T18:27:02Z",
              "updatedAt": "2024-10-19T18:27:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1s0_",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:27:45Z",
          "updatedAt": "2024-10-19T18:27:45Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nA single CMW collection can contain a mix of different message types, and it can also be used to carry messages related to multiple devices simultaneously.\r\n```",
              "createdAt": "2024-10-19T18:27:45Z",
              "updatedAt": "2024-10-19T18:27:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1s1c",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:27:57Z",
          "updatedAt": "2024-10-19T18:27:58Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-10-19T18:27:57Z",
              "updatedAt": "2024-10-19T18:27:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1tlc",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:34:52Z",
          "updatedAt": "2024-10-19T18:34:52Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "```suggestion\r\nThe definitions for these claims can be found in {{iana-jwt}} and {{iana-cwt}}, respectively.\r\n```",
              "createdAt": "2024-10-19T18:34:52Z",
              "updatedAt": "2024-10-19T18:34:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1uKR",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:36:56Z",
          "updatedAt": "2024-10-19T18:36:56Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "```suggestion\r\nTo facilitate the embedding of CMWs and CMW collections in CBOR-based protocols and web APIs, this document defines two `\"cmw\"` claims for use with JSON Web Tokens (JWT) and CBOR Web Tokens (CWT).\r\n```",
              "createdAt": "2024-10-19T18:36:56Z",
              "updatedAt": "2024-10-19T18:36:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1uRq",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:39:35Z",
          "updatedAt": "2024-10-19T18:39:35Z",
          "comments": [
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nThis section outlines the CMW extension designed to carry CMW objects.\r\n```",
              "createdAt": "2024-10-19T18:39:35Z",
              "updatedAt": "2024-10-19T18:39:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1uUW",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:40:39Z",
          "updatedAt": "2024-10-19T18:40:39Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "```suggestion\r\nThe use of CMW in CSRs is documented in {{-csr-a}}, while its application in X.509 Certificates and CRLs is detailed in Section 6.1 of {{DICE-arch}}.\r\n```",
              "createdAt": "2024-10-19T18:40:39Z",
              "updatedAt": "2024-10-19T18:40:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1uV4",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:41:28Z",
          "updatedAt": "2024-10-19T18:41:28Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "```suggestion\r\nThe CMW MUST include the serialized CMW object in either JSON or CBOR format, utilizing the appropriate CHOICE entry.\r\n```",
              "createdAt": "2024-10-19T18:41:28Z",
              "updatedAt": "2024-10-19T18:41:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1uq4",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:44:33Z",
          "updatedAt": "2024-10-19T18:44:34Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "```suggestion\r\nSection 6.1.8 of {{DICE-arch}} specifies the ConceptualMessageWrapper (CMW) format and its corresponding object identifier.\r\n```",
              "createdAt": "2024-10-19T18:44:33Z",
              "updatedAt": "2024-10-19T18:44:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1u7F",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:44:54Z",
          "updatedAt": "2024-10-19T18:44:55Z",
          "comments": [
            {
              "originalPosition": 186,
              "body": "```suggestion\r\nThe CMW format outlined in {{DICE-arch}} permits only a subset of the CMW grammar defined in this document.\r\n```",
              "createdAt": "2024-10-19T18:44:54Z",
              "updatedAt": "2024-10-19T18:44:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1u9t",
          "commit": {
            "abbreviatedOid": "cc0c401"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T18:45:06Z",
          "updatedAt": "2024-10-19T18:45:07Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "```suggestion\r\nIn particular, the tunnel and collection formats cannot be encoded using DICE CMWs.\r\n```",
              "createdAt": "2024-10-19T18:45:06Z",
              "updatedAt": "2024-10-19T18:45:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1zWc",
          "commit": {
            "abbreviatedOid": "c4e7309"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-19T19:27:31Z",
          "updatedAt": "2024-10-19T19:27:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 118,
      "id": "PR_kwDOIGCt2M59Hkvo",
      "title": "Allow plugging CMW into EAT submods",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/118",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-30T13:18:30Z",
      "updatedAt": "2024-10-20T11:11:03Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "fc07c04a07cf92e130a46753b088e7093a7ca9f3",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "cmw-in-submods",
      "headRefOid": "a849e6143be7e09f22d698c1e566c56869eac84f",
      "closedAt": "2024-10-20T11:11:00Z",
      "mergedAt": "2024-10-20T11:11:00Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "39e6c7720a94d78331684dff33a47b334169ccbe"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6LXCo5",
          "commit": {
            "abbreviatedOid": "701013c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T16:36:00Z",
          "updatedAt": "2024-09-30T16:51:45Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I don't understand why this text should be removed.",
              "createdAt": "2024-09-30T16:36:00Z",
              "updatedAt": "2024-09-30T16:51:45Z"
            },
            {
              "originalPosition": 50,
              "body": "I'm not sure what these lines are compelling me to do. Why aren't lines 292 - 294 sufficient to convey that expectation that security of the CMW isn't part of this document? The normative wording seems to contradict the previous paragraph. It seems to acknowledge an additional security consideration that an active attacker could drop portions of the collection - which is an attack that is reasonably covered in lines 292-294.",
              "createdAt": "2024-09-30T16:43:16Z",
              "updatedAt": "2024-09-30T16:51:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LYkbp",
          "commit": {
            "abbreviatedOid": "701013c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T20:09:11Z",
          "updatedAt": "2024-09-30T20:09:11Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "It's not removed, it's just been expanded in L269:\r\n\r\n> _\"To allow aggregation of multiple, potentially non-homogeneous evidence formats collected from different AEs, this document ...\"_",
              "createdAt": "2024-09-30T20:09:11Z",
              "updatedAt": "2024-09-30T20:09:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LYrff",
          "commit": {
            "abbreviatedOid": "701013c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T20:27:14Z",
          "updatedAt": "2024-09-30T20:27:14Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "This captures the third point from [Laurence's email](https://mailarchive.ietf.org/arch/msg/rats/hMz-UQMchfmGeXq7saLWToXvndk/):\r\n\r\n> _\"The third thing is discussion of security when the use case is attestation Evidence, in which case the full attestation security model is necessary (which is more than integrity protection or a CWT).\"_",
              "createdAt": "2024-09-30T20:27:14Z",
              "updatedAt": "2024-09-30T20:27:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LZKs5",
          "commit": {
            "abbreviatedOid": "701013c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T21:46:10Z",
          "updatedAt": "2024-09-30T21:46:10Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "The wording seems awkward. Is it different from: \"A CMW collection is subject to a variety of security threats such as insertion / removal of CMW contents, replay, misdirection, snooping, etc.\"",
              "createdAt": "2024-09-30T21:46:10Z",
              "updatedAt": "2024-09-30T21:46:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LZOAr",
          "commit": {
            "abbreviatedOid": "701013c"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-30T21:49:04Z",
          "updatedAt": "2024-09-30T21:49:04Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Since CMW doesn't define security mechanisms, it seems impossible for an implementer to satisfy the MUST requirement. I'm not sure what \"attestation oriented\" means. It reads like normative on some other spec besides this spec.",
              "createdAt": "2024-09-30T21:49:04Z",
              "updatedAt": "2024-09-30T21:49:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LxoEY",
          "commit": {
            "abbreviatedOid": "701013c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T09:01:47Z",
          "updatedAt": "2024-10-03T09:01:47Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "> Since CMW doesn't define security mechanisms, it seems impossible for an implementer to satisfy the MUST requirement.\r\n\r\nI agree that the MUST here is unenforceable.  I'll remove it and rephrase Laurence's point to keep the same \"strength of signal\" without bothering RFC2119. \r\n\r\n> I'm not sure what \"attestation oriented\" means. It reads like normative on some other spec besides this spec.\r\n\r\nHe means obeying https://www.rfc-editor.org/rfc/rfc9334.html#section-12.1",
              "createdAt": "2024-10-03T09:01:47Z",
              "updatedAt": "2024-10-03T09:01:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6LxozA",
          "commit": {
            "abbreviatedOid": "701013c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T09:03:17Z",
          "updatedAt": "2024-10-03T09:03:17Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Please see https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/118/commits/5c5928ada08d417c74e6321581bf2a0d8d3aab56",
              "createdAt": "2024-10-03T09:03:17Z",
              "updatedAt": "2024-10-03T09:03:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6N1x5F",
          "commit": {
            "abbreviatedOid": "5c5928a"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-19T19:20:44Z",
          "updatedAt": "2024-10-19T19:20:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 119,
      "id": "PR_kwDOIGCt2M5-MkKW",
      "title": "email update",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/119",
      "state": "MERGED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-10T10:08:38Z",
      "updatedAt": "2024-10-10T10:09:43Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "cf9af0e57036fec5174d36ad0084760badaef075",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "henks-email",
      "headRefOid": "d11fb744d73a6fa6e2587b58d8549d22b395f01d",
      "closedAt": "2024-10-10T10:09:39Z",
      "mergedAt": "2024-10-10T10:09:38Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "0292fc225f5acb3ce7465d336cf3acc2f7575d87"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6Mps1j",
          "commit": {
            "abbreviatedOid": "d11fb74"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-10T10:09:32Z",
          "updatedAt": "2024-10-10T10:09:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 120,
      "id": "PR_kwDOIGCt2M5_L4lG",
      "title": "Updated author info",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/120",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-19T17:16:33Z",
      "updatedAt": "2024-10-20T10:33:32Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "0292fc225f5acb3ce7465d336cf3acc2f7575d87",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "887a4df6b82161b8ddf9acc13a2566a5359c8008",
      "closedAt": "2024-10-20T10:33:29Z",
      "mergedAt": "2024-10-20T10:33:29Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "fc07c04a07cf92e130a46753b088e7093a7ca9f3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6N1xHO",
          "commit": {
            "abbreviatedOid": "887a4df"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-19T19:15:26Z",
          "updatedAt": "2024-10-19T19:15:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 121,
      "id": "PR_kwDOIGCt2M5_L_Zb",
      "title": "Re-wording of the paragraph",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/121",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-19T18:33:42Z",
      "updatedAt": "2024-10-20T16:01:04Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "d44568dae353c0b8c0220de1578b6d6fe4ca5e97",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "hannestschofenig-patch-2",
      "headRefOid": "3e7bf518b8c4b5f32752556350e2dd3cd42c3227",
      "closedAt": "2024-10-20T16:01:04Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6N1xGX",
          "commit": {
            "abbreviatedOid": "cea1277"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-19T19:15:01Z",
          "updatedAt": "2024-10-19T19:15:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 122,
      "id": "PR_kwDOIGCt2M5_OKDP",
      "title": "Collections: editorial massaging",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/122",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-20T11:22:39Z",
      "updatedAt": "2024-11-02T13:53:20Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "39e6c7720a94d78331684dff33a47b334169ccbe",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "bbc9472caa311c813cdaa26fdf5f9ef887a64ce6",
      "closedAt": "2024-11-02T13:53:17Z",
      "mergedAt": "2024-11-02T13:53:17Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "8b24bd6be9545c62ae635b18e7cb9221cc3b0314"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6PjvRa",
          "commit": {
            "abbreviatedOid": "5ae4e25"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-31T16:39:10Z",
          "updatedAt": "2024-10-31T16:39:11Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "The problem is not with \"compromised evidence\", but rather with \"evidence from a compromised device\"\r\n\r\n```suggestion\r\nbound to prevent an attacker from replacing Evidence from a compromised device with Evidence from a non-compromised device. The protection of authenticity and integrity\r\n```",
              "createdAt": "2024-10-31T16:39:11Z",
              "updatedAt": "2024-10-31T16:39:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6PjvkZ",
          "commit": {
            "abbreviatedOid": "bbc9472"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-31T16:39:39Z",
          "updatedAt": "2024-10-31T16:39:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 124,
      "id": "PR_kwDOIGCt2M6AJhFK",
      "title": "remove \"relation with EAT submods\" section",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/124",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This section is not needed anymore.",
      "createdAt": "2024-10-28T19:26:50Z",
      "updatedAt": "2024-11-02T16:55:26Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "39e6c7720a94d78331684dff33a47b334169ccbe",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "submods-cons",
      "headRefOid": "6ee030885456abd58bab731516268ba7d930d969",
      "closedAt": "2024-11-02T16:55:23Z",
      "mergedAt": "2024-11-02T16:55:22Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "c3c6c6464b891d64d9faf13b819a1b1d2b15bdf4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6PDX7R",
          "commit": {
            "abbreviatedOid": "10c9bc3"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-10-28T19:28:46Z",
          "updatedAt": "2024-10-28T19:28:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6PuNid",
          "commit": {
            "abbreviatedOid": "6ee0308"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-02T14:00:18Z",
          "updatedAt": "2024-11-02T14:00:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 126,
      "id": "PR_kwDOIGCt2M6ASpVJ",
      "title": "fix CBOR Tag CDDL",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/126",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #125",
      "createdAt": "2024-10-29T19:56:58Z",
      "updatedAt": "2024-11-02T16:55:06Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "39e6c7720a94d78331684dff33a47b334169ccbe",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "doublewrap",
      "headRefOid": "345e5c08f284ca662debc212e9b2036d8710134c",
      "closedAt": "2024-11-02T16:55:02Z",
      "mergedAt": "2024-11-02T16:55:02Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "cd4d282b62e3bda982cce74d1caf7c48992c10cc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6PuNi6",
          "commit": {
            "abbreviatedOid": "345e5c0"
          },
          "author": "hannestschofenig",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-02T14:00:33Z",
          "updatedAt": "2024-11-02T14:00:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 127,
      "id": "PR_kwDOIGCt2M6AuLcr",
      "title": "remove EAT submods plug ins",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/127",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on the [discussion thread](https://mailarchive.ietf.org/arch/msg/rats/rluJsmcttd5i9YWC8LmQwD9yL4A/) on the RATS ML, it looks like it's safer to remove the EAT plug-in at this point and let a future document deal with those.",
      "createdAt": "2024-11-03T10:41:44Z",
      "updatedAt": "2024-11-04T10:14:08Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "f4d4345490989f073017385b90ea73f715122e7e",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "remove-eat-plug",
      "headRefOid": "ba391c630015fcdc686fa2d40597e73a923b3acd",
      "closedAt": "2024-11-04T10:14:05Z",
      "mergedAt": "2024-11-04T10:14:05Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "75a6855140918bf9e753eb88c011b90ba1800532"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6Pzfqi",
          "commit": {
            "abbreviatedOid": "ba391c6"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-11-04T10:04:30Z",
          "updatedAt": "2024-11-04T10:04:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 128,
      "id": "PR_kwDOIGCt2M6AuOM4",
      "title": "Reorganize the list of encodings",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/128",
      "state": "CLOSED",
      "author": "ionut-arm",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-03T11:19:19Z",
      "updatedAt": "2024-11-15T10:58:45Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "c3c6c6464b891d64d9faf13b819a1b1d2b15bdf4",
      "headRepository": "ionut-arm/draft-ietf-rats-msg-wrap",
      "headRefName": "encoding-list",
      "headRefOid": "1bdb417175512cdada4275a8001cc9539af8431c",
      "closedAt": "2024-11-15T10:58:45Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "ionut-arm",
          "authorAssociation": "NONE",
          "body": "Closing this in favour of the less-invasive #141 ",
          "createdAt": "2024-11-15T10:58:45Z",
          "updatedAt": "2024-11-15T10:58:45Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6PwzCp",
          "commit": {
            "abbreviatedOid": "1bdb417"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-03T20:02:34Z",
          "updatedAt": "2024-11-03T20:02:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6RVQEn",
          "commit": {
            "abbreviatedOid": "1bdb417"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-15T10:42:51Z",
          "updatedAt": "2024-11-15T10:42:51Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "tunnels can wrap collections.",
              "createdAt": "2024-11-15T10:42:51Z",
              "updatedAt": "2024-11-15T10:52:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 130,
      "id": "PR_kwDOIGCt2M6Auldw",
      "title": "address IANA review",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/130",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-03T16:02:39Z",
      "updatedAt": "2024-11-04T09:28:33Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "c3c6c6464b891d64d9faf13b819a1b1d2b15bdf4",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "iana-review",
      "headRefOid": "68bc686879ceba2956ec1d6b916827ca4e38cdbb",
      "closedAt": "2024-11-04T09:28:33Z",
      "mergedAt": "2024-11-04T09:28:33Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "f4d4345490989f073017385b90ea73f715122e7e"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "Fix #129",
          "createdAt": "2024-11-03T16:21:07Z",
          "updatedAt": "2024-11-03T16:21:07Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6Pwy8j",
          "commit": {
            "abbreviatedOid": "68bc686"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-03T19:59:54Z",
          "updatedAt": "2024-11-03T19:59:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 131,
      "id": "PR_kwDOIGCt2M6Ax3oS",
      "title": "remove duplicate instructions for the RFC editor",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/131",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-04T10:24:03Z",
      "updatedAt": "2024-11-04T12:25:46Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "75a6855140918bf9e753eb88c011b90ba1800532",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "dup",
      "headRefOid": "06c24aff09a2d0cbdb04b8366b5d911a255af637",
      "closedAt": "2024-11-04T12:25:46Z",
      "mergedAt": "2024-11-04T12:25:46Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "7ee45c7a9662233b193bc91c8e06d3eba28272ed"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6P0jvU",
          "commit": {
            "abbreviatedOid": "06c24af"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-11-04T12:19:40Z",
          "updatedAt": "2024-11-04T12:19:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 134,
      "id": "PR_kwDOIGCt2M6BoF0j",
      "title": "CBOR tag numbers must be TN-derived",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/134",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-12T12:22:06Z",
      "updatedAt": "2024-11-15T08:54:44Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "7ee45c7a9662233b193bc91c8e06d3eba28272ed",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "tn-only",
      "headRefOid": "c38cc4395249d2836966527aacac8f63d0d4f16a",
      "closedAt": "2024-11-15T08:54:40Z",
      "mergedAt": "2024-11-15T08:54:40Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "42cbe35fe06ce68e995039e8b1a3e7831f98ac20"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "We didn't discuss the rationale for why it makes sense for a Content-ID that is from the \"standards\" range is mapped to a CBOR tag from the FCFS range. This seems wrong. An equivalent (\"alias\"?) value from one registry should have the same semantics in terms of standard/FCFS/experiential when mapped to another registry (for the same content but with different formatting). \r\n\r\nA mapping semantic that doesn't violate typing expectations would preserve the standards/FCFS/experimental designation across the various forms. ",
          "createdAt": "2024-11-12T18:03:40Z",
          "updatedAt": "2024-11-12T18:03:40Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> We didn't discuss the rationale for why it makes sense for a Content-ID that is from the \"standards\" range is mapped to a CBOR tag from the FCFS range.\r\n\r\nI don't understand why this is relavant.  Although, technically within the FCFS range, the TN space [1668546817, 1668612095] is a carve-out that can't be assigned anymore.  I think IANA missed (or wasn't properly instructed) to update the registry header to reflect that.\r\n\r\nIt should say:\r\n\r\nRange | Registration Procedures\r\n-- | --\r\n0-23 | Standards Action\r\n24-32767 | Specification Required\r\n32768-1668546816 | First Come First Served\r\n1668546817, 1668612095 | Reserved (TN-derived)\r\n1668612096-18446744073709551615 | First Come First Served\r\n\r\n",
          "createdAt": "2024-11-12T20:08:09Z",
          "updatedAt": "2024-11-12T20:08:09Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "Does it make sense to include the IANA correction in this draft?\r\n\r\nAlso, the Content Format (ct < 65025) covers the range of registration procedures from Expert Review to Experimental (though not the full range of experimental).  This means the TN-derived values will have differential vetting applied.\r\n\r\nIf a spec documents the TN derived value, it shouldn't (I don't think?) apply semantics that differ from the original vetting that was applied to the C-F registry.  In other words, a spec could be written that standardizes around a value that was vetted for experimental use. Are those desirable/undesirable semantics? It seems unintentional (if not undesirable).",
          "createdAt": "2024-11-12T20:27:41Z",
          "updatedAt": "2024-11-12T20:54:39Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "NONE",
          "body": "What 9277 Section 4.3 says is this:\r\n\r\n> 4.3. CBOR Tags for CoAP Content-Format Numbers\r\n> IANA allocated the tag numbers 1668546817 (0x63740101) to 1668612095 (0x6374ffff) as follows:\r\n\r\nClearly, these are *allocated* (assigned), not reserved.\r\nTrue, you can\u2019t *use* the allocation for a specific tag number before there is an assignment for the corresponding ct number, but that doesn\u2019t make the tag numbers in any way less allocated (assigned).\r\n\r\nI have no idea how these two assignment ranges (tag numbers 1668546817 (0x63740101) to 1668612095 (0x6374ffff), and content-format numbers 0..65024) are getting confused; they are linked by a formula, not by one registration policy somehow seeping over into the other space.\r\n\r\n",
          "createdAt": "2024-11-13T07:52:26Z",
          "updatedAt": "2024-11-13T07:52:26Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> What 9277 Section 4.3 says is this:\r\n> \r\n> > 4.3. CBOR Tags for CoAP Content-Format Numbers\r\n> > IANA allocated the tag numbers 1668546817 (0x63740101) to 1668612095 (0x6374ffff) as follows:\r\n> \r\n> Clearly, these are _allocated_ (assigned), not reserved. True, you can\u2019t _use_ the allocation for a specific tag number before there is an assignment for the corresponding ct number, but that doesn\u2019t make the tag numbers in any way less allocated (assigned).\r\n\r\nThank you for the clarification. I have some reservations (pun intended) about the use of terms\u2014the semantics of allocation versus assignment\u2014but I will refrain from going down that specific rabbit hole \ud83d\ude05\r\n\r\n> I have no idea how these two assignment ranges (tag numbers 1668546817 (0x63740101) to 1668612095 (0x6374ffff), and content-format numbers 0..65024) are getting confused; they are linked by a formula, not by one registration policy somehow seeping over into the other space.\r\n\r\n\ud83d\udc4d ",
          "createdAt": "2024-11-13T08:18:20Z",
          "updatedAt": "2024-11-13T08:18:20Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "body": "> they are linked by a formula, not by one registration policy somehow seeping over into the other space.\r\n\r\nI'm looking at it from the perspective of how it could be abused. Maybe others are looking at it from the perspective of how it is supposed to be used. Many of IANA registries have differential vetting requirements. If someone gets an assignment from the CF.Id using weaker vetting (say experimental), generates a TN tag then uses the tag in a standard somewhere else. The new standard essentially becomes the new vetting entity. Users of the TN tag likely would not be aware of the vetting differential, but if it did, the only way to know which vetting was applied is by reversing the TN algorithm, find the ct value, and review the CF registry. It seems unlikely parsers would do this just to check for vetting process differentials. Since the CBOR tags registry has already allocated TN tags, there's no risk that the CBOR tags registrar will assign the tag to something else. So, it's safe for new standard to use it. At the end of the day, IANA isn't providing vetting for a class of CBOR tags (neither by the CF or the CBOR tags registrars). They are only ensuring uniqueness. The real vetting is applied by the organization that is using the TN tag. If the goal is to centralize vetting to the CF registrar, this seems to only work if: (1) there is no differential in CF vetting rules. Or (2), if the ct values is somehow encoded with the TN CBOR tag: `CBOR_Tag = { ct, tn-cbor-tag }` and parsers check that the ct vetting is appropriate for the intended use. Or (3), the TN assigned values are partitioned according to the CF vetting that was applied. Then a range check of TN number removes the need for including ct in the CBOR_Tag. However, a different TN function would be needed. Or (4), as noted above, the TN tag is reversed to find the ct value.\r\n\r\nIf we conclude that none of this matters, then we are saying the vetting procedures aren't actually adding value. IANA's value is simply to guarantee unique names / numbers are assigned. \r\nRFC5226 says: \"an assigned value is being used for a different purpose than originally registered. IANA will not condone such misuse;\", but this presumes misuse is detectable.",
          "createdAt": "2024-11-14T18:38:41Z",
          "updatedAt": "2024-11-14T18:57:43Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> > they are linked by a formula, not by one registration policy somehow seeping over into the other space.\r\n> \r\n> I'm looking at it from the perspective of how it could be abused. Maybe others are looking at it from the perspective of how it is supposed to be used. Many of IANA registries have differential vetting requirements. If someone gets an assignment from the CF.Id using weaker vetting (say experimental), generates a TN tag then uses the tag in a standard somewhere else. The new standard essentially becomes the new vetting entity. Users of the TN tag likely would not be aware of the vetting differential (maybe it doesn't matter either?), but if it did, the only way to know which vetting was applied is by reversing the TN algorithm, find the ct value, and review the CF registry. It seems unlikely parsers would do this just to check for vetting process differentials. Since the CBOR tags registry has already allocated TN tags, there's no risk that the CBOR tags registrar will assign the tag to something else. So, it's safe for new standard to use it. At the end of the day, IANA isn't providing vetting for a class of CBOR tags (neither the CF or the CBOR tags registrars). They are only ensuring uniqueness. The real vetting is applied by the organization that is using the TN tag. If the goal is to centralize vetting to the CF registrar, this seems to only work if: (1) there is no differential in CF vetting rules. Or (2), if the ct values is somehow encoded with the TN CBOR tag: `CBOR_Tag = { ct, tn-cbor-tag }` and parsers check that the ct vetting is appropriate for the intended use. Or (3), the TN assigned values are partitioned according to the CF vetting that was applied. Then a range check of TN number removes the need for including ct in the CBOR_Tag. However, a different TN function would be needed.\r\n> \r\n> If we conclude that none of this matters, then we are saying the vetting procedures aren't actually adding value. IANA's value is simply to guarantee unique names / numbers are assigned.\r\n\r\nThere are loopholes in the C-F registration process that allow accidental abuse.  We discovered it first-hand :-)\r\n\r\nThat's simply a bug that must be fixed, and [we are going to fix it](https://thomas-fossati.github.io/draft-cf-reg-update/draft-fossati-core-cf-reg-update.html).\r\n\r\nOnce the registration procedure is tightened, as it should be, we'll have a single entry point at which all the vetting is applied consistently and correctly. This is sensibly better than having multiple separate vetting places.\r\n\r\n",
          "createdAt": "2024-11-14T19:12:59Z",
          "updatedAt": "2024-11-15T08:54:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6RM_OY",
          "commit": {
            "abbreviatedOid": "c38cc43"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "I am okay with TN tags \"used as CMW\" (\ud83d\ude44) only in this context.",
          "createdAt": "2024-11-14T13:34:40Z",
          "updatedAt": "2024-11-14T13:35:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6RQzBv",
          "commit": {
            "abbreviatedOid": "c38cc43"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-14T20:08:21Z",
          "updatedAt": "2024-11-14T20:08:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 136,
      "id": "PR_kwDOIGCt2M6CBO0J",
      "title": "Add Dionna to the editors' list",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/136",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-15T08:51:23Z",
      "updatedAt": "2024-11-15T16:50:41Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "7ee45c7a9662233b193bc91c8e06d3eba28272ed",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "add-dionna",
      "headRefOid": "cf0f56398b62f11f1bdb8604ce860b53697b2019",
      "closedAt": "2024-11-15T16:50:38Z",
      "mergedAt": "2024-11-15T16:50:37Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "53befb2df4261bba5f9299cb1225930e7fc53bee"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze ",
          "createdAt": "2024-11-15T08:51:45Z",
          "updatedAt": "2024-11-15T08:51:45Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "LGTM",
          "createdAt": "2024-11-15T16:02:49Z",
          "updatedAt": "2024-11-15T16:02:49Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6RYQTN",
          "commit": {
            "abbreviatedOid": "cf0f563"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "of course! Thanks",
          "createdAt": "2024-11-15T16:07:59Z",
          "updatedAt": "2024-11-15T16:07:59Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6RYcy3",
          "commit": {
            "abbreviatedOid": "cf0f563"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T16:29:02Z",
          "updatedAt": "2024-11-15T16:29:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 138,
      "id": "PR_kwDOIGCt2M6CBeU-",
      "title": "fix: PKIX modules downrefs",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/138",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #137",
      "createdAt": "2024-11-15T09:27:20Z",
      "updatedAt": "2024-11-15T16:58:10Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "42cbe35fe06ce68e995039e8b1a3e7831f98ac20",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "fix-downrefs",
      "headRefOid": "3ea3afa2144bd046700c94f13d9809af3913e91e",
      "closedAt": "2024-11-15T16:58:06Z",
      "mergedAt": "2024-11-15T16:58:06Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "1f16abb89944ad828fb37b819043264136b71aff"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze ",
          "createdAt": "2024-11-15T16:51:21Z",
          "updatedAt": "2024-11-15T16:51:21Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6RYq1x",
          "commit": {
            "abbreviatedOid": "3ea3afa"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T16:54:25Z",
          "updatedAt": "2024-11-15T16:54:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6RYrlW",
          "commit": {
            "abbreviatedOid": "3ea3afa"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T16:56:07Z",
          "updatedAt": "2024-11-15T16:56:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 139,
      "id": "PR_kwDOIGCt2M6CBzVl",
      "title": "fix: consistent use of the term \"tag\"",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/139",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #133 ",
      "createdAt": "2024-11-15T10:14:25Z",
      "updatedAt": "2024-11-15T18:30:04Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "42cbe35fe06ce68e995039e8b1a3e7831f98ac20",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "tag-nits",
      "headRefOid": "1cf615fd12573dac3f03bef5203ff90ba73318d8",
      "closedAt": "2024-11-15T18:30:00Z",
      "mergedAt": "2024-11-15T18:30:00Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "e259ac77ca5897ca8b7a451923e8273eb277bfbe"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze ",
          "createdAt": "2024-11-15T16:51:35Z",
          "updatedAt": "2024-11-15T16:51:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6RVC0q",
          "commit": {
            "abbreviatedOid": "63a2ee1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-15T10:15:05Z",
          "updatedAt": "2024-11-15T10:15:06Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nCMW of type CBOR Tag derive their tag numbers from a corresponding CoAP Content-Format ID using the `TN()` transform defined in {{Appendix B of RFC9277}}.\r\n```",
              "createdAt": "2024-11-15T10:15:05Z",
              "updatedAt": "2024-11-15T10:15:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6RYvEw",
          "commit": {
            "abbreviatedOid": "1cf615f"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T17:02:28Z",
          "updatedAt": "2024-11-15T17:02:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6RZC5d",
          "commit": {
            "abbreviatedOid": "1cf615f"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T17:38:03Z",
          "updatedAt": "2024-11-15T17:38:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 140,
      "id": "PR_kwDOIGCt2M6CB6Km",
      "title": "fix: remove contraddictory prose from the examples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/140",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #132 ",
      "createdAt": "2024-11-15T10:31:02Z",
      "updatedAt": "2024-11-15T17:16:15Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "42cbe35fe06ce68e995039e8b1a3e7831f98ac20",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "json-cf",
      "headRefOid": "e27bfc05f1c49d16876b54cf8087526470df107c",
      "closedAt": "2024-11-15T17:16:13Z",
      "mergedAt": "2024-11-15T17:16:13Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "2f05921a5a40703b97658010044ef37b54f834b0"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze ",
          "createdAt": "2024-11-15T16:51:47Z",
          "updatedAt": "2024-11-15T16:51:47Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6RYt_4",
          "commit": {
            "abbreviatedOid": "e27bfc0"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T17:00:39Z",
          "updatedAt": "2024-11-15T17:00:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6RYu_4",
          "commit": {
            "abbreviatedOid": "e27bfc0"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T17:02:17Z",
          "updatedAt": "2024-11-15T17:02:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 141,
      "id": "PR_kwDOIGCt2M6CCESd",
      "title": "fix: attempt at clarifying ambiguity re: what types are defined",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/141",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is an alternative to #128",
      "createdAt": "2024-11-15T10:55:50Z",
      "updatedAt": "2024-11-15T19:44:08Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "42cbe35fe06ce68e995039e8b1a3e7831f98ac20",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "ionut-alt",
      "headRefOid": "665664907a38f5fedcecf5eb408d4730c8ad5566",
      "closedAt": "2024-11-15T19:44:04Z",
      "mergedAt": "2024-11-15T19:44:04Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "f86ca9f9555ad035813d32f0f3261fac57ffac2b"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @ionut-arm",
          "createdAt": "2024-11-15T10:56:25Z",
          "updatedAt": "2024-11-15T10:56:25Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze ",
          "createdAt": "2024-11-15T16:52:01Z",
          "updatedAt": "2024-11-15T16:52:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6RYq59",
          "commit": {
            "abbreviatedOid": "9ecffc9"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T16:54:35Z",
          "updatedAt": "2024-11-15T16:54:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6RYuSw",
          "commit": {
            "abbreviatedOid": "9ecffc9"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-15T17:01:07Z",
          "updatedAt": "2024-11-15T17:01:07Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "What does \u201cbasic\u201d add? Is there an \u201cadvanced\u201d? What would the difference be?",
              "createdAt": "2024-11-15T17:01:07Z",
              "updatedAt": "2024-11-15T17:01:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6RY4qB",
          "commit": {
            "abbreviatedOid": "9ecffc9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-15T17:15:22Z",
          "updatedAt": "2024-11-15T17:15:22Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think of basic in terms of growing complexity.\r\n\r\nThe resulting flow is:\r\n\r\n> _Two _basic_ types are specified ... a further CMW \"collection\" type that holds together multiple CMW items ... and a CMW \"tunnel\" type is also defined [...] to allow transporting CBOR CMWs in JSON collections and vice-versa._",
              "createdAt": "2024-11-15T17:15:22Z",
              "updatedAt": "2024-11-15T17:15:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6RZAwz",
          "commit": {
            "abbreviatedOid": "9ecffc9"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-15T17:32:48Z",
          "updatedAt": "2024-11-15T17:32:57Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The text following this sentence enumerates two of the three encodings (CBOR, JSON, ASN.1/DER) for the first \"CMW\" type.\r\n\r\nThe sentence following describes the \"CMW Collection\" type and a third CMW tunnel type. \r\n\r\nIt would be easier to read if the content related to types was grouped together and the content related to encoding was complete and grouped together.",
              "createdAt": "2024-11-15T17:32:48Z",
              "updatedAt": "2024-11-15T17:33:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6RZEZ1",
          "commit": {
            "abbreviatedOid": "9ecffc9"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-15T17:41:40Z",
          "updatedAt": "2024-11-15T17:41:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Reading Ned's comment I finally understand what this means. I would say that since CMW is a tree structure, the leaf types are what you're describing as \"basic types\". When I see \"basic\" in text, I just feel like the author is taunting me with what they find easy to understand in a sea of complexity.",
              "createdAt": "2024-11-15T17:41:41Z",
              "updatedAt": "2024-11-15T17:41:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6RZOrB",
          "commit": {
            "abbreviatedOid": "9ecffc9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-15T18:02:41Z",
          "updatedAt": "2024-11-15T18:02:41Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Please suggest wording that works for someone coming here with a fresh pair of eyes.\r\nI have read it so many times that I can no longer be that person, unfortunately.",
              "createdAt": "2024-11-15T18:02:41Z",
              "updatedAt": "2024-11-15T18:02:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6RZRYN",
          "commit": {
            "abbreviatedOid": "9ecffc9"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-11-15T18:09:08Z",
          "updatedAt": "2024-11-15T18:12:46Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nA RATS Conceptual Message Wrapper (CMW) has a tree structure of leaves that contain payload messages associated with their content type.\r\nThe two leaf node types are\r\n```\r\n\r\nBelow the enumeration, I'd say \"Intermediate tree nodes are either a \"collection\" type or a \"tunnel\" type:\" and put the descriptive sentences in their own enumeration as well.",
              "createdAt": "2024-11-15T18:09:08Z",
              "updatedAt": "2024-11-15T18:12:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6RZaL5",
          "commit": {
            "abbreviatedOid": "9ecffc9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-15T18:28:47Z",
          "updatedAt": "2024-11-15T18:28:48Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "OK, thanks.  Done in 092be4e and 6656649",
              "createdAt": "2024-11-15T18:28:48Z",
              "updatedAt": "2024-11-15T18:28:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6RZqrH",
          "commit": {
            "abbreviatedOid": "6656649"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T19:11:42Z",
          "updatedAt": "2024-11-15T19:11:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 142,
      "id": "PR_kwDOIGCt2M6CDNOI",
      "title": "fix: examples",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/142",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #116 ",
      "createdAt": "2024-11-15T13:53:38Z",
      "updatedAt": "2024-11-15T17:10:26Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "42cbe35fe06ce68e995039e8b1a3e7831f98ac20",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "examples",
      "headRefOid": "012f5f14bfd408107005d6aa718d6893cb6e32b0",
      "closedAt": "2024-11-15T17:10:21Z",
      "mergedAt": "2024-11-15T17:10:21Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "a3c279db1c082c2fdc71c68d0725d99dca5f95b0"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze ",
          "createdAt": "2024-11-15T16:52:13Z",
          "updatedAt": "2024-11-15T16:52:13Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6RYrzN",
          "commit": {
            "abbreviatedOid": "012f5f1"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T16:56:35Z",
          "updatedAt": "2024-11-15T16:56:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6RYtIc",
          "commit": {
            "abbreviatedOid": "012f5f1"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I assume the TN tags and signature bits are correct. I didn't double check them.",
          "createdAt": "2024-11-15T16:59:07Z",
          "updatedAt": "2024-11-15T16:59:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 143,
      "id": "PR_kwDOIGCt2M6CF7lN",
      "title": "fix: CMW description",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/143",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #123 ",
      "createdAt": "2024-11-15T21:15:31Z",
      "updatedAt": "2024-11-16T05:38:02Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "f86ca9f9555ad035813d32f0f3261fac57ffac2b",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "encodings",
      "headRefOid": "e3b113294d74b33f08e299175472bd0f0e4685df",
      "closedAt": "2024-11-16T05:37:58Z",
      "mergedAt": "2024-11-16T05:37:58Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "d3e052f26f19deb167de0159b1690f0869edffe7"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze ",
          "createdAt": "2024-11-15T21:15:47Z",
          "updatedAt": "2024-11-15T21:15:47Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6Rbulr",
          "commit": {
            "abbreviatedOid": "e3b1132"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-15T23:55:11Z",
          "updatedAt": "2024-11-15T23:55:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6Rc7-O",
          "commit": {
            "abbreviatedOid": "e3b1132"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-16T03:21:14Z",
          "updatedAt": "2024-11-16T03:21:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 145,
      "id": "PR_kwDOIGCt2M6CIpu_",
      "title": "fix: use IANA preferred terminology",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/145",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #144 ",
      "createdAt": "2024-11-16T17:27:53Z",
      "updatedAt": "2024-11-16T19:22:39Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "d3e052f26f19deb167de0159b1690f0869edffe7",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "iana-fixes",
      "headRefOid": "c337f67de52c7efd99b3af5da34431fb8624201e",
      "closedAt": "2024-11-16T19:22:36Z",
      "mergedAt": "2024-11-16T19:22:36Z",
      "mergedBy": "thomas-fossati",
      "mergeCommit": {
        "oid": "941d98e6bdd6147d202348f7f224fe93fd968f2c"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "cc @deeglaze \r\ncc @cabo\r\n",
          "createdAt": "2024-11-16T17:28:16Z",
          "updatedAt": "2024-11-16T17:28:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6Re3Nt",
          "commit": {
            "abbreviatedOid": "c337f67"
          },
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-16T18:42:24Z",
          "updatedAt": "2024-11-16T18:42:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOIGCt2M6Re4tU",
          "commit": {
            "abbreviatedOid": "c337f67"
          },
          "author": "nedmsmith",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-16T19:21:51Z",
          "updatedAt": "2024-11-16T19:21:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 146,
      "id": "PR_kwDOIGCt2M6CIw9Y",
      "title": "what to check when assigning new CoAP C-Fs based on `application/cmw`",
      "url": "https://github.com/ietf-rats-wg/draft-ietf-rats-msg-wrap/pull/146",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Response attempt at @cabo's question: _\"How do application/cmw+cbor with cmwc_t parameters get Content format numbers?\"_\r\n",
      "createdAt": "2024-11-16T19:04:32Z",
      "updatedAt": "2024-11-20T09:16:44Z",
      "baseRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "baseRefName": "main",
      "baseRefOid": "941d98e6bdd6147d202348f7f224fe93fd968f2c",
      "headRepository": "ietf-rats-wg/draft-ietf-rats-msg-wrap",
      "headRefName": "cf-help",
      "headRefOid": "21de6aed790b368a343db42b51de9f743a56d7f1",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The intermediate node types for composite CMWs are not tagged. If we want to allow reflection on the CoAP content-format ID that is assigned, then we should add that specifically to the intermediate node type, and that only compound CMWs are allowed to be tagged this way.\r\n\r\n> When assigning a new CoAP Content-Format ID for a CMW media type that utilizes the `cmwc_t` parameter, the registrar must check (directly or through the Designated Expert) that:\r\n\r\nAre you asking for specifically a CoAP Content-Format `application/cmw+cbor;cmwc_t=<x>` (or contains other permutations of parameter assignments) follow this? Does the contained compound cmw not require representation of the __cmwc_t key at that point? Also `application/cmw+cbor` without a parameter may still contain the key, yes?\r\n\r\nSide note: is the `cmw` claim expected to be used instead of the `measurements` claim containing a CMW?",
          "createdAt": "2024-11-17T21:58:59Z",
          "updatedAt": "2024-11-17T21:58:59Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> The intermediate node types for composite CMWs are not tagged. If we want to allow reflection on the CoAP content-format ID that is assigned, then we should add that specifically to the intermediate node type, and that only compound CMWs are allowed to be tagged this way.\r\n\r\nCan you illustrate this with an example?\r\n\r\n> > When assigning a new CoAP Content-Format ID for a CMW media type that utilizes the `cmwc_t` parameter, the registrar must check (directly or through the Designated Expert) that:\r\n> \r\n> Are you asking for specifically a CoAP Content-Format `application/cmw+cbor;cmwc_t=<x>` [...] follow this?\r\n\r\nYes, the scope of this is purely collections which are explicitly typed.\r\n\r\n> (or contains other permutations of parameter assignments)\r\n\r\nThere are no other possible permutations because `application/cmw+cbor` and `application/cmw+json` only allow one parameter.\r\n\r\n> Does the contained compound cmw not require representation of the __cmwc_t key at that point?\r\n\r\nYes - although that's irrelevant from the C-F registrar's point of view.\r\n\r\n> Also `application/cmw+cbor` without a parameter may still contain the key, yes?\r\n\r\nYes - ditto.\r\n\r\n> Side note: is the `cmw` claim expected to be used instead of the `measurements` claim containing a CMW?\r\n\r\nYes.\r\n",
          "createdAt": "2024-11-18T07:56:31Z",
          "updatedAt": "2024-11-18T07:56:31Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > The intermediate node types for composite CMWs are not tagged. If we want to allow reflection on the CoAP content-format ID that is assigned, then we should add that specifically to the intermediate node type, and that only compound CMWs are allowed to be tagged this way.\r\n> \r\n> Can you illustrate this with an example?\r\n> \r\n\r\nIt may be easier to bring back the application/cmw-collection+cbor Content-Type to account for this flip-flopping.\r\n\r\nWe have to separate the top level CMW from any intermediate CMW to ensure that we don't have boundless recursion of CoAP format ID tags for application/cmw+cbor. Let `tbd` be the assigned CoAP format ID for application/cmw+cbor without a parameter.\r\n```\r\nstart = cmw / cbor-tagged-cbor<tbd, cmw>\r\n```\r\n\r\nNext we say that a leaf node may not use a CoAP format ID for a CMW itself. That's reserved for an intermediate node.\r\n```\r\nThe two leaf node types are:\r\n\r\n* A CMW using a CBOR or JSON record ([Section 3.1](https://ietf-rats-wg.github.io/draft-ietf-rats-msg-wrap/draft-ietf-rats-msg-wrap.html#type-n-val));\r\n\r\n* A CMW based on CBOR tags ([Section 3.2](https://ietf-rats-wg.github.io/draft-ietf-rats-msg-wrap/draft-ietf-rats-msg-wrap.html#cbor-tag)) for non-CMW CoAP format ID.\r\n```\r\n\r\nWe can allow for a CoAP format ID tag to name a collection that is either all in json (to not have to tunnel all leaves), or to make the cmwc_t more concise.\r\n```\r\ncbor-collection = #6.166854????(cddl-for-text-encoding-of-json-collection) / cbor-tagged-cbor<166854????, cbor-cmw-collection-map> / cbor-cmw-collection-map\r\ncbor-cmw-collection-map = {\r\n  ? \"__cmwc_t\": ~uri / oid\r\n  + &(label: (int / text)) => cbor-cmw / j2c-tunnel\r\n}\r\n```\r\n\r\nI don't know how to say that the wrapped type is a `tstr` that parses as JSON matching `json-collection`, since there's no `.json` directive the way there's a `.cbor` directive. Caaaaarl!",
          "createdAt": "2024-11-18T16:46:01Z",
          "updatedAt": "2024-11-18T16:46:01Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "> [...] to ensure that we don't have *boundless recursion* of CoAP format ID tags for application/cmw+cbor\r\n\r\nIs this a problem in practice?",
          "createdAt": "2024-11-18T20:47:08Z",
          "updatedAt": "2024-11-18T20:47:35Z"
        },
        {
          "author": "deeglaze",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > [...] to ensure that we don't have _boundless recursion_ of CoAP format ID tags for application/cmw+cbor\r\n> \r\n> Is this a problem in practice?\r\n\r\nNever underestimate the failure modes of system integrations. If we want to recognize the tree structure under the tagged collection type, it should be clear that you only have to go through one tag to get to the map.",
          "createdAt": "2024-11-18T21:19:42Z",
          "updatedAt": "2024-11-18T21:19:42Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "body": "OK, so here's an example JSON collection with a plain-old CMW leaf, a tunnelled CMW CBOR collection and a JSON sub-collection:\r\n\r\n```\r\ncollection\r\n \u2502\u00a0media type: application/cmw+json; cmwc_t=\"tag:ietf.org,2024:X\"\r\n \u2502\u00a0value: N/A\r\n \u2502\u00a0collection type: tag:ietf.org,2024:X\r\n \u2502\u00a0collection key: N/A\r\n \u2502\r\n \u251c\u2500\u2500 leaf node\r\n \u2502   \u2502 media type: application/eat-ucs+cbor\r\n \u2502\u00a0  \u2502 value: b64u(0xa10a...)\r\n \u2502\u00a0  \u2502 collection type: N/A\r\n \u2502\u00a0  \u2502 collection key: \"bretwaldadom\"\r\n \u2502\r\n \u251c\u2500\u2500 collection\r\n \u2502   \u2502 media type: application/cmw+json; cmwc_t=\"tag:ietf.org,2024:Y\"\r\n \u2502   \u2502 value: N/A\r\n \u2502   \u2502 collection type: tag:ietf.org,2024:Y\r\n \u2502   \u2502 collection key: \"murmurless\"\r\n \u2502\u00a0  \u2502\r\n \u2502\u00a0\u00a0 \u2514\u2500\u2500 leaf node\r\n \u2502\u00a0      \u2502 media type: application/eat-ucs+json\r\n \u2502\u00a0      \u2502 value: b64u({\"eat_nonce\": ...})\r\n \u2502\u00a0      \u2502 collection type: N/A\r\n \u2502\u00a0      \u2502 collection key: \"polyscopic\"\r\n \u2502\r\n \u2514\u2500\u2500 tunnel node\r\n     \u2502\u00a0type: #c2j-tunnel\r\n     \u2502\u00a0value: b64u(0xa1008219...)\r\n     \u2502\u00a0collection type: N/A\r\n     \u2502\u00a0collection key: \"photelectrograph\"\r\n```\r\n\r\nIt's not impossible that a real composite device would produce something similar to this.\r\n\r\nCould you tell me where you think the type system breaks?  (Feel free to tweak it to illustrate your case.)\r\n\r\n(I could create a very similar CBOR collection if needed.)\r\n\r\n",
          "createdAt": "2024-11-19T10:44:44Z",
          "updatedAt": "2024-11-19T14:15:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGCt2M6R6LW4",
          "commit": {
            "abbreviatedOid": "21de6ae"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T09:04:58Z",
          "updatedAt": "2024-11-20T09:04:59Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "We may also consider requiring that content coding is \"identity\".  This would make it safer - avoiding e.g., decompression-related attacks.",
              "createdAt": "2024-11-20T09:04:59Z",
              "updatedAt": "2024-11-20T09:04:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6R6M3a",
          "commit": {
            "abbreviatedOid": "21de6ae"
          },
          "author": "cabo",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T09:07:19Z",
          "updatedAt": "2024-11-20T09:07:19Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Requiring for what?  C-f registrations with content codings need to be possible.",
              "createdAt": "2024-11-20T09:07:19Z",
              "updatedAt": "2024-11-20T09:07:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGCt2M6R6VUy",
          "commit": {
            "abbreviatedOid": "21de6ae"
          },
          "author": "thomas-fossati",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T09:16:43Z",
          "updatedAt": "2024-11-20T09:16:44Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "> C-f registrations with content codings need to be possible.\r\n\r\nSure, in general.  But we may decide that RATS-related payloads have this restriction.",
              "createdAt": "2024-11-20T09:16:43Z",
              "updatedAt": "2024-11-20T09:16:44Z"
            }
          ]
        }
      ]
    }
  ]
}